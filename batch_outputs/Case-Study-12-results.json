[
{
    "case_number": "12",
    "batch_number": "2",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an authorized device (e.g., emonTx) to send false data to the emonPi.",
            "Assumptions": [
                {
                    "Assumption": "MQTT protocol does not enforce strict authentication and authorization.",
                    "Role": "System Designer",
                    "Condition": "MQTT is implemented without additional security measures."
                },
                {
                    "Assumption": "Attacker has network access to the MQTT broker.",
                    "Role": "Network Administrator",
                    "Condition": "Network perimeter defenses are not sufficiently robust."
                }
            ],
            "Potential Impact": "Unauthorized disclosure, tampering, and disruption of data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "injection",
                "MQTT"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker leverages weak or missing authentication mechanisms in the WiFi MQTT Relay to send unauthorized control commands.",
            "Assumptions": [
                {
                    "Assumption": "WiFi MQTT Relay lacks strong authentication mechanisms.",
                    "Role": "Device Manufacturer",
                    "Condition": "Manufacturing process does not include secure authentication."
                },
                {
                    "Assumption": "Attacker is within range of the WiFi network.",
                    "Role": "Attacker",
                    "Condition": "Attacker can detect and connect to the network."
                }
            ],
            "Potential Impact": "Unauthorized control of home devices leading to potential safety concerns.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "WiFi",
                "control",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor impersonates a legitimate user to access the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "User authentication lacks multi-factor authentication (MFA).",
                    "Role": "System Designer",
                    "Condition": "System only uses password-based authentication."
                },
                {
                    "Assumption": "Attacker has access to legitimate user credentials.",
                    "Role": "User",
                    "Condition": "Credentials are compromised through phishing or other means."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and potential manipulation or deletion of data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "web application",
                "credential",
                "user",
                "access"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on emonTx modules to send incorrect data on power consumption.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not securely signed or verified.",
                    "Role": "Device Manufacturer",
                    "Condition": "Firmware can be modified without detection."
                },
                {
                    "Assumption": "Attacker has physical access to the device.",
                    "Role": "Attacker",
                    "Condition": "Devices are installed in an accessible location."
                }
            ],
            "Potential Impact": "Integrity of energy usage data is compromised, leading to incorrect energy management decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device",
                "data",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a MySQL vulnerability in the EmonCMS application to alter or delete stored data.",
            "Assumptions": [
                {
                    "Assumption": "MySQL is not updated to the latest secure version.",
                    "Role": "System Administrator",
                    "Condition": "Database maintenance is not regularly performed."
                },
                {
                    "Assumption": "Attacker has access to the network where MySQL is hosted.",
                    "Role": "Network Administrator",
                    "Condition": "Weak network security controls."
                }
            ],
            "Potential Impact": "Compromise of data integrity and availability within the monitoring system.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "MySQL",
                "web application",
                "data"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates MQTT messages in transit to inject false information into the OEM system.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not encrypted (e.g., using TLS).",
                    "Role": "System Designer",
                    "Condition": "Communication protocol lacks encryption."
                },
                {
                    "Assumption": "Attacker has access to the network paths used by MQTT messages.",
                    "Role": "Network Administrator",
                    "Condition": "Network paths are not securely controlled."
                }
            ],
            "Potential Impact": "Disruption of system operation and misreporting of data affecting decision-making.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MQTT",
                "network",
                "message",
                "injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending specific control commands to devices via the WiFi MQTT Relay.",
            "Assumptions": [
                {
                    "Assumption": "System lacks proper logging and audit trails for actions performed.",
                    "Role": "System Administrator",
                    "Condition": "System does not implement comprehensive logging mechanisms."
                },
                {
                    "Assumption": "No mechanisms are in place to verify the origin of commands.",
                    "Role": "System Designer",
                    "Condition": "Control commands are not signed or traceable to specific users."
                }
            ],
            "Potential Impact": "Inability to hold users accountable for actions, leading to potential misuse and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "control",
                "logging",
                "audit",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies modifying stored data on emonPi after gaining unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "System does not have tamper-evident logging for data modifications.",
                    "Role": "System Administrator",
                    "Condition": "Logging mechanisms are not tamper-resistant."
                },
                {
                    "Assumption": "Access controls are not sufficiently monitored.",
                    "Role": "IT Security",
                    "Condition": "Inadequate monitoring of access logs."
                }
            ],
            "Potential Impact": "Difficulty in detecting and proving unauthorized actions, impacting data integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "access",
                "modification",
                "logging",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user claims they did not make certain configuration changes via EmonCMS, impacting system behavior.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes do not generate audit trails.",
                    "Role": "System Designer",
                    "Condition": "System lacks detailed logging of configuration changes."
                },
                {
                    "Assumption": "No secure authentication for configuration changes.",
                    "Role": "System Administrator",
                    "Condition": "Changes can be made without verification."
                }
            ],
            "Potential Impact": "Misconfiguration leading to operational issues and difficulty in tracing responsible actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration",
                "logging",
                "audit",
                "system behavior"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Autostart Execution",
                "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",
                "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
                "technique_id": "T1547"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted MQTT messages containing sensitive energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communication is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Messages are sent in plaintext without SSL/TLS."
                },
                {
                    "Assumption": "Attacker has access to network traffic between devices.",
                    "Role": "Network Administrator",
                    "Condition": "Network traffic can be eavesdropped on."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information such as energy usage patterns.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MQTT",
                "network",
                "unencrypted",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A vulnerability in MySQL allows unauthorized access to stored energy data without proper authentication.",
            "Assumptions": [
                {
                    "Assumption": "MySQL is configured with default or weak credentials.",
                    "Role": "System Administrator",
                    "Condition": "Default configuration is not hardened."
                },
                {
                    "Assumption": "System is internet-facing and an attacker can discover the database endpoint.",
                    "Role": "Network Administrator",
                    "Condition": "Database is publicly accessible."
                }
            ],
            "Potential Impact": "Sensitive energy data is exposed to unauthorized access and potential misuse.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database",
                "MySQL",
                "unauthorized access",
                "data"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the EmonCMS web application to exfiltrate user data.",
            "Assumptions": [
                {
                    "Assumption": "Web application is vulnerable to injection or XSS attacks.",
                    "Role": "Web Developer",
                    "Condition": "Input validation and sanitization are not properly implemented."
                },
                {
                    "Assumption": "Sensitive data is stored and accessible via the web application.",
                    "Role": "System Designer",
                    "Condition": "User data is not adequately protected within the application."
                }
            ],
            "Potential Impact": "Exposure of personal and usage data of users to unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "web application",
                "vulnerability",
                "injection",
                "user data"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overloads the MQTT broker with excessive message traffic, causing a denial of service.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not have rate limiting or message queue thresholds.",
                    "Role": "System Designer",
                    "Condition": "Broker is set up without resource usage constraints."
                },
                {
                    "Assumption": "Attacker can send large volumes of traffic to the broker.",
                    "Role": "Network Administrator",
                    "Condition": "External network traffic is not adequately filtered or controlled."
                }
            ],
            "Potential Impact": "Disruption of communication between devices, leading to loss of control and monitoring capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "broker",
                "excessive traffic",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of a MySQL vulnerability causes the database server to crash, disrupting the EmonCMS.",
            "Assumptions": [
                {
                    "Assumption": "MySQL is not patched for known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Regular updates and patches are not applied."
                },
                {
                    "Assumption": "Attacker has access to network or credentials to exploit MySQL.",
                    "Role": "Network Administrator",
                    "Condition": "Weak security controls around network access to the database."
                }
            ],
            "Potential Impact": "Inaccessibility of the EmonCMS web application and disruption of data logging and retrieval functions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "database",
                "MySQL",
                "vulnerability",
                "crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Usage of malformed or excessive requests to the EmonCMS, leading to resource exhaustion and service interruption.",
            "Assumptions": [
                {
                    "Assumption": "Web application does not have input rate limiting or protection against resource exhaustion attacks.",
                    "Role": "Web Developer",
                    "Condition": "Application lacks mechanisms to handle high loads or malformed input."
                },
                {
                    "Assumption": "Attacker can send traffic to the EmonCMS endpoint.",
                    "Role": "Network Administrator",
                    "Condition": "Endpoint is accessible without proper filtering."
                }
            ],
            "Potential Impact": "Interruption of the web service, affecting users' ability to access energy monitoring data and controls.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "web application",
                "resource exhaustion",
                "high load",
                "network"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user exploits a configuration flaw in the EmonCMS to gain administrative privileges without proper authorization.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are misconfigured, allowing privilege escalation.",
                    "Role": "System Administrator",
                    "Condition": "User roles and permissions are not properly configured."
                },
                {
                    "Assumption": "Vulnerability or misconfiguration is present in the web application.",
                    "Role": "Web Developer",
                    "Condition": "Code or configuration contains flaws allowing escalation."
                }
            ],
            "Potential Impact": "Unauthorized access to administrative functionalities, potentially causing system misuse or compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "configuration",
                "web application",
                "access control",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a known vulnerability in the Raspberry Pi OS to gain root access on emonPi or emonBase.",
            "Assumptions": [
                {
                    "Assumption": "Raspberry Pi OS is not kept up to date with latest security patches.",
                    "Role": "System Administrator",
                    "Condition": "Devices are not regularly updated."
                },
                {
                    "Assumption": "Attacker has initial access to the device or network.",
                    "Role": "Network Administrator",
                    "Condition": "Network or physical security is compromised."
                }
            ],
            "Potential Impact": "Full control of the device, enabling the attacker to manipulate data and device behavior.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "device",
                "Raspberry Pi OS",
                "root access",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--1988cc35-ced8-4dad-b2d1-7628488b72a4",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of a MySQL vulnerability leads to unauthorized administrative access to the database.",
            "Assumptions": [
                {
                    "Assumption": "Database server is exposed to the internet and is not properly secured.",
                    "Role": "System Administrator",
                    "Condition": "Security measures like firewalls and ACLs are not in place."
                },
                {
                    "Assumption": "Known vulnerabilities in MySQL are not patched in a timely manner.",
                    "Role": "System Administrator",
                    "Condition": "Regular updates and security patches are neglected."
                }
            ],
            "Potential Impact": "Access to sensitive data and the ability to make unauthorized changes to the database.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "database",
                "MySQL",
                "administrative access",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "1",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of legitimate devices (e.g., emonPi or emonBase) communicating through the MQTT protocol.",
            "Assumptions": [
                {
                    "Assumption": "MQTT does not enforce strong authentication mechanisms.",
                    "Role": "System designer",
                    "Condition": "Valid if the MQTT protocol is used without secure authentication layers."
                },
                {
                    "Assumption": "The attacker has network access to intercept MQTT communication.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is inadequately secured."
                },
                {
                    "Assumption": "Devices do not use mutual TLS for communication.",
                    "Role": "System administrator",
                    "Condition": "Valid if devices only use basic MQTT setups without encrypted communication options."
                }
            ],
            "Potential Impact": "Confidentiality breach and unauthorized control of devices.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "device",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate the EmonCMS web application to collect user credentials.",
            "Assumptions": [
                {
                    "Assumption": "Phishing protections are not adequately enforced.",
                    "Role": "System administrator",
                    "Condition": "Valid if users are not well-versed in identifying phishing attempts."
                },
                {
                    "Assumption": "The attacker can create a domain similar to the legitimate EmonCMS.",
                    "Role": "Attacker",
                    "Condition": "Valid if DNS and domain registration security measures are weak."
                },
                {
                    "Assumption": "There is no sufficient training and awareness programs for users.",
                    "Role": "Management",
                    "Condition": "Valid if user training on security practices is minimal."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user credentials.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "web application",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker can spoof user identity to gain administrative access to the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "Lack of multi-factor authentication for administrative access.",
                    "Role": "System designer",
                    "Condition": "Valid if only single-factor authentication is used."
                },
                {
                    "Assumption": "Administrative credentials are not rotated or are weak.",
                    "Role": "System administrator",
                    "Condition": "Valid if password hygiene practices are poor."
                },
                {
                    "Assumption": "Logs are inadequately monitored for suspicious access patterns.",
                    "Role": "Security team",
                    "Condition": "Valid if security logs are not reviewed regularly."
                }
            ],
            "Potential Impact": "Complete control over device communication and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "broker",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with data in transit between IoT devices and the central emonPi or emonBase using MITM (Man-In-The-Middle) attacks.",
            "Assumptions": [
                {
                    "Assumption": "Data is not encrypted when in transit.",
                    "Role": "System designer",
                    "Condition": "Valid if communication does not use encryption protocols."
                },
                {
                    "Assumption": "Network segmentation is insufficient.",
                    "Role": "Network administrator",
                    "Condition": "Valid if IoT and main networks are not adequately isolated."
                },
                {
                    "Assumption": "The attacker can access the network physically or wirelessly.",
                    "Role": "Attacker",
                    "Condition": "Valid if network physical or wireless security is weak."
                }
            ],
            "Potential Impact": "Integrity and confidentiality breaches.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "man-in-the-middle",
                "data",
                "transit"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could manipulate MQTT messages sent to the WiFi MQTT Relay to control home devices maliciously.",
            "Assumptions": [
                {
                    "Assumption": "Unauthorized access to MQTT topics allowed.",
                    "Role": "System administrator",
                    "Condition": "Valid if access controls are poorly implemented."
                },
                {
                    "Assumption": "Insufficient logging of device control commands.",
                    "Role": "Security team",
                    "Condition": "Valid if the system doesn't log and monitor MQTT commands."
                },
                {
                    "Assumption": "Network segmentation is not implemented",
                    "Role": "Network administrator",
                    "Condition": "Valid if no proper network segmentation is done."
                }
            ],
            "Potential Impact": "Disruption and unauthorized control of home automation systems.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MQTT",
                "relay",
                "message manipulation"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could exploit vulnerabilities in the MySQL database to tamper with collected data.",
            "Assumptions": [
                {
                    "Assumption": "Outdated or unpatched MySQL instances in use.",
                    "Role": "System administrator",
                    "Condition": "Valid if the database server is not regularly updated."
                },
                {
                    "Assumption": "Weak database access controls and credentials.",
                    "Role": "System administrator",
                    "Condition": "Valid if strong access control policies are not enforced."
                },
                {
                    "Assumption": "Insufficient audit logging of database activities.",
                    "Role": "Security team",
                    "Condition": "Valid if database logs are not monitored."
                }
            ],
            "Potential Impact": "Data integrity and availability breaches.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MySQL",
                "database",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users may deny performing certain actions on the EmonCMS web application due to lack of proper logging and audit trails.",
            "Assumptions": [
                {
                    "Assumption": "Logging of user activities is insufficient or disabled.",
                    "Role": "System administrator",
                    "Condition": "Valid if logging mechanisms are not properly configured."
                },
                {
                    "Assumption": "No tamper-proof mechanisms for logs.",
                    "Role": "System designer",
                    "Condition": "Valid if logs can be altered."
                },
                {
                    "Assumption": "User authentication is weak.",
                    "Role": "System designer",
                    "Condition": "Valid if there is no strong authentication mechanism in place."
                }
            ],
            "Potential Impact": "Issues in tracking actions, leading to unauthorized changes going undetected.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trail",
                "logging",
                "web application"
            ],
            "mitre_technique": {
                "name": "Deploy Container",
                "description": "Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order to [Escape to Host](https://attack.mitre.org/techniques/T1611) and access other containers running on the node. (Citation: AppSecco Kubernetes Namespace Breakout 2020)\n\nContainers can be deployed by various means, such as via Docker's <code>create</code> and <code>start</code> APIs or via a web application such as the Kubernetes dashboard or Kubeflow. (Citation: Docker Containers API)(Citation: Kubernetes Dashboard)(Citation: Kubeflow Pipelines) In Kubernetes environments, containers may be deployed through workloads such as ReplicaSets or DaemonSets, which can allow containers to be deployed across multiple nodes.(Citation: Kubernetes Workload Management) Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.(Citation: Aqua Build Images on Hosts)",
                "id": "attack-pattern--56e0d8b8-3e25-49dd-9050-3aa252f5aa92",
                "technique_id": "T1610"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Administrators may deny deploying compromised firmware updates to devices due to lack of secure firmware validation.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not signed or verified.",
                    "Role": "System designer",
                    "Condition": "Valid if the firmware update process lacks integrity checks."
                },
                {
                    "Assumption": "No version control for firmware updates.",
                    "Role": "System designer",
                    "Condition": "Valid if firmware updates are not consistently managed."
                },
                {
                    "Assumption": "No secure storage for update logs.",
                    "Role": "System administrator",
                    "Condition": "Valid if update logs are not kept in a tamper-proof environment."
                }
            ],
            "Potential Impact": "Devices could be compromised with malicious firmware without accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "firmware",
                "updates",
                "integrity checks"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Database administrators deny tampering actions in the MySQL database due to lack of robust logging mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "MySQL logging is not enabled or is improperly configured.",
                    "Role": "Database administrator",
                    "Condition": "Valid if audit logging is disabled."
                },
                {
                    "Assumption": "Database logs are not tamper-proof.",
                    "Role": "System designer",
                    "Condition": "Valid if logs can be altered or deleted."
                },
                {
                    "Assumption": "No regular review of database logs.",
                    "Role": "Security team",
                    "Condition": "Valid if logs are not routinely audited."
                }
            ],
            "Potential Impact": "Data integrity issues and difficulty in tracing actions back to perpetrators.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "MySQL",
                "logging",
                "database"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could intercept communications between MQTT clients and the MQTT broker, leading to unauthorized access to sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT traffic is not encrypted.",
                    "Role": "System designer",
                    "Condition": "Valid if data is transmitted in plaintext."
                },
                {
                    "Assumption": "Weak or no network segmentation in place.",
                    "Role": "Network administrator",
                    "Condition": "Valid if IoT devices and MQTT broker are on the same network segment."
                },
                {
                    "Assumption": "Lack of monitoring for unauthorized access.",
                    "Role": "Security team",
                    "Condition": "Valid if network traffic is not monitored for anomalies."
                }
            ],
            "Potential Impact": "Confidentiality breach of sensitive communications and data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "MQTT",
                "broker"
            ],
            "mitre_technique": {
                "name": "Acquire Access",
                "description": "Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)(Citation: Krebs Access Brokers Fortune 500) In some cases, adversary groups may form partnerships to share compromised systems with each other.(Citation: CISA Karakurt 2022)\n\nFootholds to compromised systems may take a variety of forms, such as access to planted backdoors (e.g., [Web Shell](https://attack.mitre.org/techniques/T1505/003)) or established access via [External Remote Services](https://attack.mitre.org/techniques/T1133). In some cases, access brokers will implant compromised systems with a \u201cload\u201d that can be used to install additional malware for paying customers.(Citation: Microsoft Ransomware as a Service)\n\nBy leveraging existing access broker networks rather than developing or obtaining their own initial access capabilities, an adversary can potentially reduce the resources required to gain a foothold on a target network and focus their efforts on later stages of compromise. Adversaries may prioritize acquiring access to systems that have been determined to lack security monitoring or that have high privileges, or systems that belong to organizations in a particular sector.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)\n\nIn some cases, purchasing access to an organization in sectors such as IT contracting, software development, or telecommunications may allow an adversary to compromise additional victims via a [Trusted Relationship](https://attack.mitre.org/techniques/T1199), [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111), or even [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195).\n\n**Note:** while this technique is distinct from other behaviors such as [Purchase Technical Data](https://attack.mitre.org/techniques/T1597/002) and [Credentials](https://attack.mitre.org/techniques/T1589/001), they may often be used in conjunction (especially where the acquired foothold requires [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
                "id": "attack-pattern--d21bb61f-08ad-4dc1-b001-81ca6cb79954",
                "technique_id": "T1650"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to the MySQL database could lead to exposure of sensitive user and device data.",
            "Assumptions": [
                {
                    "Assumption": "Weak database access controls.",
                    "Role": "Database administrator",
                    "Condition": "Valid if there are poor access control policies."
                },
                {
                    "Assumption": "Outdated MySQL software with known vulnerabilities.",
                    "Role": "System administrator",
                    "Condition": "Valid if the software is not regularly updated."
                },
                {
                    "Assumption": "No encryption for data at rest within the database.",
                    "Role": "System administrator",
                    "Condition": "Valid if data stored in the database is not encrypted."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information stored in the database.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MySQL",
                "database",
                "access controls"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could exploit vulnerabilities in the EmonCMS web application to access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "EmonCMS has existing vulnerabilities (e.g., SQL injection).",
                    "Role": "System designer",
                    "Condition": "Valid if the web application does not follow security best practices."
                },
                {
                    "Assumption": "Insufficient input validation and sanitization.",
                    "Role": "Developer",
                    "Condition": "Valid if user inputs are not properly validated."
                },
                {
                    "Assumption": "No regular security audits and patching.",
                    "Role": "System administrator",
                    "Condition": "Valid if the application is not routinely audited and patched."
                }
            ],
            "Potential Impact": "Confidentiality and integrity breaches of user data and system configurations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "web application",
                "vulnerability",
                "SQL injection"
            ],
            "mitre_technique": {
                "name": "Vulnerability Scanning",
                "description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n\nThese scans may also include more broad attempts to [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592) that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts.(Citation: OWASP Vuln Scanning) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
                "id": "attack-pattern--5502c4e9-24ef-4d5f-8ee9-9e906c2f82c4",
                "technique_id": "T1595.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could exploit the MySQL buffer overflow vulnerability to execute a complete Denial of Service attack on the database.",
            "Assumptions": [
                {
                    "Assumption": "Outdated or unpatched MySQL software.",
                    "Role": "System administrator",
                    "Condition": "Valid if the MySQL server is not updated regularly."
                },
                {
                    "Assumption": "No network segmentation in place.",
                    "Role": "Network administrator",
                    "Condition": "Valid if the database is exposed on a public network segment."
                },
                {
                    "Assumption": "No mitigations like WAF or IDS/IPS systems.",
                    "Role": "Security team",
                    "Condition": "Valid if network security devices are not in place."
                }
            ],
            "Potential Impact": "Complete loss of availability for the database service.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MySQL",
                "buffer overflow",
                "database"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could perform excessive MQTT message flooding to the broker, leading to resource exhaustion.",
            "Assumptions": [
                {
                    "Assumption": "Lack of rate limiting for MQTT messages.",
                    "Role": "System designer",
                    "Condition": "Valid if MQTT broker does not impose rate limits."
                },
                {
                    "Assumption": "No monitoring for abnormal traffic patterns.",
                    "Role": "Security team",
                    "Condition": "Valid if network traffic is not monitored for anomalies."
                },
                {
                    "Assumption": "MQTT broker is exposed on the public internet.",
                    "Role": "System administrator",
                    "Condition": "Valid if IoT devices and MQTT broker are directly accessible from the internet."
                }
            ],
            "Potential Impact": "Resource exhaustion and service disruption.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "resource exhaustion",
                "broker"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could exploit a MySQL vulnerability to trigger repeated crashes (Denial of Service) of the database server.",
            "Assumptions": [
                {
                    "Assumption": "MySQL software is not up-to-date.",
                    "Role": "System administrator",
                    "Condition": "Valid if the software is not patched."
                },
                {
                    "Assumption": "Poor network and perimeter security.",
                    "Role": "Network administrator",
                    "Condition": "Valid if network defenses are inadequate."
                },
                {
                    "Assumption": "No redundancy or failover mechanisms for the database.",
                    "Role": "System designer",
                    "Condition": "Valid if there is no high-availability setup for the database."
                }
            ],
            "Potential Impact": "Service disruption and unavailability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MySQL",
                "crash",
                "database"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit MySQL vulnerabilities to gain elevated privileges on the database server.",
            "Assumptions": [
                {
                    "Assumption": "Presence of exploitable MySQL vulnerabilities.",
                    "Role": "Database administrator",
                    "Condition": "Valid if the database is not patched regularly."
                },
                {
                    "Assumption": "Weak database access controls.",
                    "Role": "Database administrator",
                    "Condition": "Valid if access control policies are not restrictive."
                },
                {
                    "Assumption": "No regular security training for developers and administrators.",
                    "Role": "Management",
                    "Condition": "Valid if security awareness programs are minimal."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and settings.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MySQL",
                "vulnerability",
                "database"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit vulnerabilities in the EmonCMS web application to gain elevated privileges (e.g., from user to admin).",
            "Assumptions": [
                {
                    "Assumption": "Presence of web application vulnerabilities.",
                    "Role": "System designer",
                    "Condition": "Valid if the web application code is flawed."
                },
                {
                    "Assumption": "Weak user roles and permissions policies.",
                    "Role": "System administrator",
                    "Condition": "Valid if access controls are not properly implemented."
                },
                {
                    "Assumption": "Lack of regular security assessments and audits for the web app.",
                    "Role": "System administrator",
                    "Condition": "Valid if the application is not routinely reviewed."
                }
            ],
            "Potential Impact": "Unauthorized access to administrative functions and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "vulnerability",
                "access control"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit improper configurations to gain administrative access to IoT devices in the energy monitoring system.",
            "Assumptions": [
                {
                    "Assumption": "Default credentials are not changed.",
                    "Role": "System administrator",
                    "Condition": "Valid if devices use factory default login credentials."
                },
                {
                    "Assumption": "Poorly implemented or no access control measures.",
                    "Role": "System designer",
                    "Condition": "Valid if access policies are poorly configured."
                },
                {
                    "Assumption": "No regular firmware updates and patches applied.",
                    "Role": "System administrator",
                    "Condition": "Valid if devices are not kept up-to-date."
                }
            ],
            "Potential Impact": "Complete control over affected devices.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "IoT",
                "access control",
                "credentials"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "3",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of an emonTh module by injecting false MQTT messages into the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "There are no authentication mechanisms for MQTT messages.",
                    "Role": "System",
                    "Condition": "No authentication"
                },
                {
                    "Assumption": "The MQTT broker does not have message integrity checks.",
                    "Role": "System",
                    "Condition": "No integrity checks"
                }
            ],
            "Potential Impact": "Unauthorized actions and data falsification.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "MQTT",
                "network",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could masquerade as the emonPi base station to gain unauthorized access to the collected data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the network.",
                    "Role": "Attacker",
                    "Condition": "Physical access"
                },
                {
                    "Assumption": "The emonPi does not perform client certificate validation.",
                    "Role": "System",
                    "Condition": "No client certificate validation"
                },
                {
                    "Assumption": "The attacker can sniff traffic to gather necessary information.",
                    "Role": "Attacker",
                    "Condition": "Traffic sniffing capability"
                }
            ],
            "Potential Impact": "Unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "emonPi",
                "network",
                "data access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could use a malicious client to impersonate a legitimate user and control the WiFi MQTT relay.",
            "Assumptions": [
                {
                    "Assumption": "The WiFi MQTT relay does not authenticate clients by a secure method.",
                    "Role": "System",
                    "Condition": "No authentication"
                },
                {
                    "Assumption": "The attacker can discover MQTT topics used for control.",
                    "Role": "Attacker",
                    "Condition": "MQTT topic knowledge"
                },
                {
                    "Assumption": "The attacker has network access to the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                }
            ],
            "Potential Impact": "Unauthorized device control.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "MQTT",
                "WiFi relay",
                "device control"
            ],
            "mitre_technique": {
                "name": "GUI Input Capture",
                "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs)\n\nAdversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., [Browser Information Discovery](https://attack.mitre.org/techniques/T1217) and/or [Application Window Discovery](https://attack.mitre.org/techniques/T1010)) to spoof prompts when users are naturally accessing sensitive sites/data.",
                "id": "attack-pattern--a2029942-0a85-4947-b23c-ca434698171d",
                "technique_id": "T1056.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the data stored in the MySQL database used by the OEM system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to the database.",
                    "Role": "Attacker",
                    "Condition": "Database access"
                },
                {
                    "Assumption": "Database does not enforce data integrity checks.",
                    "Role": "System",
                    "Condition": "No integrity checks"
                },
                {
                    "Assumption": "SQL injection vulnerabilities are present.",
                    "Role": "System",
                    "Condition": "SQL injection vulnerability"
                }
            ],
            "Potential Impact": "Data integrity compromise.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "MySQL",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could intercept and modify MQTT messages between devices and the broker.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "System",
                    "Condition": "No encryption"
                },
                {
                    "Assumption": "No integrity verification mechanisms are in place.",
                    "Role": "System",
                    "Condition": "No integrity checks"
                }
            ],
            "Potential Impact": "Message integrity compromise.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MQTT",
                "network",
                "message integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with software updates pushed to the emonPi and emonBase stations.",
            "Assumptions": [
                {
                    "Assumption": "The update mechanism does not verify the source or integrity of updates.",
                    "Role": "System",
                    "Condition": "No source or integrity verification"
                },
                {
                    "Assumption": "The attacker can intercept the update communication channels.",
                    "Role": "Attacker",
                    "Condition": "Interception capability"
                },
                {
                    "Assumption": "The devices perform automatic updates without manual verification.",
                    "Role": "System",
                    "Condition": "Automatic updates"
                }
            ],
            "Potential Impact": "Deployment of malicious software.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "update",
                "emonPi",
                "software"
            ],
            "mitre_technique": {
                "name": "Compromise Software Dependencies and Development Tools",
                "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
                "id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
                "technique_id": "T1195.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could deny performing specific actions within the EmonCMS web application due to lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "The system does not keep comprehensive logs of user actions.",
                    "Role": "System",
                    "Condition": "Poor logging"
                },
                {
                    "Assumption": "Actions performed can have significant impacts, which might be repudiated.",
                    "Role": "User",
                    "Condition": "Significant actions"
                },
                {
                    "Assumption": "The system doesn't maintain tamper-proof logs.",
                    "Role": "System",
                    "Condition": "No tamper-proof logs"
                }
            ],
            "Potential Impact": "Dispute about actions taken.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "user actions",
                "tamper-proof"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators of home automation devices could deny changing device settings remotely through the WiFi MQTT relay.",
            "Assumptions": [
                {
                    "Assumption": "No logging of device control actions via MQTT.",
                    "Role": "System",
                    "Condition": "No logging"
                },
                {
                    "Assumption": "Users have the ability to change settings without logging in.",
                    "Role": "User",
                    "Condition": "No authentication"
                },
                {
                    "Assumption": "Events logs are not secure from tampering.",
                    "Role": "System",
                    "Condition": "Logs can be altered"
                }
            ],
            "Potential Impact": "Difficulty in determining user actions on device settings.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "device control",
                "MQTT",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An external entity could deny sending a specific harmful MQTT message to the broker, impacting other devices.",
            "Assumptions": [
                {
                    "Assumption": "System lacks sufficient logging of MQTT messages.",
                    "Role": "System",
                    "Condition": "No detailed logging"
                },
                {
                    "Assumption": "MQTT broker does not authenticate message sources.",
                    "Role": "System",
                    "Condition": "No authentication"
                },
                {
                    "Assumption": "The harmful message could have significant adverse effects on devices.",
                    "Role": "System",
                    "Condition": "High impact"
                }
            ],
            "Potential Impact": "Difficulty in attributing harmful actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "MQTT",
                "message",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data collected by emonTx and emonTh modules could be intercepted in transit.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are transmitted in plaintext.",
                    "Role": "System",
                    "Condition": "No encryption"
                },
                {
                    "Assumption": "The attacker has access to the network.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "The data includes sensitive information on environmental conditions and energy usage.",
                    "Role": "System",
                    "Condition": "Sensitive data"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MQTT",
                "network",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could access the EmonCMS web application and view users' energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "The web application has weak or no authentication mechanisms.",
                    "Role": "System",
                    "Condition": "Weak authentication"
                },
                {
                    "Assumption": "The attacker can reach the internet-facing web application.",
                    "Role": "Attacker",
                    "Condition": "Internet access"
                },
                {
                    "Assumption": "The data stored includes detailed information about energy usage.",
                    "Role": "System",
                    "Condition": "Detailed data"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive energy data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "web application",
                "energy data",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data stored on the Raspberry Pi hosting emonPi could be exposed if the device is physically compromised.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the Raspberry Pi.",
                    "Role": "Attacker",
                    "Condition": "Physical access"
                },
                {
                    "Assumption": "Data at rest is not encrypted on the device.",
                    "Role": "System",
                    "Condition": "No encryption"
                },
                {
                    "Assumption": "The device stores sensitive energy monitoring data.",
                    "Role": "System",
                    "Condition": "Sensitive data"
                }
            ],
            "Potential Impact": "Exposure of all stored data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "physical access",
                "Raspberry Pi",
                "data at rest"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An MQTT broker DoS attack that exhausts resources, making communication between IoT devices impossible.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker lacks rate limiting and resource management.",
                    "Role": "System",
                    "Condition": "No rate limiting"
                },
                {
                    "Assumption": "The attacker can send a high volume of messages.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "The system does not have DoS protections in place.",
                    "Role": "System",
                    "Condition": "Lack of protections"
                }
            ],
            "Potential Impact": "Complete communication breakdown between devices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "broker",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends malformed data packets causing the emonPi to crash.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to the emonPi.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "emonPi lacks data validation for incoming packets.",
                    "Role": "System",
                    "Condition": "No data validation"
                },
                {
                    "Assumption": "The system is not protected against malformed packet attacks.",
                    "Role": "System",
                    "Condition": "No protections"
                }
            ],
            "Potential Impact": "Disruption of data collection and processing.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "emonPi",
                "malformed packets",
                "crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of known MySQL vulnerabilities causing the database to crash, impacting data availability.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL version in use is vulnerable to known CVEs.",
                    "Role": "System",
                    "Condition": "Vulnerable version"
                },
                {
                    "Assumption": "The attacker can establish a connection to the MySQL server.",
                    "Role": "Attacker",
                    "Condition": "Connection access"
                },
                {
                    "Assumption": "The database does not have appropriate security patches applied.",
                    "Role": "System",
                    "Condition": "Lack of patches"
                }
            ],
            "Potential Impact": "Database crash and data unavailability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MySQL",
                "database",
                "crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a buffer overflow vulnerability on the MySQL server to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL version is affected by the buffer overflow vulnerability.",
                    "Role": "System",
                    "Condition": "Affected version"
                },
                {
                    "Assumption": "The attacker can send specially crafted inputs to the server.",
                    "Role": "Attacker",
                    "Condition": "Input capability"
                },
                {
                    "Assumption": "The system lacks defenses against exploitation.",
                    "Role": "System",
                    "Condition": "No exploitation defenses"
                }
            ],
            "Potential Impact": "Unauthorized administrative control over the database.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MySQL",
                "buffer overflow",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a software vulnerability in the EmonCMS web application to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "The web application has a known vulnerability.",
                    "Role": "System",
                    "Condition": "Known vulnerability"
                },
                {
                    "Assumption": "The attacker can access the web application over the internet.",
                    "Role": "Attacker",
                    "Condition": "Internet access"
                },
                {
                    "Assumption": "There are no runtime application self-protection mechanisms.",
                    "Role": "System",
                    "Condition": "No RASP"
                }
            ],
            "Potential Impact": "Unauthorized administrative access to the web application.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access on the Raspberry Pi by exploiting an unpatched kernel vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "The Raspberry Pi runs an unpatched version of the OS.",
                    "Role": "System",
                    "Condition": "Unpatched OS"
                },
                {
                    "Assumption": "The attacker has physical or SSH access to the Raspberry Pi.",
                    "Role": "Attacker",
                    "Condition": "Access"
                },
                {
                    "Assumption": "There are known privilege escalation vulnerabilities.",
                    "Role": "System",
                    "Condition": "Known vulnerabilities"
                }
            ],
            "Potential Impact": "Root access and complete control over the device.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Raspberry Pi",
                "kernel vulnerability",
                "root access"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "5",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an emonTx module",
            "Assumptions": [
                {
                    "Assumption": "System relies on device IDs for emonTx identification",
                    "Role": "Attacker",
                    "Condition": "Access to network segment"
                },
                {
                    "Assumption": "No mutual authentication between devices",
                    "Role": "Device Developer",
                    "Condition": "OEM protocol design oversight"
                },
                {
                    "Assumption": "Weak or no encryption on communication links",
                    "Role": "System Admin",
                    "Condition": "Inadequate security configurations"
                }
            ],
            "Potential Impact": "Unauthorized data injection leading to misleading energy usage data.",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Device Spoofing",
                "Impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to the MQTT Broker by using credentials meant for another legitimate client",
            "Assumptions": [
                {
                    "Assumption": "MQTT Broker uses basic or weak authentication methods",
                    "Role": "Broker Administrator",
                    "Condition": "Authentication configuration"
                },
                {
                    "Assumption": "No IP whitelisting or endpoint restrictions",
                    "Role": "Network Administrator",
                    "Condition": "Network security policies"
                },
                {
                    "Assumption": "Credentials can be intercepted or guessed",
                    "Role": "Attacker",
                    "Condition": "Weak password policies"
                }
            ],
            "Potential Impact": "Malicious control and manipulation of connected devices.",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Broker Compromise",
                "Network Services"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a compromised machine to impersonate an emonPi base station",
            "Assumptions": [
                {
                    "Assumption": "Compromised machine has access to network",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "No robust device validation",
                    "Role": "System Designer",
                    "Condition": "Device communication protocols"
                },
                {
                    "Assumption": "Legitimate emonPi does not detect duplicated device ID usage",
                    "Role": "Device Developer",
                    "Condition": "OEM system design"
                }
            ],
            "Potential Impact": "Interception and modification of data flows between sensors and the base station.",
            "MITRE ATT&CK Keywords": [
                "Device Impersonation",
                "Network Traffic Manipulation",
                "MITM"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of the emonBase device",
            "Assumptions": [
                {
                    "Assumption": "Physical access to the device or over-the-air update vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Access method"
                },
                {
                    "Assumption": "Inadequate firmware integrity checks",
                    "Role": "Device Manufacturer",
                    "Condition": "Security standards compliance"
                },
                {
                    "Assumption": "Lack of secure boot mechanisms",
                    "Role": "System Designer",
                    "Condition": "System design decisions"
                }
            ],
            "Potential Impact": "Manipulated data, unauthorized control, and potential damage to connected devices.",
            "MITRE ATT&CK Keywords": [
                "Firmware",
                "Tampering",
                "Device Compromise"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters MQTT messages in transit",
            "Assumptions": [
                {
                    "Assumption": "No end-to-end encryption on MQTT messages",
                    "Role": "System Architect",
                    "Condition": "Design decision"
                },
                {
                    "Assumption": "Access to network streams",
                    "Role": "Attacker",
                    "Condition": "Network vulnerabilities"
                },
                {
                    "Assumption": "Lack of message integrity checks",
                    "Role": "MQTT Client Developer",
                    "Condition": "System design"
                }
            ],
            "Potential Impact": "Unauthorized control commands sent to IoT devices.",
            "MITRE ATT&CK Keywords": [
                "Message Tampering",
                "Network Traffic",
                "Communication Protocol Manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the data stored in the EmonCMS database",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in database management",
                    "Role": "Database Administrator",
                    "Condition": "Security misconfigurations"
                },
                {
                    "Assumption": "Weak access control policies",
                    "Role": "System Administrator",
                    "Condition": "Policy enforcement"
                },
                {
                    "Assumption": "SQL injection vulnerabilities",
                    "Role": "Application Developer",
                    "Condition": "Code security issues"
                }
            ],
            "Potential Impact": "Corruption and falsification of energy usage and environmental data.",
            "MITRE ATT&CK Keywords": [
                "Database Tampering",
                "SQL Injection",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies issuing control commands through the emonCMS web interface",
            "Assumptions": [
                {
                    "Assumption": "Lack of logging and monitoring",
                    "Role": "System Administrator",
                    "Condition": "Configuration oversight"
                },
                {
                    "Assumption": "Weak authentication mechanisms",
                    "Role": "Web Application Developer",
                    "Condition": "Security measures"
                },
                {
                    "Assumption": "No non-repudiation methods in place",
                    "Role": "System Designer",
                    "Condition": "Design omission"
                }
            ],
            "Potential Impact": "Disruption in system operation and difficulty in tracking actions.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Action Denial",
                "Logging and Monitoring"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker compromises logs on the MySQL server to cover their tracks",
            "Assumptions": [
                {
                    "Assumption": "Full control over the MySQL server",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation"
                },
                {
                    "Assumption": "No integrity checks on log files",
                    "Role": "Database Administrator",
                    "Condition": "Log management policies"
                },
                {
                    "Assumption": "Lack of log backups",
                    "Role": "System Administrator",
                    "Condition": "Backup procedures"
                }
            ],
            "Potential Impact": "Inability to trace malicious activities and compromised audit trails.",
            "MITRE ATT&CK Keywords": [
                "Log Manipulation",
                "Database Compromise",
                "Logging and Monitoring"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A compromised device sends falsified data to emonCMS",
            "Assumptions": [
                {
                    "Assumption": "No mutual authentication between devices and server",
                    "Role": "System Designer",
                    "Condition": "Design decision"
                },
                {
                    "Assumption": "Weak or no data integrity checks",
                    "Role": "Application Developer",
                    "Condition": "Security configurations"
                },
                {
                    "Assumption": "Compromised device has valid credentials",
                    "Role": "Attacker",
                    "Condition": "Credential compromise"
                }
            ],
            "Potential Impact": "Falsified records in energy and environment monitoring leading to misguided decisions.",
            "MITRE ATT&CK Keywords": [
                "Data Integrity",
                "Repudiation",
                "System Compromise"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data exposed through unsecured MQTT communication",
            "Assumptions": [
                {
                    "Assumption": "Network traffic is not encrypted",
                    "Role": "System Architect",
                    "Condition": "Communication protocols"
                },
                {
                    "Assumption": "An attacker has access to the local or external network",
                    "Role": "Attacker",
                    "Condition": "Network vulnerabilities"
                },
                {
                    "Assumption": "Sensitive data is transmitted in plaintext",
                    "Role": "Device Designer",
                    "Condition": "Communication design"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive environmental and usage data.",
            "MITRE ATT&CK Keywords": [
                "Data Exposure",
                "Network Traffic",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a known vulnerability in the EmonCMS application",
            "Assumptions": [
                {
                    "Assumption": "Unpatched vulnerabilities in web application",
                    "Role": "Application Developer",
                    "Condition": "Maintenance oversight"
                },
                {
                    "Assumption": "Publicly disclosed exploits are available",
                    "Role": "Attacker",
                    "Condition": "Exploit existence"
                },
                {
                    "Assumption": "Weak access controls",
                    "Role": "System Administrator",
                    "Condition": "Security configurations"
                }
            ],
            "Potential Impact": "Unauthorized access and exfiltration of sensitive data stored in MySQL databases.",
            "MITRE ATT&CK Keywords": [
                "Web Application",
                "Exploit",
                "Sensitive Data Access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the IoT device network",
            "Assumptions": [
                {
                    "Assumption": "Network lacks adequate segmentation and isolation",
                    "Role": "Network Administrator",
                    "Condition": "Network design"
                },
                {
                    "Assumption": "No regular vulnerability assessments",
                    "Role": "Security Team",
                    "Condition": "Security practices"
                },
                {
                    "Assumption": "Weak authentication for IoT devices",
                    "Role": "Device Developer",
                    "Condition": "Device security"
                }
            ],
            "Potential Impact": "Exposure of system configuration, sensor data, and control commands.",
            "MITRE ATT&CK Keywords": [
                "Network Access",
                "Information Disclosure",
                "IoT"
            ],
            "mitre_technique": {
                "name": "Network Trust Dependencies",
                "description": "Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: Pentesting AD Forests) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                "id": "attack-pattern--36aa137f-5166-41f8-b2f0-a4cfa1b4133e",
                "technique_id": "T1590.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits the SSL_check_chain() vulnerability causing the MySQL server to crash",
            "Assumptions": [
                {
                    "Assumption": "MySQL version affected by the vulnerability",
                    "Role": "Database Administrator",
                    "Condition": "Version management"
                },
                {
                    "Assumption": "Attacker can initiate a TLS handshake",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "No rate limiting on connection attempts",
                    "Role": "System Administrator",
                    "Condition": "Network configurations"
                }
            ],
            "Potential Impact": "Disruption of data access and system unavailability.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "TLS",
                "Vulnerability Exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial of service (DDoS) attack on the MQTT broker",
            "Assumptions": [
                {
                    "Assumption": "Publicly accessible broker without proper DDoS protections",
                    "Role": "Network Administrator",
                    "Condition": "Service exposure"
                },
                {
                    "Assumption": "Attacker can generate high volumes of traffic",
                    "Role": "Attacker",
                    "Condition": "Resource availability"
                },
                {
                    "Assumption": "No auto-scaling or redundancy mechanisms",
                    "Role": "System Designer",
                    "Condition": "System design"
                }
            ],
            "Potential Impact": "Failure of MQTT communication, leading to unresponsive or malfunctioning devices.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Network Traffic",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Buffer overflow attack on the MQTT relay causing the relay to fail",
            "Assumptions": [
                {
                    "Assumption": "Vulnerable firmware version",
                    "Role": "Device Manufacturer",
                    "Condition": "Firmware management"
                },
                {
                    "Assumption": "Attacker can send malformed MQTT messages",
                    "Role": "Attacker",
                    "Condition": "Network and protocol access"
                },
                {
                    "Assumption": "Lack of sanity checks on input data",
                    "Role": "System Developer",
                    "Condition": "Code security"
                }
            ],
            "Potential Impact": "Denial of service for connected devices reliant on the relay.",
            "MITRE ATT&CK Keywords": [
                "Buffer Overflow",
                "MQTT",
                "Firmware"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a firmware vulnerability in emonPi to gain root access",
            "Assumptions": [
                {
                    "Assumption": "Firmware version with known vulnerabilities",
                    "Role": "Device Maintainer",
                    "Condition": "Version control"
                },
                {
                    "Assumption": "Attacker has initial access to the device",
                    "Role": "Attacker",
                    "Condition": "Access methods"
                },
                {
                    "Assumption": "No firmware integrity verification",
                    "Role": "Device Manufacturer",
                    "Condition": "System design"
                }
            ],
            "Potential Impact": "Complete control over data collection and manipulation capabilities.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Firmware Exploitation",
                "Root Access"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "SQL injection attack on EmonCMS web app leading to administrative access",
            "Assumptions": [
                {
                    "Assumption": "Web application vulnerable to SQL injection",
                    "Role": "Application Developer",
                    "Condition": "Code review and testing"
                },
                {
                    "Assumption": "Exploitable database structure",
                    "Role": "Database Designer",
                    "Condition": "Schema design"
                },
                {
                    "Assumption": "Weak monitoring of web application logs",
                    "Role": "Security Team",
                    "Condition": "Log analysis"
                }
            ],
            "Potential Impact": "Complete administrative control over EmonCMS, including unauthorized data access and manipulation.",
            "MITRE ATT&CK Keywords": [
                "SQL Injection",
                "Web Application",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a MySQL vulnerability to gain higher privileges",
            "Assumptions": [
                {
                    "Assumption": "MySQL instance has unpatched vulnerabilities",
                    "Role": "Database Administrator",
                    "Condition": "Patch management"
                },
                {
                    "Assumption": "Attacker has authenticated access",
                    "Role": "Attacker",
                    "Condition": "Credential compromise"
                },
                {
                    "Assumption": "Lack of regular security audits",
                    "Role": "IT Security Team",
                    "Condition": "Security practices"
                }
            ],
            "Potential Impact": "Unauthorized changes to database records and potential control over database server.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Database Exploitation",
                "Security Vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "6",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the MQTT broker to intercept and manipulate messages",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network",
                    "Role": "Attacker",
                    "Condition": "Network access possible due to weak or no encryption"
                },
                {
                    "Assumption": "The broker lacks proper authentication mechanisms",
                    "Role": "System Designer",
                    "Condition": "Default configurations or no authentication in place"
                },
                {
                    "Assumption": "IoT devices are not verifying the broker's identity",
                    "Role": "Device Manufacturer",
                    "Condition": "Devices do not implement broker verification"
                }
            ],
            "Potential Impact": "Unauthorized interception of sensitive data and potential manipulation of device commands.",
            "MITRE ATT&CK Keywords": [
                "network injection",
                "device impersonation",
                "message interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs an emonTx module to send false power consumption data to the emonPi",
            "Assumptions": [
                {
                    "Assumption": "The attacker can mimic the communication protocol",
                    "Role": "Attacker",
                    "Condition": "Knowledge of protocol and lack of encryption"
                },
                {
                    "Assumption": "The emonPi is not validating the authenticity of sender modules",
                    "Role": "System Designer",
                    "Condition": "Lack of authentication checks"
                },
                {
                    "Assumption": "Network traffic is not monitored for anomalies",
                    "Role": "System Administrator",
                    "Condition": "No network monitoring solutions"
                }
            ],
            "Potential Impact": "Inaccurate energy monitoring and potential financial loss if billing is affected.",
            "MITRE ATT&CK Keywords": [
                "device impersonation",
                "protocol spoofing",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user to access the EmonCMS web application",
            "Assumptions": [
                {
                    "Assumption": "Weak or no user authentication mechanisms",
                    "Role": "System Designer",
                    "Condition": "Poorly designed authentication or default credentials"
                },
                {
                    "Assumption": "The website is vulnerable to account hijacking techniques",
                    "Role": "Attacker",
                    "Condition": "Presence of vulnerabilities like session fixation"
                },
                {
                    "Assumption": "Users are not using multi-factor authentication",
                    "Role": "User",
                    "Condition": "Lack of implementation or user negligence"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive energy usage data and control over home automation devices.",
            "MITRE ATT&CK Keywords": [
                "user impersonation",
                "web application compromise",
                "account hijacking"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies MQTT messages in transit to alter device behavior",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted MQTT communication",
                    "Role": "System Designer",
                    "Condition": "Default configuration or cryptographic oversight"
                },
                {
                    "Assumption": "Attackers can intercept the network traffic",
                    "Role": "Attacker",
                    "Condition": "Presence of points of vulnerability in network"
                },
                {
                    "Assumption": "Lack of integrity checks on MQTT messages",
                    "Role": "System Designer",
                    "Condition": "No implementation of message integrity mechanisms"
                }
            ],
            "Potential Impact": "Corruption of data integrity and potential unauthorized control over home devices.",
            "MITRE ATT&CK Keywords": [
                "message tampering",
                "data integrity attack",
                "network manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to emonPi and modifies stored energy usage data",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls on the device",
                    "Role": "System Designer",
                    "Condition": "Weak or no authorization mechanisms"
                },
                {
                    "Assumption": "Physical or remote access to emonPi is achievable",
                    "Role": "Attacker",
                    "Condition": "Unsecured physical environments or network vulnerabilities"
                },
                {
                    "Assumption": "EmonPi's software lacks tamper detection mechanisms",
                    "Role": "System Designer",
                    "Condition": "No implementation of tamper-evident logs"
                }
            ],
            "Potential Impact": "Inaccurate historical data leading to misguided decision-making and potential financial implications.",
            "MITRE ATT&CK Keywords": [
                "device tampering",
                "data corruption",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of emonTh modules to send erroneous data",
            "Assumptions": [
                {
                    "Assumption": "Firmware update process is not secure",
                    "Role": "Device Manufacturer",
                    "Condition": "No encryption or authentication in firmware updates"
                },
                {
                    "Assumption": "Attackers can deploy malicious firmware via network access",
                    "Role": "Attacker",
                    "Condition": "Exploitable network vulnerabilities"
                },
                {
                    "Assumption": "EmonTh modules do not verify firmware integrity",
                    "Role": "System Designer",
                    "Condition": "Lack of integrity verification mechanisms"
                }
            ],
            "Potential Impact": "Incorrect environmental monitoring, potentially causing harm to automated systems dependent on accurate data.",
            "MITRE ATT&CK Keywords": [
                "firmware modification",
                "device manipulation",
                "data falsification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies making changes to device settings via the EmonCMS web application",
            "Assumptions": [
                {
                    "Assumption": "System lacks comprehensive logging of user actions",
                    "Role": "System Designer",
                    "Condition": "No implementation of robust logging mechanisms"
                },
                {
                    "Assumption": "Logs are not secured or tamper-evident",
                    "Role": "System Administrator",
                    "Condition": "Logs can be altered or deleted"
                },
                {
                    "Assumption": "No multi-factor authentication in place",
                    "Role": "User",
                    "Condition": "Single-factor password authentication used"
                }
            ],
            "Potential Impact": "Inability to verify user actions leading to security lapses and potential unauthorized changes.",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "action repudiation",
                "user activity falsification"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies system logs to cover up unauthorized access to emonPi",
            "Assumptions": [
                {
                    "Assumption": "Attackers have access to system logs",
                    "Role": "Attacker",
                    "Condition": "Weak or no access controls on log files"
                },
                {
                    "Assumption": "Logs do not have tamper protection",
                    "Role": "System Designer",
                    "Condition": "No use of hash chains or digital signatures for logs"
                },
                {
                    "Assumption": "Monitoring and alerting on log integrity is absent",
                    "Role": "System Administrator",
                    "Condition": "No implementation of log monitoring solutions"
                }
            ],
            "Potential Impact": "Compromises undetected due to manipulation of evidence, leading to prolonged undetected malicious activities.",
            "MITRE ATT&CK Keywords": [
                "log modification",
                "unauthorized access",
                "cover tracks"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending commands to the MQTT Relay to activate/deactivate devices",
            "Assumptions": [
                {
                    "Assumption": "MQTT commands lack authentication and authorization enforcement",
                    "Role": "System Designer",
                    "Condition": "Default settings or poor design choices"
                },
                {
                    "Assumption": "Command and control logs are not sufficiently detailed",
                    "Role": "System Administrator",
                    "Condition": "Logging mechanisms do not capture sufficient data for audit"
                },
                {
                    "Assumption": "Users share credentials or do not securely store them",
                    "Role": "User",
                    "Condition": "Inadequate user training or awareness"
                }
            ],
            "Potential Impact": "Disparity in operational logs leading to trust issues and security management challenges.",
            "MITRE ATT&CK Keywords": [
                "command repudiation",
                "device control",
                "unauthorized commands"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data transmitted between emonPi and emonBase is intercepted by a third party",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is unencrypted",
                    "Role": "System Designer",
                    "Condition": "No end-to-end encryption implemented"
                },
                {
                    "Assumption": "Attackers can access the same network",
                    "Role": "Attacker",
                    "Condition": "Exploitable network vulnerabilities or weak wireless security"
                },
                {
                    "Assumption": "Communication protocols lack secure cryptographic mechanisms",
                    "Role": "Protocol Developer",
                    "Condition": "Use of outdated or weak protocols"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information such as energy usage and personal data.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "traffic analysis",
                "network eavesdropping"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the EmonCMS database containing user data",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in the MySQL database server are not patched",
                    "Role": "System Administrator",
                    "Condition": "Failure to apply security patches"
                },
                {
                    "Assumption": "Weak authentication mechanisms for database access",
                    "Role": "System Designer",
                    "Condition": "Poorly configured or weak credentials used"
                },
                {
                    "Assumption": "No encryption of sensitive data within the database",
                    "Role": "System Designer",
                    "Condition": "Data stored in plaintext or weak encryption methods"
                }
            ],
            "Potential Impact": "Exposure of personal user data, energy consumption patterns, and potentially compromising privacy.",
            "MITRE ATT&CK Keywords": [
                "database breach",
                "SQL injection",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the web interface to access sensitive data",
            "Assumptions": [
                {
                    "Assumption": "Web application vulnerabilities are present",
                    "Role": "System Designer",
                    "Condition": "Poor input validation and weak security coding practices"
                },
                {
                    "Assumption": "No secure coding practices or security reviews",
                    "Role": "Development Team",
                    "Condition": "Lack of adherence to secure coding guidelines"
                },
                {
                    "Assumption": "Sensitive data is directly accessible via the web interface",
                    "Role": "System Designer",
                    "Condition": "Unfiltered or poorly protected web endpoints"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data possibly leading to data leakage and privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "web application vulnerabilities",
                "data leakage",
                "input validation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a known vulnerability in MySQL to cause a denial of service on the EmonCMS",
            "Assumptions": [
                {
                    "Assumption": "MySQL server has known unpatched vulnerabilities",
                    "Role": "System Administrator",
                    "Condition": "Failure to apply critical updates and patches"
                },
                {
                    "Assumption": "Attackers can send specially crafted requests",
                    "Role": "Attacker",
                    "Condition": "Knowledge of the exploit and network access"
                },
                {
                    "Assumption": "No mitigation measures for known DoS vulnerabilities",
                    "Role": "System Designer",
                    "Condition": "Absence of intrusion detection and prevention systems (IDPS)"
                }
            ],
            "Potential Impact": "Service disruption and inaccessibility of the EmonCMS web application, impacting data visibility.",
            "MITRE ATT&CK Keywords": [
                "DoS attack",
                "database availability",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the MQTT broker with excessive messages to exhaust resources",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker lacks rate limiting or resource management",
                    "Role": "System Designer",
                    "Condition": "Default settings without protective configurations"
                },
                {
                    "Assumption": "Network can be accessed by attackers",
                    "Role": "Attacker",
                    "Condition": "Presence of network vulnerabilities or misconfigurations"
                },
                {
                    "Assumption": "No monitoring for unusual traffic patterns",
                    "Role": "System Administrator",
                    "Condition": "Absence of network monitoring solutions"
                }
            ],
            "Potential Impact": "Interruptions in communication between devices, leading to denial of service for automation and monitoring functionalities.",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "MQTT flooding",
                "service interruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker leverages vulnerabilities in PHP libraries used by EmonCMS to cause application crashes",
            "Assumptions": [
                {
                    "Assumption": "PHP libraries include known vulnerabilities",
                    "Role": "System Administrator",
                    "Condition": "Failure to update and secure dependencies"
                },
                {
                    "Assumption": "PHP configuration allows exploitation",
                    "Role": "System Designer",
                    "Condition": "Misconfigurations or default insecure settings"
                },
                {
                    "Assumption": "The attacker can send malicious input to the application",
                    "Role": "Attacker",
                    "Condition": "Network access and understanding of library vulnerabilities"
                }
            ],
            "Potential Impact": "Service unavailability, corruption of application state, and potential loss of data.",
            "MITRE ATT&CK Keywords": [
                "application crash",
                "PHP exploit",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a flaw in the EmonCMS to gain administrative privileges",
            "Assumptions": [
                {
                    "Assumption": "EmonCMS contains a privilege escalation vulnerability",
                    "Role": "System Designer",
                    "Condition": "Poor role and access management implementation"
                },
                {
                    "Assumption": "Attackers can interact with the application",
                    "Role": "Attacker",
                    "Condition": "Network access and understanding of application flaws"
                },
                {
                    "Assumption": "No regular security audits or vulnerability assessments",
                    "Role": "System Administrator",
                    "Condition": "Lack of security measures and oversight"
                }
            ],
            "Potential Impact": "Unauthorized control over the entire system, leading to potential system-wide manipulations and data access.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "administrative access",
                "unauthorized control"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a SQL injection vulnerability to escalate privileges in the database",
            "Assumptions": [
                {
                    "Assumption": "Application is susceptible to SQL injection",
                    "Role": "System Designer",
                    "Condition": "Poor input validation and sanitization practices"
                },
                {
                    "Assumption": "The attacker has access to the web interface",
                    "Role": "Attacker",
                    "Condition": "Ability to input malicious SQL statements"
                },
                {
                    "Assumption": "Database accounts are improperly configured",
                    "Role": "System Administrator",
                    "Condition": "Excessive privileges and poor role management"
                }
            ],
            "Potential Impact": "Unauthorized modification of database records and gaining higher privileges to further alter or access data.",
            "MITRE ATT&CK Keywords": [
                "SQL injection",
                "database compromise",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages default or weak credentials to gain privileged access to emonBase",
            "Assumptions": [
                {
                    "Assumption": "Default credentials are not changed",
                    "Role": "User/System Administrator",
                    "Condition": "Lack of secure configuration practices"
                },
                {
                    "Assumption": "Weak password policies",
                    "Role": "System Designer",
                    "Condition": "Inadequate enforcement of strong passwords"
                },
                {
                    "Assumption": "Attackers can attempt credential guessing",
                    "Role": "Attacker",
                    "Condition": "Network access and ability to conduct brute-force attacks"
                }
            ],
            "Potential Impact": "Full administrative access to the system, leading to potential misuse, data theft, and harmful configurations.",
            "MITRE ATT&CK Keywords": [
                "credential guessing",
                "weak passwords",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "4",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate an authorized device such as emonPi or emonBase to gain unauthorized access to the system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to the OEM system.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "The OEM system lacks strong mutual authentication protocols.",
                    "Role": "System Designer",
                    "Condition": "Absence of strong mutual authentication"
                },
                {
                    "Assumption": "The attacker can intercept and analyze MQTT messages.",
                    "Role": "Attacker",
                    "Condition": "Ability to intercept MQTT traffic"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of data, tampering with data, and disruption of services.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Impersonation",
                "Network",
                "Device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends fraudulent MQTT messages to the MQTT Broker, masquerading as legitimate devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not encrypted or digitally signed.",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption and signing"
                },
                {
                    "Assumption": "The attacker has access to the network where MQTT messages are being sent.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "The attacker can identify valid device identifiers within the system.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of device IDs"
                }
            ],
            "Potential Impact": "Tampering with data and possible control of home devices leading to disruption.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "MQTT",
                "Network",
                "Message"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker can take over user sessions on the EmonCMS Web Application by hijacking session tokens.",
            "Assumptions": [
                {
                    "Assumption": "Session tokens are sent over an unencrypted communication channel.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted session token transmission"
                },
                {
                    "Assumption": "The attacker can capture network traffic between users and the web application.",
                    "Role": "Attacker",
                    "Condition": "Network traffic interception"
                },
                {
                    "Assumption": "The session management mechanism of the web application is weak.",
                    "Role": "System Designer",
                    "Condition": "Weak session management"
                }
            ],
            "Potential Impact": "Unauthorized access to user data and potential compromises in system control.",
            "MITRE ATT&CK Keywords": [
                "Session Hijacking",
                "Web Application",
                "Network",
                "Spoofing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data stored in the emonPi or emonBase, leading to incorrect reporting.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the device.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access"
                },
                {
                    "Assumption": "The device firmware or software does not have safeguards against unauthorized modifications.",
                    "Role": "System Designer",
                    "Condition": "Lack of safeguards"
                },
                {
                    "Assumption": "Storage media of the device is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted storage"
                }
            ],
            "Potential Impact": "Tampering with data and potential loss of data integrity.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Modification",
                "Device",
                "Firmware"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates MQTT messages in transit to alter the control commands issued to home devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not protected by integrity checks.",
                    "Role": "System Designer",
                    "Condition": "Lack of message integrity"
                },
                {
                    "Assumption": "The attacker has access to the network segment where messages transit.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "There is no secondary verification of command execution at the device end.",
                    "Role": "System Designer",
                    "Condition": "Absence of secondary verification"
                }
            ],
            "Potential Impact": "Loss of control over devices and potential operational disruption.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "MQTT",
                "Network",
                "Message"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker accesses and alters configuration files in the EmonCMS Web Application, affecting functionality and security settings.",
            "Assumptions": [
                {
                    "Assumption": "The web application server has vulnerable security configurations.",
                    "Role": "System Admin",
                    "Condition": "Vulnerable configurations"
                },
                {
                    "Assumption": "The attacker gains administrative access to the server.",
                    "Role": "Attacker",
                    "Condition": "Administrative access"
                },
                {
                    "Assumption": "Configuration files are not protected or monitored.",
                    "Role": "System Designer",
                    "Condition": "Unprotected configuration files"
                }
            ],
            "Potential Impact": "Functional disruption and potential security breaches.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Configuration Files",
                "Web Application",
                "Server"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies performing certain actions on the EmonCMS Web Application due to lack of proper logging and auditing.",
            "Assumptions": [
                {
                    "Assumption": "The application does not maintain comprehensive activity logs.",
                    "Role": "System Designer",
                    "Condition": "Lack of logging"
                },
                {
                    "Assumption": "User actions are not traceable to individual users.",
                    "Role": "System Admin",
                    "Condition": "Untraceable actions"
                },
                {
                    "Assumption": "There is no non-repudiation mechanism in place.",
                    "Role": "System Designer",
                    "Condition": "Absence of non-repudiation"
                }
            ],
            "Potential Impact": "Difficulty in attributing actions and enforcing accountability.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Auditing",
                "Web Application"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending or receiving specific MQTT messages due to lack of logging on the MQTT Broker.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker does not log all messages and operations.",
                    "Role": "System Designer",
                    "Condition": "Insufficient logging"
                },
                {
                    "Assumption": "There is no mechanism to verify the authenticity of MQTT messages.",
                    "Role": "System Designer",
                    "Condition": "Lack of authentication"
                },
                {
                    "Assumption": "The system relies on implicit trust for device communications.",
                    "Role": "System Designer",
                    "Condition": "Implicit trust"
                }
            ],
            "Potential Impact": "Challenges in auditing and investigating incidents.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "MQTT",
                "Logging",
                "Broker"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A system administrator denies making crucial configuration changes to devices such as emonPi or emonBase.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged with user identifiers and timestamps.",
                    "Role": "System Designer",
                    "Condition": "Lack of detailed logging"
                },
                {
                    "Assumption": "Administrative access is not properly controlled and monitored.",
                    "Role": "System Admin",
                    "Condition": "Improper access control"
                },
                {
                    "Assumption": "There is no audit trail for configuration changes.",
                    "Role": "System Admin",
                    "Condition": "Absence of audit trails"
                }
            ],
            "Potential Impact": "Difficulty in enforcing accountability and tracking unauthorized changes.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Configuration Change",
                "Logging",
                "Device"
            ],
            "mitre_technique": {
                "name": "Keylogging",
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
                "technique_id": "T1056.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted MQTT messages containing sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are transmitted over unsecured channels.",
                    "Role": "System Designer",
                    "Condition": "Unsecured transmission"
                },
                {
                    "Assumption": "The attacker has network access to intercept the messages.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "Sensitive data is included in plain text within MQTT messages.",
                    "Role": "System Designer",
                    "Condition": "Plain text data"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Interception",
                "Unencrypted",
                "MQTT",
                "Data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored in the EmonCMS Web Application database is exposed due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive data is stored in an unencrypted format in the database.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted storage"
                },
                {
                    "Assumption": "The attacker gains unauthorized access to the database.",
                    "Role": "Attacker",
                    "Condition": "Database access"
                },
                {
                    "Assumption": "There are no additional protection measures for sensitive data.",
                    "Role": "System Designer",
                    "Condition": "Lack of protection measures"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Database",
                "Sensitive Data",
                "Unencrypted",
                "Web Application"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to sensitive configuration files on emonPi or emonBase due to improper file permissions.",
            "Assumptions": [
                {
                    "Assumption": "Configuration files have permissive file permissions.",
                    "Role": "System Designer",
                    "Condition": "Permissive permissions"
                },
                {
                    "Assumption": "The attacker has access to the file system.",
                    "Role": "Attacker",
                    "Condition": "File system access"
                },
                {
                    "Assumption": "Sensitive information is stored in the configuration files.",
                    "Role": "System Designer",
                    "Condition": "Sensitive information"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive configuration information.",
            "MITRE ATT&CK Keywords": [
                "Filesystem Access",
                "Configuration Files",
                "Information Disclosure",
                "Device"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DoS attack on the MQTT Broker, overwhelming it with traffic and causing legitimate messages to be dropped.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker does not have rate limiting or DoS protection mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Lack of DoS protection"
                },
                {
                    "Assumption": "The attacker can generate a large volume of traffic targeting the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Ability to generate traffic"
                },
                {
                    "Assumption": "The system does not have a redundant MQTT broker setup.",
                    "Role": "System Designer",
                    "Condition": "Single point of failure"
                }
            ],
            "Potential Impact": "Disruption of communications and loss of service availability.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "MQTT Broker",
                "Traffic Overload",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits the buffer overflow vulnerability in the MySQL daemon to crash the database server.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL server is not patched against the known buffer overflow vulnerability.",
                    "Role": "System Admin",
                    "Condition": "Unpatched server"
                },
                {
                    "Assumption": "The attacker can send crafted input to the MySQL server.",
                    "Role": "Attacker",
                    "Condition": "Ability to send input"
                },
                {
                    "Assumption": "Server has a single point of failure.",
                    "Role": "System Designer",
                    "Condition": "Single point of failure"
                }
            ],
            "Potential Impact": "Complete denial of service to applications dependent on the database.",
            "MITRE ATT&CK Keywords": [
                "Buffer Overflow",
                "MySQL",
                "Database Crash",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A static IP address DoS attack targets the EmonCMS Web Application, making it inaccessible to legitimate users.",
            "Assumptions": [
                {
                    "Assumption": "The web application is accessible over a public static IP address without adequate DDoS protection.",
                    "Role": "System Designer",
                    "Condition": "Inadequate DDoS protection"
                },
                {
                    "Assumption": "The attacker can generate a high volume of traffic directed at the IP address.",
                    "Role": "Attacker",
                    "Condition": "Ability to generate traffic"
                },
                {
                    "Assumption": "The system does not utilize a content delivery network (CDN) for traffic management.",
                    "Role": "System Designer",
                    "Condition": "Lack of CDN"
                }
            ],
            "Potential Impact": "Web application becomes inaccessible to legitimate users.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Web Application",
                "Traffic Overload",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a privilege escalation vulnerability in the Raspberry Pi OS to gain root access to emonPi or emonBase.",
            "Assumptions": [
                {
                    "Assumption": "The operating system is not up-to-date with security patches.",
                    "Role": "System Admin",
                    "Condition": "Outdated OS"
                },
                {
                    "Assumption": "The attacker has local access to the device.",
                    "Role": "Attacker",
                    "Condition": "Local access"
                },
                {
                    "Assumption": "There is a known but unmitigated privilege escalation vulnerability in the OS.",
                    "Role": "System Designer",
                    "Condition": "Unmitigated vulnerability"
                }
            ],
            "Potential Impact": "Attacker gains full control over the device, leading to unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Local Access",
                "Raspberry Pi OS",
                "Root Access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker takes advantage of weak password policies to gain administrative access to the EmonCMS Web Application.",
            "Assumptions": [
                {
                    "Assumption": "The application does not enforce strong password policies.",
                    "Role": "System Designer",
                    "Condition": "Weak password policies"
                },
                {
                    "Assumption": "The attacker can attempt multiple login attempts without being detected.",
                    "Role": "Attacker",
                    "Condition": "Unrestricted login attempts"
                },
                {
                    "Assumption": "Administrative accounts use easily guessable passwords.",
                    "Role": "System Admin",
                    "Condition": "Weak passwords"
                }
            ],
            "Potential Impact": "Unauthorized administrative access and potential system-wide changes.",
            "MITRE ATT&CK Keywords": [
                "Weak Passwords",
                "Administrative Access",
                "Web Application",
                "Brute Force"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker with initial access to the system can leverage misconfigurations to escalate privileges to affect more critical aspects of the IoT network.",
            "Assumptions": [
                {
                    "Assumption": "Initial access to a less privileged account is obtainable.",
                    "Role": "Attacker",
                    "Condition": "Initial account access"
                },
                {
                    "Assumption": "The system contains misconfigurations that allow privilege escalation.",
                    "Role": "System Designer",
                    "Condition": "Misconfigurations present"
                },
                {
                    "Assumption": "Privilege escalation attacks are not adequately monitored.",
                    "Role": "System Admin",
                    "Condition": "Lack of monitoring"
                }
            ],
            "Potential Impact": "Higher control over the system resources or access to sensitive areas.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "IoT Network",
                "Misconfigurations",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Windows File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
                "id": "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee",
                "technique_id": "T1222.001"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "7",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends malicious MQTT messages pretending to be a legitimate device within the OEM system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network.",
                    "Role": "Attacker",
                    "Condition": "Attacker must be within network range or have compromised network access."
                },
                {
                    "Assumption": "MQTT messages are not properly authenticated.",
                    "Role": "System",
                    "Condition": "The system does not enforce strict authentication on MQTT messages."
                },
                {
                    "Assumption": "The MQTT broker accepts connections without strong verification.",
                    "Role": "MQTT Broker",
                    "Condition": "The broker lacks mechanisms for verifying the integrity of connecting devices."
                }
            ],
            "Potential Impact": "Unauthorized control or data insertion within the system.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "MQTT",
                "message"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises as a legitimate user to access the EmonCMS Web Application due to lack of proper authentication mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "The web application lacks multi-factor authentication.",
                    "Role": "System",
                    "Condition": "User login process does not use multi-factor authentication."
                },
                {
                    "Assumption": "Weak or default passwords are used.",
                    "Role": "User",
                    "Condition": "Users have not changed default passwords or have weak passwords."
                },
                {
                    "Assumption": "Attacker has obtained some user credentials.",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to or has obtained legitimate user credentials."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive energy usage data and control capabilities.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "web",
                "credentials",
                "EmonCMS"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a compromised DNS server to direct traffic intended for the OEM system to a malicious server.",
            "Assumptions": [
                {
                    "Assumption": "The DNS server can be compromised or controlled by the attacker.",
                    "Role": "Attacker",
                    "Condition": "Attacker has the means to compromise or control a DNS server."
                },
                {
                    "Assumption": "Clients do not verify the authenticity of the server.",
                    "Role": "Client Devices",
                    "Condition": "Client devices do not perform strict server authenticity checks."
                },
                {
                    "Assumption": "The OEM system relies on DNS for operation.",
                    "Role": "System",
                    "Condition": "The system depends on DNS queries for proper functioning."
                }
            ],
            "Potential Impact": "Redirection of legitimate traffic to malicious servers, leading to data theft or malicious commands.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "DNS",
                "redirect",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates the data collected by emonPi or emonBase before it reaches the central system.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can intercept data between collection modules and the central system.",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to the network or physical communication lines."
                },
                {
                    "Assumption": "Data transmission is not encrypted.",
                    "Role": "System",
                    "Condition": "Communication over the network is not secured using encryption."
                },
                {
                    "Assumption": "System does not validate integrity of collected data.",
                    "Role": "System",
                    "Condition": "The system does not perform integrity checks on incoming data."
                }
            ],
            "Potential Impact": "Inaccurate energy usage reports and potential manipulation of system behavior.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data",
                "communication",
                "MQTT"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits known vulnerabilities in MySQL to modify or delete data in the EmonCMS database.",
            "Assumptions": [
                {
                    "Assumption": "Database server runs a vulnerable version of MySQL.",
                    "Role": "System",
                    "Condition": "The MySQL server is not updated or patched."
                },
                {
                    "Assumption": "Attacker can access the MySQL server.",
                    "Role": "Attacker",
                    "Condition": "Attacker has network access to the MySQL server."
                },
                {
                    "Assumption": "Weak database authentication mechanisms are in place.",
                    "Role": "System",
                    "Condition": "Database relies on weak or easily compromised authentication methods."
                }
            ],
            "Potential Impact": "Corruption or loss of critical collected data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "MySQL",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker replaces firmware on emonTx modules with malicious versions.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not authenticated.",
                    "Role": "System",
                    "Condition": "System does not perform authentication on firmware updates."
                },
                {
                    "Assumption": "Attacker has access to the firmware update process.",
                    "Role": "Attacker",
                    "Condition": "Attacker can access or intercept the firmware update mechanism."
                },
                {
                    "Assumption": "Secure Boot is not enforced.",
                    "Role": "System",
                    "Condition": "System allows booting from unauthenticated firmware."
                }
            ],
            "Potential Impact": "Malicious control of environmental and power monitoring modules.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "emonTx",
                "modules"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending control commands to the WiFi MQTT Relay, claiming that the commands were sent by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not detailed or tamper-evident.",
                    "Role": "System",
                    "Condition": "Logs do not have sufficient detail or protection against tampering."
                },
                {
                    "Assumption": "There is no non-repudiation mechanism in place.",
                    "Role": "System",
                    "Condition": "The system does not provide means to ensure authenticity of command origin."
                },
                {
                    "Assumption": "Logs do not have proper access controls.",
                    "Role": "System",
                    "Condition": "Logs are not protected against unauthorized access or modification."
                }
            ],
            "Potential Impact": "Unreliable audit trails and potential malicious actions going unreported.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logs",
                "audit",
                "control"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs actions on the EmonCMS Web Application and later denies performing those actions.",
            "Assumptions": [
                {
                    "Assumption": "System lacks proper session tracking and logging.",
                    "Role": "System",
                    "Condition": "The system does not record sufficient session information."
                },
                {
                    "Assumption": "Logs can be altered by high-privileged users.",
                    "Role": "Attacker/User",
                    "Condition": "Log files are not protected against tampering by users with high privileges."
                },
                {
                    "Assumption": "No digital signatures on logs.",
                    "Role": "System",
                    "Condition": "System logs are not digitally signed to prevent tampering."
                }
            ],
            "Potential Impact": "Inability to trace malicious actions back to the perpetrator.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "web",
                "session",
                "logs"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A compromised device sends data to the MQTT broker, and the attacker later denies altering the device's firmware.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not logged.",
                    "Role": "System",
                    "Condition": "The system does not log firmware updates or changes."
                },
                {
                    "Assumption": "Electronic signatures are not used to verify firmware authenticity.",
                    "Role": "System",
                    "Condition": "The system does not verify firmware authenticity using digital signatures."
                },
                {
                    "Assumption": "System does not report anomalies in device behavior.",
                    "Role": "System",
                    "Condition": "Anomalies in device behavior are not logged or reported."
                }
            ],
            "Potential Impact": "Undetected malicious firmware modifications causing unreliable device behavior.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "firmware",
                "logs",
                "MQTT"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malicious actor intercepts communication between emonPi/emonBase and the central system to steal sensitive energy data.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "System",
                    "Condition": "Communication between devices is not encrypted."
                },
                {
                    "Assumption": "Attacker can access the transmission channel.",
                    "Role": "Attacker",
                    "Condition": "Attacker is within range or has access to the network where data is transmitted."
                },
                {
                    "Assumption": "No data integrity checks in place.",
                    "Role": "System",
                    "Condition": "The system does not perform data integrity checks on received data."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of detailed energy usage data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "intercept",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the MySQL database containing sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Database authentication is weak or misconfigured.",
                    "Role": "System",
                    "Condition": "The database system uses weak authentication mechanisms."
                },
                {
                    "Assumption": "Database server has unpatched vulnerabilities.",
                    "Role": "System",
                    "Condition": "MySQL server version is not up-to-date and patched."
                },
                {
                    "Assumption": "No encryption for stored data.",
                    "Role": "System",
                    "Condition": "Stored data is not encrypted at rest."
                }
            ],
            "Potential Impact": "Exposure of sensitive collected data to unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database",
                "MySQL",
                "access"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exposed MQTT broker configuration allows unauthorized subscription and publication of sensitive topics.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not enforce access control on topics.",
                    "Role": "System",
                    "Condition": "The system does not restrict access to MQTT topics."
                },
                {
                    "Assumption": "MQTT communication is not encrypted.",
                    "Role": "System",
                    "Condition": "Messages within the MQTT protocol are sent in plaintext."
                },
                {
                    "Assumption": "Logs do not capture unauthorized access.",
                    "Role": "System",
                    "Condition": "System logs do not track unauthorized access attempts."
                }
            ],
            "Potential Impact": "Unauthorized disclosure or manipulation of MQTT messages.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MQTT",
                "messages",
                "subscription"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Webhook",
                "description": "Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server.(Citation: RedHat Webhooks) Many public and commercial services, such as Discord, Slack, and `webhook.site`, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello.(Citation: Discord Intro to Webhooks) When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application. \n\nAdversaries may link an adversary-owned environment to a victim-owned SaaS service to achieve repeated [Automated Exfiltration](https://attack.mitre.org/techniques/T1020) of emails, chat messages, and other data.(Citation: Push Security SaaS Attacks Repository Webhooks) Alternatively, instead of linking the webhook endpoint to a service, an adversary can manually post staged data directly to the URL in order to exfiltrate it.(Citation: Microsoft SQL Server)\n\nAccess to webhook endpoints is often over HTTPS, which gives the adversary an additional level of protection. Exfiltration leveraging webhooks can also blend in with normal network traffic if the webhook endpoint points to a commonly used SaaS application or collaboration service.(Citation: CyberArk Labs Discord)(Citation: Talos Discord Webhook Abuse)(Citation: Checkmarx Webhooks)",
                "id": "attack-pattern--43f2776f-b4bd-4118-94b8-fee47e69676d",
                "technique_id": "T1567.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious peer exploit the OpenSSL vulnerability (via SSL_check_chain() function) causing the MySQL server to crash.",
            "Assumptions": [
                {
                    "Assumption": "The system uses an affected version of OpenSSL.",
                    "Role": "System",
                    "Condition": "OpenSSL version is susceptible to the known vulnerability."
                },
                {
                    "Assumption": "Malicious client can interact with the MySQL server.",
                    "Role": "Attacker",
                    "Condition": "Attacker can initiate a connection to the MySQL server."
                },
                {
                    "Assumption": "No input validation for SSL connections.",
                    "Role": "System",
                    "Condition": "System does not validate the integrity of incoming SSL connections."
                }
            ],
            "Potential Impact": "Disruption of service due to frequent MySQL server crashes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MySQL",
                "OpenSSL",
                "SSL_check_chain"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Large number of malicious MQTT messages flood the MQTT broker, preventing legitimate messages from being processed.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker lacks rate limiting or message filtering.",
                    "Role": "System",
                    "Condition": "The broker does not implement rate limiting or message filtering mechanisms."
                },
                {
                    "Assumption": "Attacker has network access to the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Attacker can connect to the MQTT broker and send messages."
                },
                {
                    "Assumption": "No capacity planning for message handling.",
                    "Role": "System",
                    "Condition": "System does not plan capacity for handling message floods."
                }
            ],
            "Potential Impact": "Legitimate messages are delayed or lost, affecting system functionality.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "message flood",
                "broker"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Buffer overflow in the MySQL daemon due to a long 'datadir' parameter allows local users to crash the server or execute arbitrary code.",
            "Assumptions": [
                {
                    "Assumption": "Local users have access to modify the my.ini file.",
                    "Role": "User",
                    "Condition": "File permissions allow local users to edit the my.ini file."
                },
                {
                    "Assumption": "MySQL version is affected by the buffer overflow vulnerability.",
                    "Role": "System",
                    "Condition": "The MySQL server version is not updated or patched."
                },
                {
                    "Assumption": "No input validation for configuration parameters.",
                    "Role": "System",
                    "Condition": "System does not validate the length or content of configuration parameters."
                }
            ],
            "Potential Impact": "Service disruption or potential unauthorized code execution on the server.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "buffer overflow",
                "MySQL",
                "execution"
            ],
            "mitre_technique": {
                "name": "Encrypted/Encoded File",
                "description": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use.\n\nThis type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.(Citation: File obfuscation) Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding/compression schemes such as Base64.\n\nThe entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.\n\nFor example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing](https://attack.mitre.org/techniques/T1566) payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: SFX - Encrypted/Encoded File) \n\nAdversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) execution.",
                "id": "attack-pattern--0d91b3c0-5e50-47c3-949a-2a796f04d144",
                "technique_id": "T1027.013"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the EmonCMS Web Application to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Web application has known vulnerabilities.",
                    "Role": "System",
                    "Condition": "The EmonCMS Web Application contains exploitable vulnerabilities."
                },
                {
                    "Assumption": "Attacker has access to interact with the web application.",
                    "Role": "Attacker",
                    "Condition": "Attacker can access the web interface of the EmonCMS system."
                },
                {
                    "Assumption": "No web application firewall in place.",
                    "Role": "System",
                    "Condition": "The system does not employ a web application firewall to filter malicious traffic."
                }
            ],
            "Potential Impact": "Unauthorized administrative access compromising the entire system's security.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "EmonCMS",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages unpatched vulnerabilities in PHP to execute arbitrary code with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "PHP version is vulnerable.",
                    "Role": "System",
                    "Condition": "The PHP implementation used is not up-to-date."
                },
                {
                    "Assumption": "Attacker can execute PHP code on the server.",
                    "Role": "Attacker",
                    "Condition": "Attacker can trigger code execution via vulnerable PHP components."
                },
                {
                    "Assumption": "No security enhancements in place.",
                    "Role": "System",
                    "Condition": "System does not have security enforcement mechanisms like SELinux or AppArmor."
                }
            ],
            "Potential Impact": "Unauthorized command execution compromising server integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "PHP",
                "code execution",
                "server"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A low-privileged user exploits a MySQL vulnerability to gain root access to the database server.",
            "Assumptions": [
                {
                    "Assumption": "MySQL server has unpatched vulnerabilities.",
                    "Role": "System",
                    "Condition": "The MySQL server version is not patched for known vulnerabilities."
                },
                {
                    "Assumption": "Low-privileged users can execute complex queries.",
                    "Role": "User",
                    "Condition": "Database users can perform operations that could exploit vulnerabilities."
                },
                {
                    "Assumption": "Insufficient sandboxing or isolation of database operations.",
                    "Role": "System",
                    "Condition": "The system lacks proper isolation for its database operations."
                }
            ],
            "Potential Impact": "Root access to the database leading to severe data integrity and confidentiality breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MySQL",
                "root access",
                "database"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "8",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers gain unauthorized access to the MQTT broker by spoofing the IP addresses of legitimate devices within the network.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker relies on IP-based authentication.",
                    "Role": "System Architect",
                    "Condition": "Current network security settings do not include advanced authentication mechanisms."
                },
                {
                    "Assumption": "Attacker has access to the network to conduct IP spoofing.",
                    "Role": "Attacker",
                    "Condition": "Access to network either physically or through another compromised device."
                }
            ],
            "Potential Impact": "Compromise of data integrity and unauthorized device control.",
            "MITRE ATT&CK Keywords": [
                "IP Spoofing",
                "Network Protocol",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a legitimate user's credentials to access the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "Lack of multi-factor authentication.",
                    "Role": "System Architect",
                    "Condition": "Users rely solely on usernames and passwords for access."
                },
                {
                    "Assumption": "User credentials are not sufficiently protected or have been leaked.",
                    "Role": "User",
                    "Condition": "Passwords are weak or reused in multiple places."
                }
            ],
            "Potential Impact": "Leakage of sensitive data and unauthorized control over the home automation system.",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Phishing",
                "Password Spraying"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Compromised MQTT clients are programmed to send falsified data to emulate devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not verify message sources adequately.",
                    "Role": "System Architect",
                    "Condition": "Lack of strict message validation protocols."
                },
                {
                    "Assumption": "Firmware of MQTT clients can be compromised.",
                    "Role": "Attacker",
                    "Condition": "Clients have vulnerabilities that are exploitable."
                }
            ],
            "Potential Impact": "Data integrity is compromised and critical automation decisions based on falsified data.",
            "MITRE ATT&CK Keywords": [
                "Man-in-the-Middle",
                "Firmware Vulnerability",
                "Data Injection"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Unauthorized modification of the firmware on emonPi and emonBase devices.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not properly secured.",
                    "Role": "System Architect",
                    "Condition": "Firmware updates do not utilize digital signatures."
                },
                {
                    "Assumption": "Physical access to the devices is possible.",
                    "Role": "Attacker",
                    "Condition": "Devices are in unsecured locations or maintenance is outsourced without checks."
                }
            ],
            "Potential Impact": "Unreliable operation and security of the energy monitoring system.",
            "MITRE ATT&CK Keywords": [
                "Firmware Modification",
                "Physical Access",
                "Malware Injection"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "SQL injection attacks on the EmonCMS resulting in unauthorized data modification.",
            "Assumptions": [
                {
                    "Assumption": "Web application does not properly sanitize inputs.",
                    "Role": "Developer",
                    "Condition": "Input validation mechanisms are not implemented."
                },
                {
                    "Assumption": "MySQL database is exposed to untrusted inputs.",
                    "Role": "System Administrator",
                    "Condition": "Database queries are constructed improperly."
                }
            ],
            "Potential Impact": "Corruption of the energy usage data and potential database access by attackers.",
            "MITRE ATT&CK Keywords": [
                "SQL Injection",
                "Web Application Security",
                "Database Compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware is introduced into the MQTT communications, altering incoming and outgoing messages.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communications are not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Communications are transmitted in plaintext."
                },
                {
                    "Assumption": "Endpoint devices do not verify data integrity.",
                    "Role": "Device Manufacturer",
                    "Condition": "Devices lack mechanisms to verify message hashes or signatures."
                }
            ],
            "Potential Impact": "Corruption of control commands and sensor data.",
            "MITRE ATT&CK Keywords": [
                "Network Message Forgery",
                "MQTT Manipulation",
                "Encryption Bypass"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Logs within the EmonCMS are altered to remove traces of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not tamper-proof.",
                    "Role": "System Architect",
                    "Condition": "Logs are stored without integrity checks."
                },
                {
                    "Assumption": "Unauthorized access to the EmonCMS server is possible.",
                    "Role": "Attacker",
                    "Condition": "Security vulnerabilities or weak access controls enable unauthorized access."
                }
            ],
            "Potential Impact": "Incident response is hindered and unauthorized activities are concealed.",
            "MITRE ATT&CK Keywords": [
                "Log Manipulation",
                "Unauthorized Access",
                "Incident Concealment"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Automated MQTT messages from devices are not recorded accurately.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not validate incoming messages.",
                    "Role": "System Architect",
                    "Condition": "Messages are not logged properly or logs are modifiable."
                },
                {
                    "Assumption": "Logging configuration is not properly secured.",
                    "Role": "System Administrator",
                    "Condition": "Logs can be altered by unauthorized users or processes."
                }
            ],
            "Potential Impact": "Loss of message traceability and accountability in system operations.",
            "MITRE ATT&CK Keywords": [
                "Message Tracking Failure",
                "Log Inconsistency",
                "System Mismanagement"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Actions taken through the WiFi MQTT Relay are not properly logged, allowing attackers to manipulate relays without detection.",
            "Assumptions": [
                {
                    "Assumption": "Relay commands and responses are not logged.",
                    "Role": "System Architect",
                    "Condition": "Relay actions lack logging or use insecure logging methods."
                },
                {
                    "Assumption": "Network access control mechanisms are weak.",
                    "Role": "Network Administrator",
                    "Condition": "Network is not properly segmented or secured against unauthorized access."
                }
            ],
            "Potential Impact": "Misuse of critical devices within the home automation system without traceability.",
            "MITRE ATT&CK Keywords": [
                "Relay Command Tampering",
                "Audit Trail Evasion",
                "Device Misuse"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive energy usage data intercepted during MQTT communication.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Communication channels are not secured using TLS or other encryption methods."
                },
                {
                    "Assumption": "Attacker has access to the network.",
                    "Role": "Attacker",
                    "Condition": "Access could be local or remote if the network is compromised."
                }
            ],
            "Potential Impact": "Leakage of sensitive information such as energy consumption patterns.",
            "MITRE ATT&CK Keywords": [
                "Data Interception",
                "MQTT Protocol",
                "Unencrypted Communication"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to the EmonCMS web application results in the exposure of sensitive user data.",
            "Assumptions": [
                {
                    "Assumption": "Weak security controls on the web application.",
                    "Role": "System Architect",
                    "Condition": "Insufficient authentication and authorization measures."
                },
                {
                    "Assumption": "Vulnerabilities in PHP web framework.",
                    "Role": "Developer",
                    "Condition": "Unpatched known vulnerabilities."
                }
            ],
            "Potential Impact": "Exposure of personal information and energy usage details.",
            "MITRE ATT&CK Keywords": [
                "Sensitive Data Exposure",
                "Web Application Compromise",
                "Authentication Weakness"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Database vulnerabilities in MySQL allow attackers to exfiltrate sensitive data from the EmonCMS storage.",
            "Assumptions": [
                {
                    "Assumption": "Database is not adequately protected.",
                    "Role": "Database Administrator",
                    "Condition": "Lack of encryption or access controls on the stored data."
                },
                {
                    "Assumption": "Exploitable MySQL vulnerabilities are present.",
                    "Role": "Attacker",
                    "Condition": "Database version is outdated and susceptible to known CVEs."
                }
            ],
            "Potential Impact": "Unauthorized access to large volumes of sensitive energy and personal data.",
            "MITRE ATT&CK Keywords": [
                "Database Exploitation",
                "SQL Injection",
                "Data Exfiltration"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the EmonCMS web application, making it unavailable to users.",
            "Assumptions": [
                {
                    "Assumption": "Web application exposed to the internet.",
                    "Role": "System Architect",
                    "Condition": "Publicly accessible web services without DDoS protection."
                },
                {
                    "Assumption": "Lack of rate limiting on user requests.",
                    "Role": "System Administrator",
                    "Condition": "Web service configuration does not restrict the number of requests from a single entity."
                }
            ],
            "Potential Impact": "Disruption in accessibility of energy monitoring and control services.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Service Interruption",
                "Web Application"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of known vulnerabilities in MySQL to crash the database server.",
            "Assumptions": [
                {
                    "Assumption": "MySQL server utilizes vulnerable versions.",
                    "Role": "Database Administrator",
                    "Condition": "Running outdated or unpatched MySQL server."
                },
                {
                    "Assumption": "Remote access to the MySQL server possible.",
                    "Role": "Attacker",
                    "Condition": "MySQL server exposed to the internal or external network without sufficient protections."
                }
            ],
            "Potential Impact": "Loss of database services affecting data accessibility and application functionality.",
            "MITRE ATT&CK Keywords": [
                "Database Crash",
                "Exploitable Vulnerability",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "MQTT broker crash caused by malformed MQTT messages designed to exploit a vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not handle exceptional inputs gracefully.",
                    "Role": "System Architect",
                    "Condition": "Lack of input validation or error handling in the MQTT implementation."
                },
                {
                    "Assumption": "Malicious actors have network access.",
                    "Role": "Attacker",
                    "Condition": "Potential local or remote access due to compromised network devices."
                }
            ],
            "Potential Impact": "Interruption of IoT device communication leading to a loss of monitoring and control.",
            "MITRE ATT&CK Keywords": [
                "Protocol Exploitation",
                "Buffer Overflow",
                "Message Tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of PHP vulnerabilities in the EmonCMS for gaining unauthorized access as an admin user.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerable PHP components are used in the application.",
                    "Role": "Developer",
                    "Condition": "Presence of known PHP vulnerabilities in the application."
                },
                {
                    "Assumption": "Web application is accessible to potentially malicious users.",
                    "Role": "Attacker",
                    "Condition": "Public exposure of the EmonCMS web application."
                }
            ],
            "Potential Impact": "Complete control over the application leading to data manipulation and unauthorized operations.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Web Application Vulnerability",
                "Admin Compromise"
            ],
            "mitre_technique": {
                "name": "AppCert DLLs",
                "description": "Dynamic-link libraries (DLLs) that are specified in the AppCertDLLs Registry key under <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions CreateProcess, CreateProcessAsUser, CreateProcessWithLoginW, CreateProcessWithTokenW, or WinExec. (Citation: Elastic Process Injection July 2017)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer.",
                "id": "attack-pattern--4bf5845d-a814-4490-bc5c-ccdee6043025",
                "technique_id": "T1182"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Bypassing access controls on the emonPi and emonBase, attackers gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Access control mechanisms are not robust.",
                    "Role": "System Architect",
                    "Condition": "Insufficient protection against privilege escalation in the device firmware."
                },
                {
                    "Assumption": "Devices are potentially accessible via network or physical access.",
                    "Role": "Attacker",
                    "Condition": "Network infrastructure is weak or physical devices are unsecured."
                }
            ],
            "Potential Impact": "Full system control allowing attackers to execute arbitrary commands and access sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Root Access",
                "Firmware Vulnerability",
                "Device Compromise"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting vulnerabilities within MySQL to escalate privileges and gain unauthorized access to the database.",
            "Assumptions": [
                {
                    "Assumption": "MySQL server susceptible to known CVEs.",
                    "Role": "Database Administrator",
                    "Condition": "Using unpatched versions of MySQL with known vulnerabilities."
                },
                {
                    "Assumption": "Database permissions are not properly configured.",
                    "Role": "System Administrator",
                    "Condition": "Overly broad permissions granted by default."
                }
            ],
            "Potential Impact": "Database manipulation, unauthorized data access, and control.",
            "MITRE ATT&CK Keywords": [
                "Database Privilege Escalation",
                "SQL Exploitation",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "9",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an emonPi or emonBase device to send falsified data to the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of the MQTT broker details.",
                    "Role": "Attacker",
                    "Condition": "The MQTT broker's address and ports are accessible to the attacker."
                },
                {
                    "Assumption": "The attacker can broadcast messages on the MQTT protocol.",
                    "Role": "Attacker",
                    "Condition": "The network configuration does not enforce strict message authentication."
                },
                {
                    "Assumption": "There is no robust authentication mechanism for device identification.",
                    "Role": "OEM System",
                    "Condition": "The current system does not implement device-specific authentication."
                }
            ],
            "Potential Impact": "Unauthorized data manipulation can lead to incorrect energy monitoring and control.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "protocol",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs user identity to gain unauthorized access to the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The web application does not use strong multifactor authentication.",
                    "Role": "EmonCMS Web Application",
                    "Condition": "The system relies on username and password only for authentication."
                },
                {
                    "Assumption": "The attacker has obtained legitimate user credentials (e.g., through phishing).",
                    "Role": "Attacker",
                    "Condition": "Users are susceptible to social engineering attacks."
                },
                {
                    "Assumption": "Network traffic is monitorable by external actors.",
                    "Role": "Network",
                    "Condition": "The network does not use end-to-end encryption for all communications."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and potential control of home automation devices.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "user",
                "web application",
                "access credentials"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a WiFi MQTT Relay to control home appliances.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT protocol messages are not encrypted.",
                    "Role": "MQTT Protocol",
                    "Condition": "Messages are sent in plaintext."
                },
                {
                    "Assumption": "The attacker is within range of the WiFi network.",
                    "Role": "Attacker",
                    "Condition": "The WiFi network has insufficient security measures."
                },
                {
                    "Assumption": "There is no device-level authentication for the relay.",
                    "Role": "OEM System",
                    "Condition": "The relay accepts control commands without verifying the sender."
                }
            ],
            "Potential Impact": "Unauthorized control over home appliances can lead to potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "relay",
                "device control",
                "WiFi"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters MQTT messages between emonBase and emonCMS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the communication channel between devices.",
                    "Role": "Network",
                    "Condition": "Network traffic is not encrypted."
                },
                {
                    "Assumption": "There are no integrity checks for the data being transmitted.",
                    "Role": "MQTT Protocol",
                    "Condition": "The messages are not signed or hashed."
                },
                {
                    "Assumption": "The attacker has the capability to interrupt and modify network traffic.",
                    "Role": "Attacker",
                    "Condition": "The network lacks monitoring and intrusion detection systems."
                }
            ],
            "Potential Impact": "Unauthorized data manipulation, leading to incorrect information in the EmonCMS dashboard.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network",
                "MQTT",
                "message integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code into the EmonCMS web application, exploiting an existing vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "There are known vulnerabilities in the web application.",
                    "Role": "EmonCMS Web Application",
                    "Condition": "The application is not regularly updated or patched."
                },
                {
                    "Assumption": "The attacker has network access to the web server.",
                    "Role": "Attacker",
                    "Condition": "The server is exposed to the internet without sufficient protections."
                },
                {
                    "Assumption": "The web application's input fields are not properly sanitized.",
                    "Role": "EmonCMS Web Application",
                    "Condition": "User input is not validated or escaped."
                }
            ],
            "Potential Impact": "Unauthorized system control and data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "web application",
                "code injection",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration files on the MQTT Broker to redirect traffic.",
            "Assumptions": [
                {
                    "Assumption": "The configuration files are accessible and modifiable.",
                    "Role": "MQTT Broker",
                    "Condition": "The broker's file system is not secure."
                },
                {
                    "Assumption": "The attacker has sufficient privileges to access the broker.",
                    "Role": "Attacker",
                    "Condition": "The broker's access controls are weak."
                },
                {
                    "Assumption": "Configuration changes are not monitored or logged.",
                    "Role": "MQTT Broker",
                    "Condition": "The system lacks logging and monitoring solutions."
                }
            ],
            "Potential Impact": "Redirection of MQTT traffic, leading to data loss or capture.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MQTT",
                "configuration",
                "redirect"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny sending specific MQTT commands due to lack of logging and traceability.",
            "Assumptions": [
                {
                    "Assumption": "The system does not maintain comprehensive logs of user activities.",
                    "Role": "OEM System",
                    "Condition": "Logging is not enforced for all actions."
                },
                {
                    "Assumption": "Users can deny actions without proof against them.",
                    "Role": "User",
                    "Condition": "The system lacks non-repudiation controls."
                },
                {
                    "Assumption": "There is no strong user authentication in place.",
                    "Role": "OEM System",
                    "Condition": "Authentication methods are weak or easily bypassed."
                }
            ],
            "Potential Impact": "Disputes over actions taken, leading to a lack of accountability and potential system misuse.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user actions",
                "logging",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting(Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW)(Citation: Microsoft About Event Tracing 2018), by tampering settings that control the collection and flow of event telemetry.(Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nFor example, adversaries may modify the `File` value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security</code> to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately.(Citation: disable_win_evt_logging) \n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.\n\nIn Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors (Citation: LemonDuck).",
                "id": "attack-pattern--74d2a63f-3c7b-4852-92da-02d8fbab16da",
                "technique_id": "T1562.006"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes system logs to cover their tracks after a breach.",
            "Assumptions": [
                {
                    "Assumption": "Log files are not protected from unauthorized access.",
                    "Role": "OEM System",
                    "Condition": "The system does not enforce strict access controls on log files."
                },
                {
                    "Assumption": "There is no off-site storage or redundancy for logs.",
                    "Role": "OEM System",
                    "Condition": "Logs are stored locally without backups."
                },
                {
                    "Assumption": "The attacker has sufficient privileges to delete or modify log files.",
                    "Role": "Attacker",
                    "Condition": "Access controls and monitoring are insufficient."
                }
            ],
            "Potential Impact": "Loss of forensic evidence, making it difficult to investigate breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "log deletion",
                "forensics"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users claim that incorrect data was provided, alleging system errors without traceable evidence.",
            "Assumptions": [
                {
                    "Assumption": "The data integrity checks are not enforced.",
                    "Role": "OEM System",
                    "Condition": "System lacks comprehensive data validation mechanisms."
                },
                {
                    "Assumption": "There is no version control for data entries.",
                    "Role": "OEM System",
                    "Condition": "The system does not keep track of data changes and history."
                },
                {
                    "Assumption": "Users can alter or input data without adequate oversight.",
                    "Role": "User",
                    "Condition": "Data entry processes are not monitored or validated."
                }
            ],
            "Potential Impact": "Data disputes can lead to disruption of service and loss of trust in the system.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data integrity",
                "system errors",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Masquerading",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
                "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
                "technique_id": "T1036"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data sent over MQTT is intercepted due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are transmitted in plaintext.",
                    "Role": "MQTT Protocol",
                    "Condition": "No encryption is implemented for MQTT communications."
                },
                {
                    "Assumption": "The attacker can access the network.",
                    "Role": "Attacker",
                    "Condition": "Network security is insufficient."
                },
                {
                    "Assumption": "Sensitive data is transmitted over the network.",
                    "Role": "OEM System",
                    "Condition": "Data is not protected through encryption or other security measures."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user and system information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MQTT",
                "encryption",
                "network interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the EmonCMS web application to access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "There is an existing vulnerability in the web application.",
                    "Role": "EmonCMS Web Application",
                    "Condition": "The application has not been patched or updated."
                },
                {
                    "Assumption": "The attacker can communicate with the web server.",
                    "Role": "Attacker",
                    "Condition": "The server is accessible over the internet."
                },
                {
                    "Assumption": "Sensitive data is stored within the web application.",
                    "Role": "OEM System",
                    "Condition": "Data is stored without adequate protection."
                }
            ],
            "Potential Impact": "Compromise of sensitive user and operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "web application",
                "vulnerability",
                "data compromise"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is exposed through residual information in logs or debug files.",
            "Assumptions": [
                {
                    "Assumption": "The system logs sensitive information without proper sanitation.",
                    "Role": "OEM System",
                    "Condition": "Logging mechanisms do not redact sensitive data."
                },
                {
                    "Assumption": "Log files are accessible to unauthorized users.",
                    "Role": "OEM System",
                    "Condition": "Insufficient access controls on log files."
                },
                {
                    "Assumption": "The attacker has access to the system logs.",
                    "Role": "Attacker",
                    "Condition": "System lacks proper security monitoring."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive information through log analysis.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "logging",
                "debug files",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Log Enumeration",
                "description": "Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records ([Account Discovery](https://attack.mitre.org/techniques/T1087)), security or vulnerable software ([Software Discovery](https://attack.mitre.org/techniques/T1518)), or hosts within a compromised network ([Remote System Discovery](https://attack.mitre.org/techniques/T1018)).\n\nHost binaries may be leveraged to collect system logs. Examples include using `wevtutil.exe` or [PowerShell](https://attack.mitre.org/techniques/T1059/001) on Windows to access and/or export security event information.(Citation: WithSecure Lazarus-NoPineapple Threat Intel Report 2023)(Citation: Cadet Blizzard emerges as novel threat actor) In cloud environments, adversaries may leverage utilities such as the Azure VM Agent\u2019s `CollectGuestLogs.exe` to collect security logs from cloud hosted infrastructure.(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console)\n\nAdversaries may also target centralized logging infrastructure such as SIEMs. Logs may also be bulk exported and sent to adversary-controlled infrastructure for offline analysis.",
                "id": "attack-pattern--866d0d6d-02c6-42bd-aa2f-02907fdc0969",
                "technique_id": "T1654"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a known vulnerability in the MQTT broker to crash the service.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker is running a vulnerable version.",
                    "Role": "MQTT Broker",
                    "Condition": "The broker is not up-to-date with security patches."
                },
                {
                    "Assumption": "The attacker can send specially crafted messages to the broker.",
                    "Role": "Attacker",
                    "Condition": "The broker is accessible over the network."
                },
                {
                    "Assumption": "There is no rate limiting or mitigation for message flooding.",
                    "Role": "OEM System",
                    "Condition": "The system does not have protections against DoS attacks."
                }
            ],
            "Potential Impact": "Disruption of communication between devices, leading to loss of monitoring and control capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "broker",
                "vulnerability exploit"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms the EmonCMS application server with excessive requests.",
            "Assumptions": [
                {
                    "Assumption": "The server does not have adequate traffic filtering mechanisms.",
                    "Role": "EmonCMS Web Application",
                    "Condition": "Traffic monitoring and mitigation are not in place."
                },
                {
                    "Assumption": "The attacker can generate a large number of requests.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to sufficient resources to conduct a DoS attack."
                },
                {
                    "Assumption": "Server capacity is insufficient to handle excessive load.",
                    "Role": "EmonCMS Web Application",
                    "Condition": "The application server has limited capacity and scalability."
                }
            ],
            "Potential Impact": "Server crash or slow performance, leading to service unavailability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "web application",
                "server overload",
                "traffic flood"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a buffer overflow in the MySQL database to cause a crash.",
            "Assumptions": [
                {
                    "Assumption": "The database is running a vulnerable version with buffer overflow issues.",
                    "Role": "MySQL Database",
                    "Condition": "The database is not updated or patched."
                },
                {
                    "Assumption": "The attacker can send malicious input to the database.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to input fields that pass data to the database."
                },
                {
                    "Assumption": "There is no input validation or restrictions in place.",
                    "Role": "OEM System",
                    "Condition": "Input data is not properly sanitized."
                }
            ],
            "Potential Impact": "Database crash, leading to loss of data availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "database",
                "buffer overflow",
                "crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a vulnerability in the EmonCMS web application to gain administrator privileges.",
            "Assumptions": [
                {
                    "Assumption": "There is an unpatched application vulnerability that allows privilege escalation.",
                    "Role": "EmonCMS Web Application",
                    "Condition": "The application is not updated regularly."
                },
                {
                    "Assumption": "The attacker can access the web application.",
                    "Role": "Attacker",
                    "Condition": "The application is accessible over the internet."
                },
                {
                    "Assumption": "The attacker has knowledge of existing exploits.",
                    "Role": "Attacker",
                    "Condition": "The attacker is informed about common vulnerabilities and exploits."
                }
            ],
            "Potential Impact": "Unauthorized administrative access to the system, leading to potential misuse and data compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker compromises the MQTT broker to gain higher permissions than intended.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker has a known vulnerability that allows privilege escalation.",
                    "Role": "MQTT Broker",
                    "Condition": "The broker is not patched."
                },
                {
                    "Assumption": "The attacker can interact with the broker.",
                    "Role": "Attacker",
                    "Condition": "The broker is exposed to potential attackers."
                },
                {
                    "Assumption": "Access controls within the broker are insufficient.",
                    "Role": "MQTT Broker",
                    "Condition": "The broker does not enforce strict access controls."
                }
            ],
            "Potential Impact": "Unauthorized control over MQTT communication and potential data manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MQTT",
                "broker",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a buffer overflow in the MySQL database to execute arbitrary code with higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "The database runs a version vulnerable to buffer overflow attacks.",
                    "Role": "MySQL Database",
                    "Condition": "The database is not updated or patched."
                },
                {
                    "Assumption": "The attacker can supply malicious input to the database.",
                    "Role": "Attacker",
                    "Condition": "Input is accepted by the database without validation."
                },
                {
                    "Assumption": "The database process runs with high privileges.",
                    "Role": "MySQL Database",
                    "Condition": "The database process is not isolated or sandboxed."
                }
            ],
            "Potential Impact": "Execution of arbitrary code, leading to full system compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "database",
                "buffer overflow",
                "arbitrary code execution"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "10",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an authenticated user to control home automation devices using the MQTT protocol.",
            "Assumptions": [
                {
                    "Assumption": "MQTT protocol lacks sufficient authentication mechanisms",
                    "Role": "System Designer",
                    "Condition": "Authentication not enforced"
                },
                {
                    "Assumption": "Attacker has network access to MQTT broker",
                    "Role": "Attacker",
                    "Condition": "Network access granted"
                },
                {
                    "Assumption": "User sessions are identifiable and repeatable",
                    "Role": "User",
                    "Condition": "Static session identifiers used"
                }
            ],
            "Potential Impact": "Unauthorized control of home automation devices.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Identity Theft",
                "Network",
                "MQTT"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses fake credentials to access the EmonCMS web application and view sensitive energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no password policy in place",
                    "Role": "System Administrator",
                    "Condition": "Password policy neglected"
                },
                {
                    "Assumption": "EmonCMS web application accessible over the internet",
                    "Role": "System Designer",
                    "Condition": "Internet-facing system"
                },
                {
                    "Assumption": "No multi-factor authentication implemented",
                    "Role": "System Designer",
                    "Condition": "Single-factor authentication only"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive energy usage data.",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Web Application",
                "Spoofing",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofing device identities to send false data to the emonPi and emonBase stations.",
            "Assumptions": [
                {
                    "Assumption": "Device identities can be easily spoofed",
                    "Role": "Attacker",
                    "Condition": "Weak identification mechanisms"
                },
                {
                    "Assumption": "Secure communication channels not used",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption"
                },
                {
                    "Assumption": "Real-time data validation not in place",
                    "Role": "System Designer",
                    "Condition": "Absence of validation checks"
                }
            ],
            "Potential Impact": "Corruption of collected environmental and energy usage data.",
            "MITRE ATT&CK Keywords": [
                "Device Spoofing",
                "Data Injection",
                "Tampering",
                "IoT"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data stored in the MySQL database used by the OEM system.",
            "Assumptions": [
                {
                    "Assumption": "Database poorly configured with improper access controls",
                    "Role": "Database Administrator",
                    "Condition": "Weak access controls"
                },
                {
                    "Assumption": "Attacker has exploited a known MySQL vulnerability",
                    "Role": "Attacker",
                    "Condition": "Exploitable vulnerability present"
                },
                {
                    "Assumption": "No regular database integrity checks",
                    "Role": "System Administrator",
                    "Condition": "Database integrity often unchecked"
                }
            ],
            "Potential Impact": "Corruption of database, potentially manipulating historical energy consumption data.",
            "MITRE ATT&CK Keywords": [
                "Database",
                "Data Integrity",
                "Tampering",
                "SQL Injection"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters messages between IoT devices and the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "Messages between devices and MQTT broker are not encrypted",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption"
                },
                {
                    "Assumption": "Attacker has access to the network channel",
                    "Role": "Attacker",
                    "Condition": "Network access granted"
                },
                {
                    "Assumption": "No message integrity validation in place",
                    "Role": "System Designer",
                    "Condition": "Absence of validation"
                }
            ],
            "Potential Impact": "Altered energy usage data leading to incorrect reporting and automation decisions.",
            "MITRE ATT&CK Keywords": [
                "Man-in-the-Middle",
                "Data Integrity",
                "Tampering",
                "IoT",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of the WiFi MQTT relay to perform unauthorized actions.",
            "Assumptions": [
                {
                    "Assumption": "Firmware not digitally signed or verified",
                    "Role": "Firmware Developer",
                    "Condition": "Firmware update lacks signatures"
                },
                {
                    "Assumption": "Users perform updates from untrusted sources",
                    "Role": "User",
                    "Condition": "Downloading from unverified sites"
                },
                {
                    "Assumption": "No rollback mechanisms for firmware updates",
                    "Role": "System Designer",
                    "Condition": "No rollback feature"
                }
            ],
            "Potential Impact": "Control over home automation devices, potentially causing damage or security risks.",
            "MITRE ATT&CK Keywords": [
                "Firmware Modification",
                "Tampering",
                "IoT",
                "Device Control"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user claims they did not perform a control action on a home automation device but logs do not support their claim.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not timestamped or authenticated",
                    "Role": "System Administrator",
                    "Condition": "Improper logging mechanisms"
                },
                {
                    "Assumption": "No user action trail or audit logs",
                    "Role": "System Designer",
                    "Condition": "Absence of action auditing"
                },
                {
                    "Assumption": "Logs can be readily erased or altered",
                    "Role": "Attacker",
                    "Condition": "Logs not secured"
                }
            ],
            "Potential Impact": "Inability to verify actions leading to disputes between users and administrators.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Audit Logs",
                "Authentication",
                "Logging"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes or manipulates log files to cover their tracks after unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Log files are not encrypted",
                    "Role": "System Administrator",
                    "Condition": "Logs stored in plaintext"
                },
                {
                    "Assumption": "No central logging and backup solution in place",
                    "Role": "System Designer",
                    "Condition": "Lack of centralized logging"
                },
                {
                    "Assumption": "Access controls on log files are weak",
                    "Role": "System Administrator",
                    "Condition": "Improper access configurations"
                }
            ],
            "Potential Impact": "Loss of traceability for actions, hindering forensics and incident response.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Log Manipulation",
                "Tampering",
                "Forensics"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A remote attacker denies initiating a Denial of Service (DoS) attack on the emonBase station, and logs are inconclusive.",
            "Assumptions": [
                {
                    "Assumption": "Network logs are not sufficient or missing",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate network logging"
                },
                {
                    "Assumption": "No monitoring for abnormal traffic patterns",
                    "Role": "System Designer",
                    "Condition": "Lack of traffic monitoring"
                },
                {
                    "Assumption": "No intrusion detection systems in place",
                    "Role": "System Administrator",
                    "Condition": "Absence of IDS"
                }
            ],
            "Potential Impact": "Inability to attribute actions, complicating incident response and prevention.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Denial of Service",
                "Logging",
                "Network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive energy usage data exposed due to insecure communication between emonBase and EmonCMS.",
            "Assumptions": [
                {
                    "Assumption": "Data communication is not encrypted",
                    "Role": "System Designer",
                    "Condition": "Plaintext data transmission"
                },
                {
                    "Assumption": "Sensitive data is routinely transmitted",
                    "Role": "System Administrator",
                    "Condition": "Frequent data transmission"
                },
                {
                    "Assumption": "No monitoring for data leaks",
                    "Role": "Network Administrator",
                    "Condition": "Absence of data leak detection"
                }
            ],
            "Potential Impact": "Exposure of sensitive energy usage data to unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Data Leak",
                "Network",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the MySQL database and extracts sensitive user information.",
            "Assumptions": [
                {
                    "Assumption": "Database configured with default or weak credentials",
                    "Role": "Database Administrator",
                    "Condition": "Weak database security"
                },
                {
                    "Assumption": "No encryption on stored sensitive data",
                    "Role": "System Designer",
                    "Condition": "Unencrypted sensitive fields"
                },
                {
                    "Assumption": "Database accessible over the internet",
                    "Role": "System Designer",
                    "Condition": "Public-facing database"
                }
            ],
            "Potential Impact": "Extraction of confidential user data leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "Database",
                "Unauthorized Access",
                "Sensitive Data",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive configuration files of the OEM system are exposed due to improper access controls.",
            "Assumptions": [
                {
                    "Assumption": "Configuration files stored with default permissions",
                    "Role": "System Administrator",
                    "Condition": "Weak file permissions"
                },
                {
                    "Assumption": "No regular review of file permissions",
                    "Role": "System Administrator",
                    "Condition": "Lack of permission audits"
                },
                {
                    "Assumption": "Files accessible over network shares",
                    "Role": "System Designer",
                    "Condition": "Network share misconfigurations"
                }
            ],
            "Potential Impact": "Unauthorized parties gain insight into system configurations.",
            "MITRE ATT&CK Keywords": [
                "Configuration",
                "Access Control",
                "Information Disclosure",
                "Files"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the MQTT broker with invalid messages causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not validate incoming messages",
                    "Role": "System Designer",
                    "Condition": "Poor validation controls"
                },
                {
                    "Assumption": "No rate limiting on message reception",
                    "Role": "System Administrator",
                    "Condition": "Lack of rate limiting"
                },
                {
                    "Assumption": "MQTT broker accessible from external networks",
                    "Role": "Network Administrator",
                    "Condition": "Open network access"
                }
            ],
            "Potential Impact": "Disruption of communication between IoT devices, affecting overall system availability.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "MQTT",
                "Network",
                "Flood"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploiting known MySQL vulnerabilities causing the database to crash, halting the EmonCMS functionality.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched MySQL database with known vulnerabilities",
                    "Role": "Database Administrator",
                    "Condition": "Outdated software"
                },
                {
                    "Assumption": "Public network access to the MySQL database",
                    "Role": "Network Administrator",
                    "Condition": "Misconfigured network access"
                },
                {
                    "Assumption": "Database monitoring and alerting not in place",
                    "Role": "System Administrator",
                    "Condition": "Lack of monitoring"
                }
            ],
            "Potential Impact": "Complete crash of MySQL resulting in disruption of EmonCMS services.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Database",
                "Crash",
                "MySQL"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the emonPi/emonBase causing the system to hang or crash.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerable emonPi/emonBase firmware or software",
                    "Role": "System Administrator",
                    "Condition": "Outdated firmware"
                },
                {
                    "Assumption": "Lack of protective monitoring on system stability",
                    "Role": "System Designer",
                    "Condition": "No resilience measures"
                },
                {
                    "Assumption": "Network access to emonPi/emonBase granted to external parties",
                    "Role": "Network Administrator",
                    "Condition": "Open network access"
                }
            ],
            "Potential Impact": "Service disruption on the central data collection hubs.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Crash",
                "Firmware",
                "System Stability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in EmonCMS to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "EmonCMS web application with unpatched vulnerabilities",
                    "Role": "Web Application Developer",
                    "Condition": "Unpatched application"
                },
                {
                    "Assumption": "No role-based access control mechanisms in place",
                    "Role": "System Administrator",
                    "Condition": "Lack of RBAC"
                },
                {
                    "Assumption": "Application running with high privileges",
                    "Role": "System Designer",
                    "Condition": "High-privileged processes"
                }
            ],
            "Potential Impact": "Attacker gains full control over the system, leading to potential misuse or data theft.",
            "MITRE ATT&CK Keywords": [
                "Web Application",
                "Privilege Escalation",
                "RBAC",
                "System Control"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on the MQTT broker to manipulate device commands.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker not securely configured",
                    "Role": "System Administrator",
                    "Condition": "Default configuration"
                },
                {
                    "Assumption": "Vulnerabilities in MQTT software remain unpatched",
                    "Role": "System Administrator",
                    "Condition": "Outdated software"
                },
                {
                    "Assumption": "Lack of granular access controls on MQTT broker",
                    "Role": "System Designer",
                    "Condition": "Weak access control"
                }
            ],
            "Potential Impact": "Control over all IoT devices in the network, leading to unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "MQTT",
                "Device Control",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting a known vulnerability in the base station software (emonPi/emonBase) to execute commands with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Base station software with unpatched vulnerabilities",
                    "Role": "System Administrator",
                    "Condition": "Unpatched software"
                },
                {
                    "Assumption": "Devices run with elevated privileges by default",
                    "Role": "System Designer",
                    "Condition": "High-privileged execution"
                },
                {
                    "Assumption": "No application-level monitoring or sandboxing",
                    "Role": "System Designer",
                    "Condition": "Lack of sandboxing"
                }
            ],
            "Potential Impact": "Full compromise of data collection and processing hubs, leading to potential misuse and unauthorized data manipulation.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Exploit",
                "Device Security",
                "Sandboxing"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "11",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate device within the OEM system to send misleading commands via MQTT.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not enforce strong authentication.",
                    "Role": "Attacker",
                    "Condition": "Valid if weak or no authentication is used."
                },
                {
                    "Assumption": "Devices accept commands from any source without verification.",
                    "Role": "Device",
                    "Condition": "Valid if there are no validation checks on the source of commands."
                },
                {
                    "Assumption": "Network traffic is not encrypted, allowing easy interception and spoofing.",
                    "Role": "Network",
                    "Condition": "Valid if communication is in plaintext."
                }
            ],
            "Potential Impact": "Unauthorized control over home devices.",
            "MITRE ATT&CK Keywords": [
                "spoof",
                "MQTT",
                "network",
                "device impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of the emonPi or emonBase to send fake data to the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "Lack of strong device-to-server authentication.",
                    "Role": "Attacker",
                    "Condition": "Valid if two-factor or certificate-based authentication is not used."
                },
                {
                    "Assumption": "EmonCMS accepts data from any source claiming to be emonPi or emonBase.",
                    "Role": "EmonCMS",
                    "Condition": "Valid if there are no checks for data authenticity."
                },
                {
                    "Assumption": "Attacker can access the network where emonPi or emonBase operates.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker can gain network access."
                }
            ],
            "Potential Impact": "Altered energy usage data, leading to incorrect monitoring and potentially inflated energy costs.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "network",
                "authentication spoofing",
                "device impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the admin panel of the EmonCMS by spoofing an admin account.",
            "Assumptions": [
                {
                    "Assumption": "Weak password policies or reused passwords are employed.",
                    "Role": "Admin",
                    "Condition": "Valid if passwords are easily guessable or repeated."
                },
                {
                    "Assumption": "No multi-factor authentication is enforced on the admin panel.",
                    "Role": "Authentication System",
                    "Condition": "Valid if two-factor authentication is not enabled."
                },
                {
                    "Assumption": "Admin credentials can be intercepted over an unencrypted connection.",
                    "Role": "Network",
                    "Condition": "Valid if HTTPS is not used."
                }
            ],
            "Potential Impact": "Full control over the OEM system, data tampering, and potential system disruptions.",
            "MITRE ATT&CK Keywords": [
                "credential stuffing",
                "administrator",
                "web application",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies MQTT messages in transit.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are sent over an unencrypted channel.",
                    "Role": "Network",
                    "Condition": "Valid if communication is in plaintext."
                },
                {
                    "Assumption": "MQTT clients do not verify message integrity.",
                    "Role": "MQTT Clients",
                    "Condition": "Valid if there is no message integrity check."
                },
                {
                    "Assumption": "Attacker has access to the same network as the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can join the network."
                }
            ],
            "Potential Impact": "Manipulated data and unauthorized device control.",
            "MITRE ATT&CK Keywords": [
                "message injection",
                "data tampering",
                "network",
                "MQTT"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the MySQL database and modifies its data.",
            "Assumptions": [
                {
                    "Assumption": "Weak database authentication or unpatched vulnerabilities.",
                    "Role": "Database",
                    "Condition": "Valid if strong authentication is not enforced or vulnerabilities are present."
                },
                {
                    "Assumption": "Database server is exposed to the internet or accessible via compromised credentials.",
                    "Role": "Network",
                    "Condition": "Valid if the database is not properly secured."
                },
                {
                    "Assumption": "Insufficient logging and monitoring of database activities.",
                    "Role": "Security System",
                    "Condition": "Valid if logging is not active."
                }
            ],
            "Potential Impact": "Corrupted data, unauthorized changes to energy monitoring records.",
            "MITRE ATT&CK Keywords": [
                "database",
                "injection",
                "SQL",
                "data tampering"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker uploads malicious firmware to the emonPi or emonBase.",
            "Assumptions": [
                {
                    "Assumption": "No code signing or integrity check on the firmware.",
                    "Role": "Firmware",
                    "Condition": "Valid if firmware updates are not verified."
                },
                {
                    "Assumption": "The firmware update process is exposed and accessible remotely.",
                    "Role": "Device",
                    "Condition": "Valid if the update endpoint is accessible without restrictions."
                },
                {
                    "Assumption": "Attacker can impersonate the update server or intercept the update process.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security is weak."
                }
            ],
            "Potential Impact": "Compromised device functionality and unauthorized control.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "tampering",
                "device",
                "remote access"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A legitimate user denies performing an action after their credentials were stolen and misused.",
            "Assumptions": [
                {
                    "Assumption": "Credential theft possible due to phishing or weak security practices.",
                    "Role": "User",
                    "Condition": "Valid if security practices are not followed."
                },
                {
                    "Assumption": "No detailed logging of user actions.",
                    "Role": "System",
                    "Condition": "Valid if actions are not logged."
                },
                {
                    "Assumption": "No anomaly detection in user behavior.",
                    "Role": "Security System",
                    "Condition": "Valid if anomaly detection is not in place."
                }
            ],
            "Potential Impact": "Disputed transactions and potential for unauthorized activities.",
            "MITRE ATT&CK Keywords": [
                "misuse",
                "credential theft",
                "logging",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Web Portal Capture",
                "description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",
                "id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
                "technique_id": "T1056.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates logs to hide malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Access to log files without adequate permissions.",
                    "Role": "Attacker",
                    "Condition": "Valid if logs are not secured."
                },
                {
                    "Assumption": "Logging system lacks integrity checks.",
                    "Role": "Logging System",
                    "Condition": "Valid if logs can be altered."
                },
                {
                    "Assumption": "No real-time monitoring of log integrity.",
                    "Role": "Security System",
                    "Condition": "Valid if monitoring is not in place."
                }
            ],
            "Potential Impact": "Hidden malicious activity and difficulty in forensic investigation.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "log integrity",
                "stealth",
                "forensics"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending a specific MQTT command due to lack of digital signatures.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not digitally signed.",
                    "Role": "System",
                    "Condition": "Valid if signatures are not implemented."
                },
                {
                    "Assumption": "No message integrity check mechanisms.",
                    "Role": "MQTT Broker",
                    "Condition": "Valid if there are no integrity checks."
                },
                {
                    "Assumption": "Attacker can tamper with messages in transit.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has network access."
                }
            ],
            "Potential Impact": "Disputed actions and potential for unauthorized commands.",
            "MITRE ATT&CK Keywords": [
                "message repudiation",
                "MQTT",
                "integrity",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted MQTT messages to gather sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are sent over a non-secure channel.",
                    "Role": "Communication",
                    "Condition": "Valid if encryption is not enforced."
                },
                {
                    "Assumption": "Devices broadcast sensitive data without encryption.",
                    "Role": "Device",
                    "Condition": "Valid if devices send data in plaintext."
                },
                {
                    "Assumption": "Attacker has access to the same network as the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can join the network."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, potential data leaks.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "sensitive information",
                "MQTT",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A vulnerability in the EmonCMS allows unauthorized users to access historical energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "EmonCMS has a known vulnerability that is unpatched.",
                    "Role": "System",
                    "Condition": "Valid if the system is not up to date."
                },
                {
                    "Assumption": "No access control mechanisms or weak access control mechanisms in place.",
                    "Role": "Authentication System",
                    "Condition": "Valid if access control is misconfigured or lacking."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest.",
                    "Role": "Data Storage",
                    "Condition": "Valid if encryption is not used for stored data."
                }
            ],
            "Potential Impact": "Exposure of historical energy data, breach of privacy.",
            "MITRE ATT&CK Keywords": [
                "data exposure",
                "web application",
                "CMS vulnerability",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a buffer overflow in the MySQL database to access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "MySQL server is running a vulnerable version.",
                    "Role": "Database",
                    "Condition": "Valid if the database is not updated."
                },
                {
                    "Assumption": "Database server is accessible without adequate security measures.",
                    "Role": "Network",
                    "Condition": "Valid if network protections are insufficient."
                },
                {
                    "Assumption": "Sensitive data is stored in plaintext in the database.",
                    "Role": "Data Storage",
                    "Condition": "Valid if sensitive data is not encrypted."
                }
            ],
            "Potential Impact": "Unauthorized read of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "buffer overflow",
                "MySQL",
                "database access",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends a large volume of MQTT messages to overload the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not have rate limiting or protections against flooding.",
                    "Role": "MQTT Broker",
                    "Condition": "Valid if rate limiting is not configured."
                },
                {
                    "Assumption": "Network bandwidth can support the attack volume.",
                    "Role": "Network",
                    "Condition": "Valid if bandwidth is high."
                },
                {
                    "Assumption": "Attacker can access the network or has compromised a device within the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has network access."
                }
            ],
            "Potential Impact": "Service disruption, inability to control home devices.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "MQTT",
                "network flooding",
                "broker overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits the SSL_check_chain() vulnerability in MySQL to crash the server.",
            "Assumptions": [
                {
                    "Assumption": "MySQL is running version 1.1.1d-1.1.1f.",
                    "Role": "Database Server",
                    "Condition": "Valid if versions are not updated."
                },
                {
                    "Assumption": "Server does not have protective measures for potential crashes.",
                    "Role": "System",
                    "Condition": "Valid if fail-safes are not implemented."
                },
                {
                    "Assumption": "Attacker can access the server via network.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network allows access."
                }
            ],
            "Potential Impact": "Database server crash, data access disruption.",
            "MITRE ATT&CK Keywords": [
                "DOS",
                "vulnerability exploitation",
                "MySQL",
                "network"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial of service attack targets the EmonCMS web application causing it to become unavailable.",
            "Assumptions": [
                {
                    "Assumption": "EmonCMS does not have DDoS protection mechanisms.",
                    "Role": "Web Application",
                    "Condition": "Valid if protections are not in place."
                },
                {
                    "Assumption": "Attacker can marshal a botnet to deliver a large volume of requests.",
                    "Role": "Attacker",
                    "Condition": "Valid if botnet capabilities are available."
                },
                {
                    "Assumption": "Network infrastructure cannot handle excessive load.",
                    "Role": "Network",
                    "Condition": "Valid if network is not robust."
                }
            ],
            "Potential Impact": "Inability to access monitoring and control interfaces, service disruption.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "web application",
                "network overload",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a SQL injection vulnerability in EmonCMS to gain admin privileges.",
            "Assumptions": [
                {
                    "Assumption": "EmonCMS has a SQL injection vulnerability.",
                    "Role": "Web Application",
                    "Condition": "Valid if vulnerabilities are not patched."
                },
                {
                    "Assumption": "Input validation and sanitization are not properly implemented.",
                    "Role": "System",
                    "Condition": "Valid if input is not sanitized."
                },
                {
                    "Assumption": "Attacker has knowledge of SQL and the database schema.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker possesses necessary skills."
                }
            ],
            "Potential Impact": "Unauthorized access and control over the system.",
            "MITRE ATT&CK Keywords": [
                "SQL injection",
                "web application",
                "privilege escalation",
                "database"
            ],
            "mitre_technique": {
                "name": "DNS",
                "description": "Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.(Citation: Sean Metcalf Twitter DNS Records)\n\nAdversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001). DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Active Scanning](https://attack.mitre.org/techniques/T1595)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--0ff59227-8aa8-4c09-bf1f-925605bd07ea",
                "technique_id": "T1590.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a buffer overflow in the MySQL database to execute code and gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "MySQL is running a version vulnerable to buffer overflow.",
                    "Role": "Database",
                    "Condition": "Valid if versions are not updated."
                },
                {
                    "Assumption": "Attacker has sufficient access to invoke the vulnerable function.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker can interact with the database."
                },
                {
                    "Assumption": "No mitigations like ASLR or DEP in place.",
                    "Role": "System",
                    "Condition": "Valid if mitigations are disabled."
                }
            ],
            "Potential Impact": "System compromise, potential complete control over the database server.",
            "MITRE ATT&CK Keywords": [
                "buffer overflow",
                "code execution",
                "privilege escalation",
                "database"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits weak file permissions to modify the my.ini file in MySQL and gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "MySQL is running on a Windows system with weak file permissions.",
                    "Role": "Database",
                    "Condition": "Valid if file permissions are misconfigured."
                },
                {
                    "Assumption": "User accounts with write access to the my.ini file.",
                    "Role": "User",
                    "Condition": "Valid if users have excessive permissions."
                },
                {
                    "Assumption": "MySQL daemon loads configurations without validation.",
                    "Role": "MySQL Daemon",
                    "Condition": "Valid if configurations are not checked."
                }
            ],
            "Potential Impact": "Unauthorized code execution and system control.",
            "MITRE ATT&CK Keywords": [
                "file permissions",
                "configuration injection",
                "Windows",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "12",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of an emonTh module to send false temperature and humidity data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network the emonTh module operates on.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security is compromised or insufficient."
                },
                {
                    "Assumption": "The system does not employ strong mutual authentication mechanisms for devices.",
                    "Role": "System Designer",
                    "Condition": "Valid if design lacks stringent authentication protocols."
                },
                {
                    "Assumption": "The attacker can monitor legitimate communication patterns.",
                    "Role": "Attacker",
                    "Condition": "Valid if network traffic is unencrypted."
                }
            ],
            "Potential Impact": "Data integrity compromised as false environmental data could be used for decision-making.",
            "MITRE ATT&CK Keywords": [
                "identity spoofing",
                "network",
                "IoT devices"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the MQTT broker to capture or modify messages intended for IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is able to impersonate the MQTT broker's endpoint.",
                    "Role": "Attacker",
                    "Condition": "Valid if DNS poisoning or man-in-the-middle attacks are possible."
                },
                {
                    "Assumption": "Devices do not validate the MQTT broker's identity using digital certificates.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is a lack of certificate validation."
                },
                {
                    "Assumption": "MQTT communication is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if the system employs plaintext communication."
                }
            ],
            "Potential Impact": "Data confidentiality and integrity are at risk as sensitive messages could be intercepted or altered.",
            "MITRE ATT&CK Keywords": [
                "communication hijacking",
                "data interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the EmonCMS web application to gather user credentials via a phishing page.",
            "Assumptions": [
                {
                    "Assumption": "Users access the web application over an insecure or compromised network.",
                    "Role": "User",
                    "Condition": "Valid if users do not use secure access methods like HTTPS."
                },
                {
                    "Assumption": "The attacker can create a believable phishing page similar to the EmonCMS interface.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has sufficient resources to mimic the web interface."
                },
                {
                    "Assumption": "Users are unaware of the spoofing threat and do not verify URLs.",
                    "Role": "User",
                    "Condition": "Valid if users are not educated about basic cybersecurity practices."
                }
            ],
            "Potential Impact": "Data confidentiality is compromised as user credentials could be stolen.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "web applications",
                "credential theft"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
                "id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
                "technique_id": "T1598.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the firmware of an emonPi base station to cause incorrect data reporting.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the emonPi device.",
                    "Role": "Attacker",
                    "Condition": "Valid if device access is not adequately restricted."
                },
                {
                    "Assumption": "The device firmware is not securely signed or verified.",
                    "Role": "System Designer",
                    "Condition": "Valid if the system does not implement secure boot mechanisms."
                },
                {
                    "Assumption": "The attacker can upload malicious firmware through a vulnerability in the device.",
                    "Role": "Attacker",
                    "Condition": "Valid if the system has unpatched vulnerabilities."
                }
            ],
            "Potential Impact": "Data integrity compromised as manipulated firmware can produce incorrect energy usage data.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "IoT device",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration settings of the MQTT broker to alter message routing.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has administrative access to the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Valid if the broker's administrative security is weak."
                },
                {
                    "Assumption": "Configuration changes are not logged or monitored for anomalies.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is no audit logging."
                },
                {
                    "Assumption": "There are known vulnerabilities in the MQTT broker software version being used.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the system is using outdated software versions."
                }
            ],
            "Potential Impact": "Data integrity and availability compromised as messages could be rerouted or dropped, disrupting service.",
            "MITRE ATT&CK Keywords": [
                "configuration tampering",
                "message routing",
                "MQTT broker"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters database records in the EmonCMS application to falsify energy usage reports.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain access to the database through a vulnerability or misconfiguration.",
                    "Role": "Attacker",
                    "Condition": "Valid if the database has poor security controls."
                },
                {
                    "Assumption": "Database changes are not thoroughly audited.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is a lack of detailed audit trails."
                },
                {
                    "Assumption": "The database is running an outdated version with known exploits.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the system does not have a regular update policy."
                }
            ],
            "Potential Impact": "Data integrity compromised with falsified energy reports impacting decision making.",
            "MITRE ATT&CK Keywords": [
                "database tampering",
                "data falsification",
                "web applications"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user claims they did not alter energy consumption settings in EmonCMS despite evidence.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks robust logging and non-repudiation controls.",
                    "Role": "System Designer",
                    "Condition": "Valid if logs do not record sufficient detail or can be altered."
                },
                {
                    "Assumption": "Logs are stored in a non-secured location.",
                    "Role": "System Administrator",
                    "Condition": "Valid if log files are easy to access or modify."
                },
                {
                    "Assumption": "There is no multi-factor authentication for actions affecting critical settings.",
                    "Role": "System Designer",
                    "Condition": "Valid if system security relies solely on passwords."
                }
            ],
            "Potential Impact": "Data integrity and accountability impacted as unauthorized actions could go unpunished.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "log tampering",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes log files to cover up illicit activities on the emonPi device.",
            "Assumptions": [
                {
                    "Assumption": "Log files are stored locally without redundancy or backup.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is no centralized logging."
                },
                {
                    "Assumption": "Local file systems are not protected against unauthorized access.",
                    "Role": "System Administrator",
                    "Condition": "Valid if file permissions are not properly set."
                },
                {
                    "Assumption": "The attacker has access to the emonPi device.",
                    "Role": "Attacker",
                    "Condition": "Valid if the device is not physically or remotely secure."
                }
            ],
            "Potential Impact": "Data integrity and accountability are compromised, hindering forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "log deletion",
                "cover up",
                "device access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A compromise in the MQTT broker causes message logs to be altered or removed.",
            "Assumptions": [
                {
                    "Assumption": "Admin access to MQTT broker is not securely managed.",
                    "Role": "System Designer",
                    "Condition": "Valid if administrative actions are not properly logged."
                },
                {
                    "Assumption": "Logging mechanisms can be bypassed or disabled.",
                    "Role": "Attacker",
                    "Condition": "Valid if logging is not enforced as a mandatory process."
                },
                {
                    "Assumption": "The broker software has known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the system is not regularly updated."
                }
            ],
            "Potential Impact": "Data integrity is compromised, making it difficult to track communication and debug issues.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "MQTT broker",
                "message logging"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorised access to sensitive data through an unpatched CSV vulnerability in MySQL.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can exploit a known vulnerability due to unpatched systems.",
                    "Role": "Attacker",
                    "Condition": "Valid if the systems are not updated regularly."
                },
                {
                    "Assumption": "Sensitive data is stored in MySQL without additional encryption.",
                    "Role": "System Designer",
                    "Condition": "Valid if data-at-rest is not properly encrypted."
                },
                {
                    "Assumption": "Database access controls are weak or misconfigured.",
                    "Role": "System Administrator",
                    "Condition": "Valid if user privileges are not properly managed."
                }
            ],
            "Potential Impact": "Confidentiality compromised as sensitive data can be accessed illicitly.",
            "MITRE ATT&CK Keywords": [
                "unauthorised access",
                "MySQL",
                "data breach",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker eavesdrops on unencrypted MQTT communication to capture sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communication is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if transport layer security is not implemented."
                },
                {
                    "Assumption": "The attacker has access to the network traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network perimeter is not well secured."
                },
                {
                    "Assumption": "Communication patterns and data are transmitted in cleartext.",
                    "Role": "System Designer",
                    "Condition": "Valid if no encryption protocols are in place for data in transit."
                }
            ],
            "Potential Impact": "Confidentiality compromised as sensitive information can be intercepted and analyzed.",
            "MITRE ATT&CK Keywords": [
                "eavesdropping",
                "MQTT",
                "unencrypted communication"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access through a SQL injection vulnerability in the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The EmonCMS web application has a SQL injection vulnerability.",
                    "Role": "System Designer",
                    "Condition": "Valid if input validation and sanitation are insufficient."
                },
                {
                    "Assumption": "The attacker can send crafted requests to the web application.",
                    "Role": "Attacker",
                    "Condition": "Valid if the web application is internet-facing."
                },
                {
                    "Assumption": "Database access controls are poorly managed.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the web server and database server are not segmented properly."
                }
            ],
            "Potential Impact": "Confidentiality and data integrity compromised through unauthorized database access.",
            "MITRE ATT&CK Keywords": [
                "SQL injection",
                "web application",
                "data breach",
                "input validation"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A targeted DDoS attack on the MQTT broker disrupts message delivery between devices.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker is not protected by a DDoS mitigation solution.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is no anti-DDoS solution in place."
                },
                {
                    "Assumption": "The attacker can recruit a botnet to generate massive traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has the resources to perform a DDoS attack."
                },
                {
                    "Assumption": "The MQTT broker is exposed to the internet.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is no network segmentation or proxying."
                }
            ],
            "Potential Impact": "Availability compromised as the broker is overwhelmed and cannot process legitimate messages.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "MQTT broker",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "MySQL server crash due to exploitation of known vulnerability during SSL/TLS handshake.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL server is running a vulnerable version.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the server is not regularly updated."
                },
                {
                    "Assumption": "SSL/TLS handshake is susceptible to a NULL pointer dereference crash.",
                    "Role": "Developer",
                    "Condition": "Valid if the specific vulnerable version is in use."
                },
                {
                    "Assumption": "The attacker can initiate an SSL/TLS handshake with the server.",
                    "Role": "Attacker",
                    "Condition": "Valid if the server is accessible to the attacker."
                }
            ],
            "Potential Impact": "Availability compromised as the MySQL server crashes, disrupting data operations.",
            "MITRE ATT&CK Keywords": [
                "MySQL",
                "DoS",
                "SSL/TLS",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the WiFi MQTT Relay with malformed messages, causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT Relay does not adequately validate incoming messages.",
                    "Role": "Developer",
                    "Condition": "Valid if the relay firmware is not robust."
                },
                {
                    "Assumption": "Network traffic to the relay is not inspected or filtered for anomalies.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if there is no intrusion detection system in place."
                },
                {
                    "Assumption": "The attacker has access to the same network as the WiFi MQTT Relay.",
                    "Role": "Attacker",
                    "Condition": "Valid if network segmentation is weak."
                }
            ],
            "Potential Impact": "Availability compromised as the relay crashes and cannot process commands.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "MQTT Relay",
                "device crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a buffer overflow in the MySQL daemon to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL daemon has a known buffer overflow vulnerability.",
                    "Role": "Developer",
                    "Condition": "Valid if the daemon is not updated."
                },
                {
                    "Assumption": "The attacker can exploit this vulnerability remotely.",
                    "Role": "Attacker",
                    "Condition": "Valid if the daemon is exposed to the internet."
                },
                {
                    "Assumption": "The attacked system does not have proper privilege separation.",
                    "Role": "System Designer",
                    "Condition": "Valid if all processes run with high privileges."
                }
            ],
            "Potential Impact": "Integrity and availability compromised as the attacker gains full control over the database server.",
            "MITRE ATT&CK Keywords": [
                "buffer overflow",
                "MySQL",
                "root access",
                "elevation of privilege"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a SQL injection vulnerability in the EmonCMS application to elevate their privileges.",
            "Assumptions": [
                {
                    "Assumption": "The EmonCMS application is vulnerable to SQL injection.",
                    "Role": "Developer",
                    "Condition": "Valid if input validation is poor."
                },
                {
                    "Assumption": "The attacker can send malicious payloads to the web application's database.",
                    "Role": "Attacker",
                    "Condition": "Valid if the web application is directly accessible from the internet."
                },
                {
                    "Assumption": "Database roles and permissions are not properly managed.",
                    "Role": "System Administrator",
                    "Condition": "Valid if no least privilege principle is applied."
                }
            ],
            "Potential Impact": "Confidentiality, integrity, and availability compromised as the attacker gains unauthorized access and escalates privileges.",
            "MITRE ATT&CK Keywords": [
                "SQL injection",
                "privilege escalation",
                "web application"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a flaw in the WiFi MQTT Relay's firmware to execute arbitrary code as an administrator.",
            "Assumptions": [
                {
                    "Assumption": "The WiFi MQTT Relay is running a vulnerable firmware version.",
                    "Role": "Developer",
                    "Condition": "Valid if updates and patches are not applied in time."
                },
                {
                    "Assumption": "The attacker can deploy and execute code remotely on the relay.",
                    "Role": "Attacker",
                    "Condition": "Valid if the relay is directly accessible over the network."
                },
                {
                    "Assumption": "There are no additional security controls to prevent unauthorized firmware updates.",
                    "Role": "System Designer",
                    "Condition": "Valid if the relay lacks firmware integrity checks."
                }
            ],
            "Potential Impact": "Integrity and availability compromised as the attacker gains full control over the relay functioning.",
            "MITRE ATT&CK Keywords": [
                "firmware flaw",
                "remote code execution",
                "admin access"
            ],
            "mitre_technique": {
                "name": "Remote Services",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain. \n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)",
                "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
                "technique_id": "T1021"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "14",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises themselves as a trusted device on the MQTT network to intercept and manipulate messages.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker does not use strong authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "MQTT protocols are configured without proper authentication."
                },
                {
                    "Assumption": "Network traffic is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "MQTT messages are sent in plaintext."
                },
                {
                    "Assumption": "The attacker has access to the same network segment as the legitimate devices.",
                    "Role": "Attacker",
                    "Condition": "Shared or compromised network access."
                }
            ],
            "Potential Impact": "Unauthorized interception of sensitive data affecting confidentiality.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "MQTT",
                "intercept"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Phishing attack to obtain administrator credentials for EmonCMS Web Application.",
            "Assumptions": [
                {
                    "Assumption": "Users are susceptible to social engineering attacks.",
                    "Role": "Attacker",
                    "Condition": "Users receive and interact with phishing emails."
                },
                {
                    "Assumption": "The admin account does not use multi-factor authentication.",
                    "Role": "Attacker",
                    "Condition": "Single-factor authentication is in place."
                },
                {
                    "Assumption": "Proper email filtering mechanisms are not implemented.",
                    "Role": "Defender",
                    "Condition": "Lack of advanced email security."
                }
            ],
            "Potential Impact": "Full access to sensitive data and administrative functions, compromising confidentiality, integrity, and availability.",
            "MITRE ATT&CK Keywords": [
                "credential_phishing",
                "social_engineering",
                "web_application",
                "email"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake emonPi device to join the network and distribute false data.",
            "Assumptions": [
                {
                    "Assumption": "The network does not have device verification mechanisms.",
                    "Role": "Attacker",
                    "Condition": "New devices can join without strict verification."
                },
                {
                    "Assumption": "There is no centralized control for approving devices.",
                    "Role": "Attacker",
                    "Condition": "Devices self-register without administrator oversight."
                },
                {
                    "Assumption": "The attacker can physically or remotely introduce a fake device.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote network access."
                }
            ],
            "Potential Impact": "Manipulation of data integrity and potential disruption of system operations affecting availability.",
            "MITRE ATT&CK Keywords": [
                "device_spoofing",
                "data_manipulation",
                "network_fraud",
                "IoT"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of emonTx modules to report incorrect energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not securely signed or verified.",
                    "Role": "Attacker",
                    "Condition": "Firmware can be altered without detection."
                },
                {
                    "Assumption": "Direct access to the device or over-the-air updates without encryption.",
                    "Role": "Attacker",
                    "Condition": "Firmware can be accessed and modified by unauthorized individuals."
                },
                {
                    "Assumption": "There are no monitoring mechanisms in place to detect abnormal device behavior.",
                    "Role": "Defender",
                    "Condition": "Lack of anomaly detection systems."
                }
            ],
            "Potential Impact": "Compromised data integrity leading to incorrect energy usage reports.",
            "MITRE ATT&CK Keywords": [
                "firmware_modification",
                "data_corruption",
                "IoT",
                "energy_manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "SQL injection attack on EmonCMS Web Application to alter or destroy database records.",
            "Assumptions": [
                {
                    "Assumption": "Web application inputs are not properly sanitized.",
                    "Role": "Attacker",
                    "Condition": "Vulnerable input fields in the web application."
                },
                {
                    "Assumption": "There are known vulnerabilities in the MySQL database being exploited.",
                    "Role": "Attacker",
                    "Condition": "Database vulnerabilities not addressed through patches."
                },
                {
                    "Assumption": "The web application has high-privilege database access without appropriate restrictions.",
                    "Role": "Defender",
                    "Condition": "Insufficient access controls on database operations."
                }
            ],
            "Potential Impact": "Destruction or alteration of sensitive data affecting integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "SQL_injection",
                "database_tampering",
                "web_application",
                "data_manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker captures and modifies MQTT messages between devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Plaintext communication allows interception and modification."
                },
                {
                    "Assumption": "The attacker can gain network access (physical, WiFi, or through a vulnerability).",
                    "Role": "Attacker",
                    "Condition": "Network access to intercept and alter messages."
                },
                {
                    "Assumption": "No integrity checks are in place on received MQTT messages.",
                    "Role": "Defender",
                    "Condition": "Lack of message integrity validation."
                }
            ],
            "Potential Impact": "Compromise of message integrity, leading to incorrect control commands or status updates.",
            "MITRE ATT&CK Keywords": [
                "MQTT_tampering",
                "message_interception",
                "data_manipulation",
                "IoT"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker tampers with log files on emonPi to erase traces of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not tamper-proof.",
                    "Role": "Attacker",
                    "Condition": "Logs can be altered or deleted without detection."
                },
                {
                    "Assumption": "No redundant logging or log integrity checks are implemented.",
                    "Role": "Defender",
                    "Condition": "Single point of failure for log records."
                },
                {
                    "Assumption": "Attacker has sufficient privileges to modify system logs.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation or initial compromise of admin credentials."
                }
            ],
            "Potential Impact": "Loss of audit trail, compromising accountability and detection of unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "log_tampering",
                "unauthorized_access",
                "audit_trail",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Insufficient logging of critical actions in the EmonCMS Web Application.",
            "Assumptions": [
                {
                    "Assumption": "Critical actions are not logged or logs are incomplete.",
                    "Role": "Defender",
                    "Condition": "Lack of comprehensive logging policy."
                },
                {
                    "Assumption": "Log storage is susceptible to overflow or deletion.",
                    "Role": "Defender",
                    "Condition": "Improper log management practices."
                },
                {
                    "Assumption": "Logs can be accessed and modified by unauthorized users.",
                    "Role": "Attacker",
                    "Condition": "Insecure log access controls."
                }
            ],
            "Potential Impact": "Difficulty in detecting and investigating unauthorized actions compromising accountability.",
            "MITRE ATT&CK Keywords": [
                "insufficient_logging",
                "web_application",
                "audit_failure",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Attacker uses compromised credentials to perform actions and subsequently deletes logs.",
            "Assumptions": [
                {
                    "Assumption": "Attacker gains access to admin credentials.",
                    "Role": "Attacker",
                    "Condition": "Phishing or credential theft."
                },
                {
                    "Assumption": "Log deletion or modification permissions are not restricted.",
                    "Role": "Attacker",
                    "Condition": "Insufficient separation of duties."
                },
                {
                    "Assumption": "No mechanisms to alert on unusual log activity or deletions.",
                    "Role": "Defender",
                    "Condition": "Lack of log monitoring tools."
                }
            ],
            "Potential Impact": "Loss of evidence leading to inability to trace malicious activities.",
            "MITRE ATT&CK Keywords": [
                "credential_theft",
                "log_deletion",
                "system_access",
                "unauthorized_action"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unencrypted MQTT messages exposing sensitive data in transit.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "Defender",
                    "Condition": "Plaintext communication channels."
                },
                {
                    "Assumption": "Sensitive information is transmitted via MQTT.",
                    "Role": "Defender",
                    "Condition": "Data includes personally identifiable or operationally sensitive information."
                },
                {
                    "Assumption": "Attacker has the ability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access through physical, Wi-Fi, or compromised device."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "unencrypted_communication",
                "MQTT",
                "data_exposure",
                "network_interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to EmonCMS database exposing user data.",
            "Assumptions": [
                {
                    "Assumption": "The database lacks access control measures.",
                    "Role": "Defender",
                    "Condition": "Inadequate authentication and authorization controls."
                },
                {
                    "Assumption": "Sensitive data in the database is not encrypted at rest.",
                    "Role": "Defender",
                    "Condition": "Unencrypted storage of sensitive information."
                },
                {
                    "Assumption": "Exploitable vulnerabilities in the database software.",
                    "Role": "Attacker",
                    "Condition": "Unpatched software vulnerabilities."
                }
            ],
            "Potential Impact": "Exposure of sensitive user data compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "database_access",
                "data_exposure",
                "user_data",
                "unauthorized_access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacker leverages a known vulnerability in PHP used by the application to gain unauthorized access to sensitive files.",
            "Assumptions": [
                {
                    "Assumption": "The application uses an outdated PHP version with known vulnerabilities.",
                    "Role": "Defender",
                    "Condition": "Legacy or unpatched PHP software."
                },
                {
                    "Assumption": "Sensitive configuration files or data files are accessible through web server.",
                    "Role": "Defender",
                    "Condition": "Improper file permissions."
                },
                {
                    "Assumption": "No monitoring for suspicious activity or anomalies on the web server.",
                    "Role": "Defender",
                    "Condition": "Lack of security monitoring tools."
                }
            ],
            "Potential Impact": "Unauthorized access to and disclosure of sensitive data compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "exploitation_of_vulnerability",
                "PHP",
                "file_access",
                "data_exposure"
            ],
            "mitre_technique": {
                "name": "Shared Webroot",
                "description": "**This technique has been deprecated and should no longer be used.**\n\nAdversaries may add malicious content to an internally accessible website through an open network file share that contains the website's webroot or Web content directory (Citation: Microsoft Web Root OCT 2016) (Citation: Apache Server 2018) and then browse to that content with a Web browser to cause the server to execute the malicious content. The malicious content will typically run under the context and permissions of the Web server process, often resulting in local system or administrative privileges, depending on how the Web server is configured.\n\nThis mechanism of shared access and remote execution could be used for lateral movement to the system running the Web server. For example, a Web server running PHP with an open network share could allow an adversary to upload a remote access tool and PHP script to execute the RAT on the system running the Web server when a specific page is visited. (Citation: Webroot PHP 2011)",
                "id": "attack-pattern--804c042c-cfe6-449e-bc1a-ba0a998a70db",
                "technique_id": "T1051"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed denial of service (DDoS) attack targeting the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker exposed to the internet.",
                    "Role": "Defender",
                    "Condition": "Broker is internet-facing without adequate protection."
                },
                {
                    "Assumption": "High volume of traffic can overwhelm broker's processing capacity.",
                    "Role": "Attacker",
                    "Condition": "Resource limitation on the MQTT broker."
                },
                {
                    "Assumption": "Lack of DDoS mitigation controls.",
                    "Role": "Defender",
                    "Condition": "Absence of protective measures like firewalls or rate-limiting."
                }
            ],
            "Potential Impact": "Disruption of system communication affecting availability.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network_flooding",
                "MQTT_broker",
                "service_disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploiting MySQL vulnerabilities to crash the database server.",
            "Assumptions": [
                {
                    "Assumption": "MySQL has known vulnerabilities that are unpatched.",
                    "Role": "Defender",
                    "Condition": "Outdated MySQL instance with unaddressed vulnerabilities."
                },
                {
                    "Assumption": "Attacker can send malicious requests to the MySQL server.",
                    "Role": "Attacker",
                    "Condition": "Network access to the database server."
                },
                {
                    "Assumption": "Database lacks advanced intrusion detection measures.",
                    "Role": "Defender",
                    "Condition": "Inadequate monitoring for malicious activity."
                }
            ],
            "Potential Impact": "Database server crash affecting data availability.",
            "MITRE ATT&CK Keywords": [
                "database_exploitation",
                "vulnerability_abuse",
                "MySQL",
                "service_crash"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attacker triggers a vulnerability in PHP to cause the EmonCMS web application to crash.",
            "Assumptions": [
                {
                    "Assumption": "PHP version in use has unpatched vulnerabilities that can cause application crashes.",
                    "Role": "Defender",
                    "Condition": "Legacy or outdated PHP software."
                },
                {
                    "Assumption": "Attacker can interact with vulnerable parts of the web application.",
                    "Role": "Attacker",
                    "Condition": "Web application exposed to the internet."
                },
                {
                    "Assumption": "No WAF (Web Application Firewall) in place to filter malicious requests.",
                    "Role": "Defender",
                    "Condition": "Lack of protective web filtering measures."
                }
            ],
            "Potential Impact": "Web application crash affecting data availability.",
            "MITRE ATT&CK Keywords": [
                "web_application_attack",
                "PHP_vulnerability",
                "application_crash",
                "service_disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting a vulnerability in the MQTT broker to gain elevated privileges and take control of the broker.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker has a known vulnerability.",
                    "Role": "Defender",
                    "Condition": "Unpatched MQTT broker software."
                },
                {
                    "Assumption": "Attacker can interact with the broker over the network.",
                    "Role": "Attacker",
                    "Condition": "Network access to the broker."
                },
                {
                    "Assumption": "Insufficient access controls and monitoring on the broker.",
                    "Role": "Defender",
                    "Condition": "Lack of strict access policies."
                }
            ],
            "Potential Impact": "Compromise of broker control, potentially leading to broad system impact on confidentiality, integrity, and availability.",
            "MITRE ATT&CK Keywords": [
                "broker_vulnerability",
                "MQTT",
                "privilege_escalation",
                "system_control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "SQL injection to achieve administrative access to the EmonCMS Web Application.",
            "Assumptions": [
                {
                    "Assumption": "Web application is vulnerable to SQL injection attacks.",
                    "Role": "Defender",
                    "Condition": "Inadequate input sanitation and validation."
                },
                {
                    "Assumption": "Attacker has access to input fields to be exploited.",
                    "Role": "Attacker",
                    "Condition": "Injection vectors exposed through input fields."
                },
                {
                    "Assumption": "Database configured with high privileges for the web application.",
                    "Role": "Defender",
                    "Condition": "Improper privilege separation."
                }
            ],
            "Potential Impact": "Unauthorized administrative access affecting confidentiality, integrity, and availability.",
            "MITRE ATT&CK Keywords": [
                "SQL_injection",
                "web_application",
                "admin_access",
                "privilege_escalation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting a vulnerability in an outdated Raspberry Pi OS to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Raspberry Pi OS is not updated with the latest security patches.",
                    "Role": "Defender",
                    "Condition": "Legacy or outdated operating system."
                },
                {
                    "Assumption": "Attacker can execute commands on the device remotely.",
                    "Role": "Attacker",
                    "Condition": "Remote access to Raspberry Pi device."
                },
                {
                    "Assumption": "Weak access control policies on the device.",
                    "Role": "Defender",
                    "Condition": "Inadequate access restrictions and monitoring."
                }
            ],
            "Potential Impact": "Root access gained, potentially compromising system security and control.",
            "MITRE ATT&CK Keywords": [
                "root_access",
                "operating_system_exploit",
                "Raspberry_Pi",
                "privilege_escalation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "13",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate emonTx module to the emonPi base station, presenting falsified energy readings.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network where the emonTx and emonPi are communicating.",
                    "Role": "Attacker",
                    "Condition": "Network access via WiFi or Ethernet."
                },
                {
                    "Assumption": "The attacker possesses knowledge of the protocol and device IDs.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of proprietary protocols or device IDs."
                },
                {
                    "Assumption": "No mutual authentication is enforced between emonTx and emonPi.",
                    "Role": "System",
                    "Condition": "Lack of mutual authentication in the current system design."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of energy consumption data, corruption of energy analytics, disruption of monitoring capabilities.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the MQTT broker to intercept and relay messages between IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can introduce a rogue MQTT broker in the network.",
                    "Role": "Attacker",
                    "Condition": "Ability to access the home network."
                },
                {
                    "Assumption": "The attacker understands the communication flow and MQTT configuration.",
                    "Role": "Attacker",
                    "Condition": "Technical proficiency with MQTT."
                },
                {
                    "Assumption": "Devices do not verify the identity of the MQTT broker.",
                    "Role": "System",
                    "Condition": "Lack of verification mechanisms for MQTT broker identity."
                }
            ],
            "Potential Impact": "Leakage of sensitive data, potential unauthorized control of home appliances, disruption of communication.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "broker",
                "mqtt"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the emonCMS web application to steal login credentials from users.",
            "Assumptions": [
                {
                    "Assumption": "The attacker crafts a phishing page resembling emonCMS.",
                    "Role": "Attacker",
                    "Condition": "Capability to host a fake web page."
                },
                {
                    "Assumption": "Users fail to recognize the phishing attempt.",
                    "Role": "User",
                    "Condition": "Lack of user awareness or training on phishing risks."
                },
                {
                    "Assumption": "No mechanisms to validate the authenticity of the emonCMS web interface.",
                    "Role": "System",
                    "Condition": "Lack of robust validation checks such as HTTPS."
                }
            ],
            "Potential Impact": "Compromise of user login credentials, unauthorized access to home automation data, potential control of home appliances.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credential theft",
                "web interface"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
                "id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
                "technique_id": "T1598.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of the emonTx module to provide false readings and manipulate data outcomes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker obtains physical access to the emonTx module.",
                    "Role": "Attacker",
                    "Condition": "Physical access to the device."
                },
                {
                    "Assumption": "The firmware is not protected against unauthorized modification.",
                    "Role": "System",
                    "Condition": "No encryption or security controls on the firmware."
                },
                {
                    "Assumption": "The attacker has the tools necessary to alter and upload the firmware.",
                    "Role": "Attacker",
                    "Condition": "Technical capability with firmware programming."
                }
            ],
            "Potential Impact": "Data corruption, false monitoring, integrity issues with energy usage data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters MQTT messages between WiFi MQTT Relay and the MQTT broker to change the state of home appliances.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to intercept MQTT messages.",
                    "Role": "Attacker",
                    "Condition": "Capability to sniff network traffic."
                },
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "System",
                    "Condition": "No encryption for MQTT communication."
                },
                {
                    "Assumption": "The attacker has the tools to modify MQTT payloads.",
                    "Role": "Attacker",
                    "Condition": "Tools and knowledge to alter MQTT data."
                }
            ],
            "Potential Impact": "Unintended operation of home appliances, potential safety and security hazards, disruption of home automation.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "mqtt",
                "relay"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the MySQL database on the emonPi base station to falsify historical energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains database access credentials.",
                    "Role": "Attacker",
                    "Condition": "Credential compromise."
                },
                {
                    "Assumption": "No database access controls or logging are in place.",
                    "Role": "System",
                    "Condition": "Lack of database access controls."
                },
                {
                    "Assumption": "The attacker is able to write new data entries or modify existing entries.",
                    "Role": "Attacker",
                    "Condition": "Database write privileges."
                }
            ],
            "Potential Impact": "Loss of data integrity, falsified energy usage records, possible misinformed decisions based on compromised data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "mysql"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having sent specific commands to the WiFi MQTT Relay, leading to disputes over automated actions.",
            "Assumptions": [
                {
                    "Assumption": "Lack of logging mechanisms to track user actions.",
                    "Role": "System",
                    "Condition": "No audit logs for user actions."
                },
                {
                    "Assumption": "Inadequate user authentication process.",
                    "Role": "System",
                    "Condition": "Weak or non-existent authentication methods."
                },
                {
                    "Assumption": "Multiple users use shared credentials.",
                    "Role": "User",
                    "Condition": "Shared use of login credentials without individual accountability."
                }
            ],
            "Potential Impact": "Disputes over actions and accountability, potential misuse of relay to control appliances, risk of unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "mqtt"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An admin user denies making critical configuration changes in the emonCMS web application, affecting system performance.",
            "Assumptions": [
                {
                    "Assumption": "No comprehensive logging of admin actions.",
                    "Role": "System",
                    "Condition": "Audit logging disabled or not configured."
                },
                {
                    "Assumption": "Use of shared administrator credentials.",
                    "Role": "System",
                    "Condition": "Administrator accounts are shared among users."
                },
                {
                    "Assumption": "System lacks non-repudiation controls.",
                    "Role": "System",
                    "Condition": "Absence of mechanisms to prevent deniability of actions."
                }
            ],
            "Potential Impact": "Potential manipulation of system configurations without accountability, performance degradation, system instability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration",
                "web application"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--03359939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user disputes the energy consumption data visualized in the emonCMS web application as inaccurate.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks mechanisms for verifying data integrity between collection and presentation.",
                    "Role": "System",
                    "Condition": "No checksums or integrity controls in place."
                },
                {
                    "Assumption": "Inconsistent timestamping and entry of data points.",
                    "Role": "System",
                    "Condition": "Varied entry times and possible data gaps."
                },
                {
                    "Assumption": "No corroborating logs or source-tracing for displayed data.",
                    "Role": "System",
                    "Condition": "Absence of detailed logging and traceability."
                }
            ],
            "Potential Impact": "Distrust in system data, potential legal or billing disputes, loss of confidence in the monitoring solution.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data integrity",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Masquerading",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
                "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
                "technique_id": "T1036"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted MQTT messages containing sensitive energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are transmitted in plaintext.",
                    "Role": "System",
                    "Condition": "No encryption on MQTT messages."
                },
                {
                    "Assumption": "The attacker has the capability to capture network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network sniffing tools are available."
                },
                {
                    "Assumption": "Sensitive data is being transmitted without obscuration.",
                    "Role": "System",
                    "Condition": "Sensitive data is not anonymized or hashed."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive energy usage data, potential profiling of user behavior, privacy violations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "mqtt",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to historical energy consumption data stored in the emonPi base station via poorly protected MySQL database.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no authentication mechanisms for database access.",
                    "Role": "System",
                    "Condition": "Lack of strong authentication controls."
                },
                {
                    "Assumption": "Database is exposed to the network without sufficient access controls.",
                    "Role": "System",
                    "Condition": "Misconfiguration of network access."
                },
                {
                    "Assumption": "Stored data includes sensitive historical records.",
                    "Role": "System",
                    "Condition": "Data retention policies retain sensitive information."
                }
            ],
            "Potential Impact": "Exposure of historical energy usage data, potential misuse of sensitive information, privacy violations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database",
                "mysql"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data inadvertently disclosed due to insecure configuration of the emonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The web application does not enforce HTTPS for data transfer.",
                    "Role": "System",
                    "Condition": "Absence of SSL/TLS configurations."
                },
                {
                    "Assumption": "Misconfigurations or software bugs expose data endpoints.",
                    "Role": "System",
                    "Condition": "Vulnerabilities in web application code."
                },
                {
                    "Assumption": "Sensitive information is made available to unauthorized roles.",
                    "Role": "System",
                    "Condition": "Role-based access controls are not properly enforced."
                }
            ],
            "Potential Impact": "Unauthorized access to user data and system configurations, potential external breaches, risk of data leaks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "web application",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the MQTT broker with a high volume of requests, leading to a denial of service.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the capability to generate and send large volumes of MQTT messages.",
                    "Role": "Attacker",
                    "Condition": "Availability of botnets or sufficient resources."
                },
                {
                    "Assumption": "The MQTT broker lacks rate limiting or DoS protection mechanisms.",
                    "Role": "System",
                    "Condition": "No rate limiting or throttling configured."
                },
                {
                    "Assumption": "The attacker has network access to target the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Proximity or remote access to the broker."
                }
            ],
            "Potential Impact": "Service disruption, unavailability of monitoring data, inability to control home automation devices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "mqtt",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A known MySQL vulnerability is exploited to crash the MySQL server on the emonPi base station.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL server is running a vulnerable version.",
                    "Role": "System",
                    "Condition": "Outdated MySQL version without patches."
                },
                {
                    "Assumption": "The attacker can reach the MySQL service over the network.",
                    "Role": "Attacker",
                    "Condition": "Ability to establish network connections to MySQL."
                },
                {
                    "Assumption": "The vulnerable MySQL feature is enabled and accessible.",
                    "Role": "System",
                    "Condition": "Misconfiguration or default settings."
                }
            ],
            "Potential Impact": "Complete denial of service for data storage and retrieval, loss of access to historical data.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "mysql",
                "database"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits buffer overflow vulnerabilities in the EmonCMS web application components, leading to a crash.",
            "Assumptions": [
                {
                    "Assumption": "Application components contain buffer overflow vulnerabilities.",
                    "Role": "System",
                    "Condition": "Presence of unpatched or outdated components."
                },
                {
                    "Assumption": "Attacker can send crafted inputs to the vulnerable components.",
                    "Role": "Attacker",
                    "Condition": "Capability to interact with web components remotely."
                },
                {
                    "Assumption": "No input validation or buffer overflow protection mechanisms are in place.",
                    "Role": "System",
                    "Condition": "Lack of security controls against buffer overflows."
                }
            ],
            "Potential Impact": "Service unavailability, potential loss of user data during the attack, interruption of real-time monitoring.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "buffer overflow",
                "web application"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits an unpatched PHP vulnerability to gain administrative access to the emonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The PHP runtime includes known vulnerabilities.",
                    "Role": "System",
                    "Condition": "Outdated PHP version with security flaws."
                },
                {
                    "Assumption": "The attacker can send crafted requests to the web application.",
                    "Role": "Attacker",
                    "Condition": "Network access to the web server."
                },
                {
                    "Assumption": "No additional security measures are in place to detect and prevent exploits.",
                    "Role": "System",
                    "Condition": "Absence of web application firewall or monitoring."
                }
            ],
            "Potential Impact": "Unauthorized administrative access, potential full system compromise, tampering with web application data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "php",
                "web application"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a known SQL injection vulnerability in emonCMS to execute arbitrary SQL commands and escalate privileges.",
            "Assumptions": [
                {
                    "Assumption": "The emonCMS web application is vulnerable to SQL injection.",
                    "Role": "System",
                    "Condition": "Presence of unpatched SQLi vulnerabilities."
                },
                {
                    "Assumption": "The attacker can craft SQL injection payloads.",
                    "Role": "Attacker",
                    "Condition": "Technical capability for SQL injection."
                },
                {
                    "Assumption": "Database does not implement strict access control policies.",
                    "Role": "System",
                    "Condition": "Lack of database segregation and access controls."
                }
            ],
            "Potential Impact": "Elevation to higher privileges, potential for full database compromise, unauthorized data tampering.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "sql injection",
                "database"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains access to administrative functions of the WiFi MQTT Relay by brute-forcing weak passwords.",
            "Assumptions": [
                {
                    "Assumption": "The WiFi MQTT Relay uses weak or default passwords.",
                    "Role": "System",
                    "Condition": "Default or weak password configurations."
                },
                {
                    "Assumption": "The attacker has the capability to perform brute-force attacks.",
                    "Role": "Attacker",
                    "Condition": "Tools and resources to automate login attempts."
                },
                {
                    "Assumption": "No account lockout mechanisms or rate limiting are in place.",
                    "Role": "System",
                    "Condition": "Absence of anti-brute-force protections."
                }
            ],
            "Potential Impact": "Unauthorized control over relay functions, potential for device misuse, compromise of connected devices.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "brute force",
                "mqtt relay"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "15",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of an MQTT client to gain unauthorized access to the OEM system through the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not enforce strong authentication mechanisms.",
                    "Role": "MQTT Broker Administrator",
                    "Condition": "Valid if the system relies on basic authentication or none."
                },
                {
                    "Assumption": "The network is accessible to external entities.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if the MQTT broker is exposed to the internet."
                }
            ],
            "Potential Impact": "Unauthorized control and access over the system can lead to data tampering and information disclosure.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credential Access",
                "Network Device"
            ],
            "mitre_technique": {
                "name": "Traffic Signaling",
                "description": "Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. [Port Knocking](https://attack.mitre.org/techniques/T1205/001)), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.\n\nAdversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.\n\nOn network devices, adversaries may use crafted packets to enable [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004) for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.  Adversaries may use crafted packets to attempt to connect to one or more (open or closed) ports, but may also attempt to connect to a router interface, broadcast, and network address IP on the same port in order to achieve their goals and objectives.(Citation: Cisco Synful Knock Evolution)(Citation: Mandiant - Synful Knock)(Citation: Cisco Blog Legacy Device Attacks)  To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage [Patch System Image](https://attack.mitre.org/techniques/T1601/001) due to the monolithic nature of the architecture.\n\nAdversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.(Citation: Bleeping Computer - Ryuk WoL)(Citation: AMD Magic Packet)",
                "id": "attack-pattern--451a9977-d255-43c9-b431-66de80130c8c",
                "technique_id": "T1205"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user on the EmonCMS web application to monitor and control home energy data.",
            "Assumptions": [
                {
                    "Assumption": "User accounts lack multi-factor authentication (MFA).",
                    "Role": "OEM System User",
                    "Condition": "Valid if users do not use MFA for logging into EmonCMS."
                },
                {
                    "Assumption": "Username and password are poorly protected or easy to guess.",
                    "Role": "End-User",
                    "Condition": "Valid if users use weak or reused passwords."
                }
            ],
            "Potential Impact": "An attacker can monitor and potentially modify energy data, leading to privacy breaches and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credential Access",
                "Web Application"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access through a compromised WiFi MQTT Relay by masquerading as a trusted device.",
            "Assumptions": [
                {
                    "Assumption": "The WiFi MQTT Relay uses weak or default credentials.",
                    "Role": "OEM System Installer",
                    "Condition": "Valid if security best practices for device setup are not followed."
                },
                {
                    "Assumption": "The relay is accessible over the internet.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network does not restrict access to only trusted devices."
                }
            ],
            "Potential Impact": "An attacker can control household devices, leading to potential safety risks and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credential Access",
                "Home Automation",
                "IoT Device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies MQTT messages between IoT devices, leading to incorrect data being sent to emonPi.",
            "Assumptions": [
                {
                    "Assumption": "Communication between IoT devices and the broker is not encrypted.",
                    "Role": "OEM System Implementer",
                    "Condition": "Valid if MQTT messages are transmitted in plaintext."
                },
                {
                    "Assumption": "Network lacks proper monitoring and intrusion detection systems.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network security controls are inadequate."
                }
            ],
            "Potential Impact": "Data integrity and accuracy are compromised, making the system unreliable for monitoring and controlling energy usage.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Network Sniffing",
                "Man-in-the-Middle",
                "Protocol"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains unauthorized access to the MySQL database storing OEM system data and modifies critical records.",
            "Assumptions": [
                {
                    "Assumption": "Database access controls are weak or misconfigured.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if outdated or easily guessable admin credentials are used."
                },
                {
                    "Assumption": "There is no real-time monitoring of database transactions.",
                    "Role": "System Admin",
                    "Condition": "Valid if database activity is not being logged or analyzed in real-time."
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to misleading energy usage reports and incorrect control commands.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Database",
                "Unauthorized Access",
                "Data Manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker uploads a malicious firmware update to emonTx modules.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update process lacks integrity checks.",
                    "Role": "Firmware Developer",
                    "Condition": "Valid if no secure boot or code-signing is enforced."
                },
                {
                    "Assumption": "Firmware files are obtained from insecure sources.",
                    "Role": "OEM System User",
                    "Condition": "Valid if firmware updates are downloaded from unverified websites."
                }
            ],
            "Potential Impact": "The attacker can alter device behavior, leading to inaccurate data readings and potential physical damage to monitored appliances.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware",
                "Supply Chain",
                "Integrity Compromise"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker attempts to delete or alter logs in the OEM system to cover their tracks after unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not protected or verified.",
                    "Role": "System Administrator",
                    "Condition": "Valid if log files do not have integrity checks or are not encrypted."
                },
                {
                    "Assumption": "Administrative accounts have excessive privileges.",
                    "Role": "User Privilege Manager",
                    "Condition": "Valid if user roles and privileges are not properly enforced."
                }
            ],
            "Potential Impact": "Risk of undetected malicious activities increases due to loss of log integrity, impacting the overall auditability of the system.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Log Manipulation",
                "Audit Evasion",
                "Data Deletion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious user denies carrying out unauthorized changes to the OEM system settings through the EmonCMS interface.",
            "Assumptions": [
                {
                    "Assumption": "The EmonCMS application lacks proper activity logs.",
                    "Role": "Web Application Developer",
                    "Condition": "Valid if user activities are not being logged."
                },
                {
                    "Assumption": "Logs are not tamper-resistant.",
                    "Role": "IT Security Manager",
                    "Condition": "Valid if logs can be altered or deleted by unauthorized users."
                }
            ],
            "Potential Impact": "The inability to trace actions to individual users can result in undetected configuration tampering and hinder forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Activity Logging",
                "User Actions",
                "Forensics"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A compromise in an automation script leads to unauthorized actions in the OEM system, and the actor denies involvement.",
            "Assumptions": [
                {
                    "Assumption": "Automation scripts are not authenticated or audited.",
                    "Role": "Script Developer",
                    "Condition": "Valid if scripts can be executed without proper logging."
                },
                {
                    "Assumption": "System lacks mechanisms to distinguish between automated and manual actions.",
                    "Role": "System Architect",
                    "Condition": "Valid if there is no segregation in logs for actions taken by scripts and users."
                }
            ],
            "Potential Impact": "Potential for significant operational disruptions, with compromised scripts executing harmful actions without traceability back to the actor.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Script Execution",
                "Scripting",
                "Automation"
            ],
            "mitre_technique": {
                "name": "Command and Scripting Interpreter",
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)",
                "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
                "technique_id": "T1059"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is exposed through EmonCMS due to insufficient access controls.",
            "Assumptions": [
                {
                    "Assumption": "Access control mechanisms are weak or not configured.",
                    "Role": "Application Administrator",
                    "Condition": "Valid if no role-based access controls are enforced."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest or during transmission.",
                    "Role": "Database Manager",
                    "Condition": "Valid if encryption standards are not applied."
                }
            ],
            "Potential Impact": "Unauthorized access can lead to significant privacy breaches and information leakage.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Access Control",
                "Data Exposure",
                "Sensitive Information"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data intercepted over MQTT communication reveals patterns in energy usage and environmental conditions in the home.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are transmitted without encryption.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if secure MQTT (MQTTS) is not used."
                },
                {
                    "Assumption": "Network traffic is not being monitored for anomalies.",
                    "Role": "Network Security Analyst",
                    "Condition": "Valid if no network-level monitoring is in place."
                }
            ],
            "Potential Impact": "Attackers can infer sensitive information about the user\u2019s habits, leading to privacy violations.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Network Sniffing",
                "MQTT Communication",
                "Data Interception"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Databases containing user data are compromised due to known vulnerabilities in the MySQL version used.",
            "Assumptions": [
                {
                    "Assumption": "Regular patching and updates are not performed.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if the system operates with outdated software versions."
                },
                {
                    "Assumption": "Database access control lists are improperly configured.",
                    "Role": "Security Engineer",
                    "Condition": "Valid if user permissions are overly permissive."
                }
            ],
            "Potential Impact": "Exposure of sensitive user details, potentially leading to identity theft or further attacks.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Database",
                "Unpatched Vulnerabilities",
                "User Data"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a known MySQL vulnerability to crash the database, rendering the OEM system inoperable.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL database is running a version with known vulnerabilities.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if patches and updates are not regularly applied."
                },
                {
                    "Assumption": "The system lacks redundancy and failover mechanisms.",
                    "Role": "System Architect",
                    "Condition": "Valid if there are no backup systems in place."
                }
            ],
            "Potential Impact": "System availability is severely impacted, disrupting the monitoring and control functions of the OEM system.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Database Crash",
                "Availability Impact",
                "System Disruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious peer uses the SSL_check_chain() vulnerability to disrupt communication in the OEM system.",
            "Assumptions": [
                {
                    "Assumption": "The older versions of SSL/TLS are not updated or patched.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if the system uses outdated SSL/TLS protocols."
                },
                {
                    "Assumption": "No rate limiting or traffic filtering is implemented.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if the system cannot mitigate excessive traffic flows."
                }
            ],
            "Potential Impact": "Interference in secure communications can lead to system unavailability and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "SSL/TLS",
                "Communication Disruption",
                "Protocol"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends a flood of invalid MQTT messages, overwhelming the broker and rendering the IoT network unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker lacks proper rate limiting and traffic management.",
                    "Role": "MQTT Broker Administrator",
                    "Condition": "Valid if the broker does not throttle excessive message rates."
                },
                {
                    "Assumption": "No detection mechanisms for unusual traffic patterns.",
                    "Role": "Network Security Analyst",
                    "Condition": "Valid if the system does not monitor for anomalies."
                }
            ],
            "Potential Impact": "System availability is severely impacted, leading to interruptions in monitoring and control operations.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "MQTT Protocol",
                "Network Flooding",
                "System Unavailability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user exploits a firmware vulnerability on emonTx modules to gain root access and control other connected devices.",
            "Assumptions": [
                {
                    "Assumption": "Firmware lacks proper security and validation checks.",
                    "Role": "Firmware Developer",
                    "Condition": "Valid if firmware updates are not securely signed and verified."
                },
                {
                    "Assumption": "Security patches are not applied regularly.",
                    "Role": "System Administrator",
                    "Condition": "Valid if devices run outdated firmware with known vulnerabilities."
                }
            ],
            "Potential Impact": "An attacker can take over the device network, leading to unauthorized changes and potential data compromise.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Firmware",
                "Root Access",
                "Device Control"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses SQL injection on the EmonCMS application to escalate privileges and access restricted areas.",
            "Assumptions": [
                {
                    "Assumption": "The web application is vulnerable to SQL injection attacks.",
                    "Role": "Web Application Developer",
                    "Condition": "Valid if input sanitization and validation are not properly implemented."
                },
                {
                    "Assumption": "Database accounts are overly permissive.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if database user roles and permissions are not tightly controlled."
                }
            ],
            "Potential Impact": "Gaining higher-level privileges can lead to unauthorized data access and potential manipulation of system configurations.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "SQL Injection",
                "Database",
                "Web Application"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised automation script in the OEM system performs unauthorized actions by exploiting weak script execution policies.",
            "Assumptions": [
                {
                    "Assumption": "Script execution policies are not adequately enforced.",
                    "Role": "Script Developer",
                    "Condition": "Valid if scripts can be executed with elevated privileges without proper checks."
                },
                {
                    "Assumption": "There is no monitoring for unusual script activities.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if no mechanisms exist to flag and review suspicious script behavior."
                }
            ],
            "Potential Impact": "Such unauthorized access can lead to significant configuration changes and data manipulation, potentially disrupting system operations.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Script Execution",
                "Automation",
                "Unauthorized Actions"
            ],
            "mitre_technique": {
                "name": "AutoHotKey & AutoIT",
                "description": "Adversaries may execute commands and perform malicious tasks using AutoIT and AutoHotKey automation scripts. AutoIT and AutoHotkey (AHK) are scripting languages that enable users to automate Windows tasks. These automation scripts can be used to perform a wide variety of actions, such as clicking on buttons, entering text, and opening and closing programs.(Citation: AutoIT)(Citation: AutoHotKey)\n\nAdversaries may use AHK (`.ahk`) and AutoIT (`.au3`) scripts to execute malicious code on a victim's system. For example, adversaries have used for AHK to execute payloads and other modular malware such as keyloggers. Adversaries have also used custom AHK files containing embedded malware as [Phishing](https://attack.mitre.org/techniques/T1566) payloads.(Citation: Splunk DarkGate)\n\nThese scripts may also be compiled into self-contained executable payloads (`.exe`).(Citation: AutoIT)(Citation: AutoHotKey)",
                "id": "attack-pattern--3a32740a-11b0-4bcf-b0a9-3abd0f6d3cd5",
                "technique_id": "T1059.010"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "16",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user to gain access to EmonCMS Web Application.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is unsecured or compromised."
                },
                {
                    "Assumption": "There is no multi-factor authentication in place.",
                    "Role": "System Administrator",
                    "Condition": "Valid if only single-factor authentication is used."
                },
                {
                    "Assumption": "The attacker has some knowledge of valid user credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if user credentials have been leaked or weak passwords are used."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, control over home automation systems, potential tampering of data.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "credential access",
                "user account",
                "network",
                "web application"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs an emonTx device sending false data to the emonPi or emonBase.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can send messages on the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not secured or monitored."
                },
                {
                    "Assumption": "The system does not verify the integrity of the device sending data.",
                    "Role": "System Administrator",
                    "Condition": "Valid if no integrity checks are performed on incoming data."
                },
                {
                    "Assumption": "MQTT communication is not encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Valid if MQTT messages are sent in plaintext."
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to erroneous energy usage statistics and potential system malfunction.",
            "MITRE ATT&CK Keywords": [
                "device spoofing",
                "data falsification",
                "iot device",
                "mqtt protocol"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the MQTT Broker, directing clients to a malicious broker.",
            "Assumptions": [
                {
                    "Assumption": "The attacker controls a portion of the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if network segments are not isolated."
                },
                {
                    "Assumption": "No mutual authentication is required between MQTT broker and clients.",
                    "Role": "System Administrator",
                    "Condition": "Valid if authentication is not enforced."
                },
                {
                    "Assumption": "MQTT connections are not encrypted.",
                    "Role": "System Operator",
                    "Condition": "Valid if TLS is not utilized for MQTT connections."
                }
            ],
            "Potential Impact": "Unauthorized control and malicious manipulation of connected devices, interception and misuse of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "mqtt protocol",
                "network hijack",
                "man-in-the-middle",
                "broker spoofing"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data stored in emonBase, corrupting energy usage statistics.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has some level of access to the database.",
                    "Role": "Attacker",
                    "Condition": "Valid if database security measures are inadequate."
                },
                {
                    "Assumption": "Data integrity checks are not enforced at the application level.",
                    "Role": "System Developer",
                    "Condition": "Valid if integrity checks are not implemented."
                },
                {
                    "Assumption": "Regular database backups are not maintained.",
                    "Role": "System Administrator",
                    "Condition": "Valid if backup procedures are neglected."
                }
            ],
            "Potential Impact": "Corrupted energy statistics, leading to false insights and potential financial loss.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "database",
                "integrity breach",
                "energy usage"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tamper with network messages between emonTx and emonPi.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and modify network messages.",
                    "Role": "Attacker",
                    "Condition": "Valid if network is not secured and monitored."
                },
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Valid if MQTT messages are sent in plaintext."
                },
                {
                    "Assumption": "There are no checksums or signatures on the messages.",
                    "Role": "System Developer",
                    "Condition": "Valid if message integrity is not verified."
                }
            ],
            "Potential Impact": "Corrupted data leading to erroneous monitoring and control actions.",
            "MITRE ATT&CK Keywords": [
                "network tampering",
                "mqtt protocol",
                "message modification",
                "data corruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious commands into the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The application does not sanitize or validate user input effectively.",
                    "Role": "System Developer",
                    "Condition": "Valid if input validation is weak or absent."
                },
                {
                    "Assumption": "The attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Valid if the web application is internet-facing and inadequately protected."
                },
                {
                    "Assumption": "User sessions are not managed securely.",
                    "Role": "System Administrator",
                    "Condition": "Valid if session management practices are lax."
                }
            ],
            "Potential Impact": "Potential injection vulnerabilities lead to unauthorized control and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "command injection",
                "web application",
                "input validation",
                "code execution"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A legitimate user denies performing certain actions on the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The application does not have sufficient logging and audit trails.",
                    "Role": "System Developer",
                    "Condition": "Valid if auditing features are not implemented."
                },
                {
                    "Assumption": "User actions are not recorded in a tamper-proof manner.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logs can be altered or deleted."
                },
                {
                    "Assumption": "Authorization mechanisms do not track user activity accurately.",
                    "Role": "System Developer",
                    "Condition": "Valid if role-based access controls are improperly implemented."
                }
            ],
            "Potential Impact": "Repudiation risks lead to disputes and challenges in accountability and trust.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "log manipulation",
                "audit trail",
                "access control"
            ],
            "mitre_technique": {
                "name": "Group Policy Modification",
                "description": "Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) \n\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\n\nMalicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1569/002),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)\n\nFor example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)",
                "id": "attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163",
                "technique_id": "T1484.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs actions on behalf of a legitimate user, removing traceable actions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to valid user credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials are compromised or weak."
                },
                {
                    "Assumption": "No multifactor authentication is in place.",
                    "Role": "System Administrator",
                    "Condition": "Valid if only single-factor authentication is used."
                },
                {
                    "Assumption": "Logging mechanisms do not effectively monitor session activities.",
                    "Role": "System Developer",
                    "Condition": "Valid if insufficient logging is implemented."
                }
            ],
            "Potential Impact": "Actions cannot be reliably attributed, leading to potential fraud and misuse.",
            "MITRE ATT&CK Keywords": [
                "session hijacking",
                "credential theft",
                "logging bypass",
                "activity masking"
            ],
            "mitre_technique": {
                "name": "Browser Session Hijacking",
                "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
                "id": "attack-pattern--544b0346-29ad-41e1-a808-501bb4193f47",
                "technique_id": "T1185"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users claim data modification errors that were caused by system admins due to lack of audit trails.",
            "Assumptions": [
                {
                    "Assumption": "There are inadequate logging and monitoring practices in place.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logging practices are lax or ineffective."
                },
                {
                    "Assumption": "Data changes are not documented or logged systematically.",
                    "Role": "System Developer",
                    "Condition": "Valid if logging for modifications is neglected."
                },
                {
                    "Assumption": "No audit trails are maintained for administrative actions.",
                    "Role": "System Administrator",
                    "Condition": "Valid if administrative actions lack transparency."
                }
            ],
            "Potential Impact": "Disputes and lack of accountability for data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "logging failure",
                "audit trail absence",
                "data modification",
                "admin actions"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive energy usage data is leaked from EmonCMS due to unsecured API endpoints.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive data endpoints are not properly secured.",
                    "Role": "System Developer",
                    "Condition": "Valid if API security best practices are not followed."
                },
                {
                    "Assumption": "API requests are not authenticated or encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Valid if communication is in plaintext."
                },
                {
                    "Assumption": "Endpoints are accessible without proper access control mechanisms.",
                    "Role": "System Developer",
                    "Condition": "Valid if access control is weak or absent."
                }
            ],
            "Potential Impact": "Unauthorized access and potential exposure of sensitive energy usage and personal data.",
            "MITRE ATT&CK Keywords": [
                "api exposure",
                "sensitive data",
                "information leakage",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts MQTT messages carrying sensitive information due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communications are not encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Valid if TLS or other encryption methods are not used."
                },
                {
                    "Assumption": "The attacker has network access to intercept communications.",
                    "Role": "Attacker",
                    "Condition": "Valid if network access is compromised or insecure."
                },
                {
                    "Assumption": "Sensitive information is included in MQTT messages.",
                    "Role": "System Developer",
                    "Condition": "Valid if sensitive data is sent without encryption."
                }
            ],
            "Potential Impact": "Sensitive information such as energy usage patterns and control commands can be intercepted.",
            "MITRE ATT&CK Keywords": [
                "mqtt protocol",
                "communication interception",
                "data encryption",
                "network access"
            ],
            "mitre_technique": {
                "name": "Network Trust Dependencies",
                "description": "Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: Pentesting AD Forests) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                "id": "attack-pattern--36aa137f-5166-41f8-b2f0-a4cfa1b4133e",
                "technique_id": "T1590.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "User passwords exposed due to poor storage practices in the EmonCMS database.",
            "Assumptions": [
                {
                    "Assumption": "Passwords are not stored securely (e.g., hashed and salted).",
                    "Role": "System Developer",
                    "Condition": "Valid if password storage best practices are not followed."
                },
                {
                    "Assumption": "Database access is not sufficiently controlled or monitored.",
                    "Role": "System Administrator",
                    "Condition": "Valid if database security is lax."
                },
                {
                    "Assumption": "No encryption is used for sensitive data storage.",
                    "Role": "System Administrator",
                    "Condition": "Valid if data is stored in plaintext."
                }
            ],
            "Potential Impact": "Compromised user accounts and unauthorized access to the system.",
            "MITRE ATT&CK Keywords": [
                "credential storage",
                "password exposure",
                "database security",
                "data encryption"
            ],
            "mitre_technique": {
                "name": "Credentials In Files",
                "description": "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003).(Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.(Citation: SRD GPP)\n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.(Citation: Unit 42 Hildegard Malware) They may also be found as parameters to deployment commands in container logs.(Citation: Unit 42 Unsecured Docker Daemons) In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.(Citation: Specter Ops - Cloud Credential Storage)",
                "id": "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc",
                "technique_id": "T1552.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Denial of Service attack on the MQTT Broker, disrupting communication between devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT Broker is publicly accessible.",
                    "Role": "System Administrator",
                    "Condition": "Valid if MQTT Broker is not securely configured."
                },
                {
                    "Assumption": "No rate limiting or protection mechanisms in place.",
                    "Role": "System Developer",
                    "Condition": "Valid if broker does not implement rate limiting or DoS protection."
                },
                {
                    "Assumption": "The attacker has sufficient network bandwidth to overwhelm the broker.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker can sustain high-traffic attacks."
                }
            ],
            "Potential Impact": "Disruption of communication between IoT devices, leading to loss of control and monitoring capabilities.",
            "MITRE ATT&CK Keywords": [
                "mqtt protocol",
                "denial of service",
                "network flooding",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Database DoS attack causing frequent or sustained downtime for the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "Database is publicly accessible.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the database server is not adequately restricted."
                },
                {
                    "Assumption": "No mitigation techniques like rate limiting or intrusion prevention system in place.",
                    "Role": "System Developer",
                    "Condition": "Valid if DoS mitigation practices are neglected."
                },
                {
                    "Assumption": "The attacker can send repeated, large, or complex queries to the database.",
                    "Role": "Attacker",
                    "Condition": "Valid if query processing is not regulated."
                }
            ],
            "Potential Impact": "System unavailability, affecting data access and control functionalities for users.",
            "MITRE ATT&CK Keywords": [
                "database",
                "denial of service",
                "query overload",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Purchase Technical Data",
                "description": "Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.\n\nAdversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim\u2019s infrastructure.(Citation: ZDNET Selling Data) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
                "id": "attack-pattern--0a241b6c-7bb2-48f9-98f7-128145b4d27f",
                "technique_id": "T1597.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits vulnerabilities in MySQL to cause system crashes.",
            "Assumptions": [
                {
                    "Assumption": "MySQL versions are outdated and vulnerable.",
                    "Role": "System Administrator",
                    "Condition": "Valid if MySQL is not regularly updated."
                },
                {
                    "Assumption": "No monitoring or alerting systems are tracking database health.",
                    "Role": "System Developer",
                    "Condition": "Valid if health monitoring is not implemented."
                },
                {
                    "Assumption": "The attacker has network access to the MySQL server.",
                    "Role": "Attacker",
                    "Condition": "Valid if MySQL server is not secured or segmented."
                }
            ],
            "Potential Impact": "Database crashes, leading to complete service disruption and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "mysql vulnerability",
                "service crash",
                "data corruption",
                "availability impact"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges via a vulnerability in the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The web application has known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Valid if application security patches are not applied."
                },
                {
                    "Assumption": "Access control mechanisms are inadequately implemented.",
                    "Role": "System Developer",
                    "Condition": "Valid if authorization controls are weak."
                },
                {
                    "Assumption": "The attacker has basic access to the application.",
                    "Role": "Attacker",
                    "Condition": "Valid if initial access is gained through weak credentials or lack of MFA."
                }
            ],
            "Potential Impact": "Gain of administrative privileges, leading to potential data manipulation and unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "web application",
                "privilege escalation",
                "authorization bypass",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker using a backdoor vulnerability in the MySQL product for unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "MySQL instances are exposed to the network.",
                    "Role": "System Administrator",
                    "Condition": "Valid if database servers are not properly isolated."
                },
                {
                    "Assumption": "No routine security scans are performed.",
                    "Role": "System Operator",
                    "Condition": "Valid if threat detection measures are absent."
                },
                {
                    "Assumption": "Outdated versions of MySQL prone to known exploits are used.",
                    "Role": "System Administrator",
                    "Condition": "Valid if proper software maintenance is neglected."
                }
            ],
            "Potential Impact": "Unauthorized root-level access to the database, compromising integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "mysql vulnerability",
                "privilege escalation",
                "unauthorized access",
                "database"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A vulnerability in the OEM's MQTT Broker software allows privileges to be elevated to administrative level.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT Broker software is outdated and contains vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Valid if broker updates and patches are delayed."
                },
                {
                    "Assumption": "Logging and monitoring systems are inadequate.",
                    "Role": "System Operator",
                    "Condition": "Valid if anomalies are not being detected or alerted."
                },
                {
                    "Assumption": "The attacker has authenticated access to the MQTT Broker.",
                    "Role": "Attacker",
                    "Condition": "Valid if minimal security measures are in place."
                }
            ],
            "Potential Impact": "Complete control over the message distribution among IoT devices, leading to potential misuse and data tampering.",
            "MITRE ATT&CK Keywords": [
                "mqtt protocol",
                "privilege escalation",
                "broker vulnerability",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "17",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker can spoof the MQTT messages between IoT devices, posing as a legitimate device.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network and can intercept and send MQTT messages.",
                    "Role": "Attacker",
                    "Condition": "Network access and ability to manipulate MQTT messages."
                },
                {
                    "Assumption": "The OEM system does not implement robust authentication mechanisms for MQTT messages.",
                    "Role": "OEM system",
                    "Condition": "Lack of authentication for MQTT."
                },
                {
                    "Assumption": "The victim devices blindly trust incoming MQTT messages without verification.",
                    "Role": "IoT Devices",
                    "Condition": "Unverified incoming messages."
                }
            ],
            "Potential Impact": "Could lead to unauthorized control and manipulation of devices.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "MQTT",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the credentials to access the EmonCMS Web Application and gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can capture or guess valid user credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are weak or exposed."
                },
                {
                    "Assumption": "The EmonCMS application does not enforce strong authentication mechanisms.",
                    "Role": "OEM system",
                    "Condition": "Lack of strong authentication."
                },
                {
                    "Assumption": "Users do not enable two-factor authentication.",
                    "Role": "Users",
                    "Condition": "Two-factor authentication not enabled."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and administrative functions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credentials",
                "web application",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could pose as a trusted network device to gain unauthorized network access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the local network.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "Network devices do not verify identities robustly.",
                    "Role": "Network Devices",
                    "Condition": "Lack of identity verification."
                },
                {
                    "Assumption": "No network-level access controls are in place.",
                    "Role": "Network Administration",
                    "Condition": "Access control insufficient."
                }
            ],
            "Potential Impact": "Could lead to data breaches and unauthorized system control.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "access",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the firmware of emonPi and emonBase to manipulate data or device behavior.",
            "Assumptions": [
                {
                    "Assumption": "Firmware of the devices can be modified and updated by the attacker.",
                    "Role": "Attacker",
                    "Condition": "Firmware update mechanism vulnerable."
                },
                {
                    "Assumption": "Device does not validate the integrity of the firmware.",
                    "Role": "Devices",
                    "Condition": "Lack of integrity check."
                },
                {
                    "Assumption": "No proper access control mechanisms are in place for firmware updates.",
                    "Role": "OEM System",
                    "Condition": "Insufficient access control."
                }
            ],
            "Potential Impact": "Compromise of data integrity and reliability of device operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "integrity",
                "devices"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with data in transit between MQTT clients and broker.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT communication is not encrypted.",
                    "Role": "OEM System",
                    "Condition": "Unencrypted communication."
                },
                {
                    "Assumption": "The attacker has network access to intercept and modify messages.",
                    "Role": "Attacker",
                    "Condition": "Network access and eavesdropping capability."
                },
                {
                    "Assumption": "Devices and clients do not verify the integrity of received messages.",
                    "Role": "MQTT Devices/Clients",
                    "Condition": "Lack of integrity verification."
                }
            ],
            "Potential Impact": "Manipulation of data could lead to incorrect system behavior and decision-making.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MQTT",
                "communication",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the data stored in the EmonCMS Web Application database.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains access to the database with admin privileges.",
                    "Role": "Attacker",
                    "Condition": "Database admin access."
                },
                {
                    "Assumption": "Database does not log or alert on unusual administrative actions.",
                    "Role": "Database",
                    "Condition": "Lack of logging/alerting."
                },
                {
                    "Assumption": "Database security measures are weak or outdated.",
                    "Role": "OEM System",
                    "Condition": "Weak database security."
                }
            ],
            "Potential Impact": "Compromised data integrity, leading to false data visualization and decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "data integrity",
                "web application"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could deny making particular configuration changes in the OEM system.",
            "Assumptions": [
                {
                    "Assumption": "The OEM system lacks proper logging and auditing mechanisms.",
                    "Role": "OEM System",
                    "Condition": "Lack of logging/auditing."
                },
                {
                    "Assumption": "Associated changes lack proper authentication and non-repudiation mechanisms.",
                    "Role": "System/User Changes",
                    "Condition": "Lack of non-repudiation."
                },
                {
                    "Assumption": "System does not maintain an immutable record of changes.",
                    "Role": "OEM Systems",
                    "Condition": "No immutable record."
                }
            ],
            "Potential Impact": "Difficulty in attributing actions to users, leading to potential misuse and conflicts.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit",
                "logging",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Autostart Execution",
                "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",
                "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
                "technique_id": "T1547"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An unauthorized device could deny receiving a control command through the MQTT Relay.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT relay does not have logging of command receipt and execution.",
                    "Role": "MQTT Relay",
                    "Condition": "Lack of logging."
                },
                {
                    "Assumption": "Control commands are not authenticated properly.",
                    "Role": "Control Commands",
                    "Condition": "Unauthenticated commands."
                },
                {
                    "Assumption": "There is no tracking or audit trail of commands sent and received.",
                    "Role": "OEM System",
                    "Condition": "No auditing/tracking."
                }
            ],
            "Potential Impact": "Disputes on whether a command was executed, potentially leading to severe operational issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "MQTT",
                "control",
                "logging"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could deny accessing sensitive data through the EmonCMS Web Application.",
            "Assumptions": [
                {
                    "Assumption": "EmonCMS lacks detailed access logging for sensitive data views.",
                    "Role": "EmonCMS Web Application",
                    "Condition": "Lack of access logs."
                },
                {
                    "Assumption": "The system does not track changes or access events for sensitive data.",
                    "Role": "Data Access",
                    "Condition": "No tracking."
                },
                {
                    "Assumption": "Audit logs, if present, can be tampered with by attacker.",
                    "Role": "OEM Systems",
                    "Condition": "Vulnerable audit logs."
                }
            ],
            "Potential Impact": "Denial of unauthorized data access, leading to mismanagement and possible data breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "access",
                "logging",
                "web application"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data in transit over MQTT is intercepted by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communication is occurring in plain text.",
                    "Role": "OEM System",
                    "Condition": "Unencrypted communication."
                },
                {
                    "Assumption": "The attacker has access to the network to capture MQTT messages.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "There are no encryption mechanisms to protect data in transit.",
                    "Role": "OEM System",
                    "Condition": "Lack of encryption."
                }
            ],
            "Potential Impact": "Unauthorized exposure of sensitive data to attackers.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MQTT",
                "encryption",
                "data in transit"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized read access to the EmonCMS database containing user data and energy consumption details.",
            "Assumptions": [
                {
                    "Assumption": "Database permissions/configurations are weak or flawed.",
                    "Role": "OEM System",
                    "Condition": "Weak database permissions."
                },
                {
                    "Assumption": "Database is exposed to Internet without adequate protections.",
                    "Role": "OEM System",
                    "Condition": "Improper exposure."
                },
                {
                    "Assumption": "There are exploitable vulnerabilities that allow the attacker to bypass access controls.",
                    "Role": "EmonCMS Database",
                    "Condition": "Vulnerable configurations."
                }
            ],
            "Potential Impact": "Exposure of sensitive user data, leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database",
                "privacy",
                "access control"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive firmware data is extracted after compromising the emonBase device via a known vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "emonBase has a known exploitable vulnerability.",
                    "Role": "emonBase",
                    "Condition": "Known vulnerability."
                },
                {
                    "Assumption": "Attacker has access to the network or physical setup to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Access to exploit vulnerability."
                },
                {
                    "Assumption": "The firmware does not employ strong encryption or protection mechanisms.",
                    "Role": "Firmware",
                    "Condition": "Lack of encryption/protection."
                }
            ],
            "Potential Impact": "Disclosure of proprietary firmware data, possibly leading to further exploits.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "firmware",
                "vulnerability",
                "device"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the MQTT broker, overwhelming it and causing system disruption.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker is exposed to the Internet without necessary protections.",
                    "Role": "OEM System",
                    "Condition": "Internet exposure."
                },
                {
                    "Assumption": "The attacker can generate substantial traffic to flood the broker.",
                    "Role": "Attacker",
                    "Condition": "Capability to generate traffic."
                },
                {
                    "Assumption": "There are no effective rate-limiting or protective measures in place.",
                    "Role": "MQTT Broker",
                    "Condition": "Lack of protections."
                }
            ],
            "Potential Impact": "Service disruption, leading to a loss of communication between devices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "MQTT",
                "system disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in MySQL to crash the EmonCMS database.",
            "Assumptions": [
                {
                    "Assumption": "MySQL version in use is vulnerable to known exploits.",
                    "Role": "EmonCMS Database",
                    "Condition": "Vulnerable MySQL version."
                },
                {
                    "Assumption": "Attacker has network access to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "No effective patch or mitigation has been applied.",
                    "Role": "OEM System",
                    "Condition": "Lack of patches."
                }
            ],
            "Potential Impact": "Database crash, leading to system unavailability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MySQL",
                "database",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker utilizes the WiFi MQTT Relay to send continuous on/off commands causing device burnout or malfunction.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to the relay control commands.",
                    "Role": "Attacker",
                    "Condition": "Access to relay commands."
                },
                {
                    "Assumption": "Relay lacks effective command rate-limiting controls.",
                    "Role": "MQTT Relay",
                    "Condition": "Lack of rate-limiting."
                },
                {
                    "Assumption": "Devices connected to the relay are sensitive to rapid state changes.",
                    "Role": "Controlled Devices",
                    "Condition": "Sensitive to state changes."
                }
            ],
            "Potential Impact": "Device malfunction or physical damage, leading to operational downtime.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "relay",
                "device malfunction"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the EmonCMS, gaining administrative access.",
            "Assumptions": [
                {
                    "Assumption": "EmonCMS version in use has known privilege escalation vulnerabilities.",
                    "Role": "EmonCMS Web Application",
                    "Condition": "Known vulnerabilities."
                },
                {
                    "Assumption": "The attacker has network access to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "No effective patch or mitigation has been applied.",
                    "Role": "OEM System",
                    "Condition": "Unpatched system."
                }
            ],
            "Potential Impact": "Unauthorized administrative control over the system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "CMS",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a buffer overflow vulnerability in MySQL to gain control over the EmonCMS database server.",
            "Assumptions": [
                {
                    "Assumption": "MySQL version in use has an exploitable buffer overflow vulnerability.",
                    "Role": "MySQL Server",
                    "Condition": "Vulnerable version."
                },
                {
                    "Assumption": "Attacker can execute arbitrary code via the buffer overflow.",
                    "Role": "Attacker",
                    "Condition": "Exploit capability."
                },
                {
                    "Assumption": "No effective patch or mitigation has been applied.",
                    "Role": "OEM System",
                    "Condition": "Unpatched system."
                }
            ],
            "Potential Impact": "Full control over the database server, compromising all stored data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MySQL",
                "buffer overflow",
                "database"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access on the emonPi platform through exploiting a local vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "The emonPi platform has an exploitable local vulnerability.",
                    "Role": "emonPi",
                    "Condition": "Vulnerable platform."
                },
                {
                    "Assumption": "Attacker has local or direct access to the emonPi device.",
                    "Role": "Attacker",
                    "Condition": "Physical or local access."
                },
                {
                    "Assumption": "Effective patches or security controls are not implemented.",
                    "Role": "OEM System",
                    "Condition": "Lack of security controls."
                }
            ],
            "Potential Impact": "Full control over emonPi, leading to vast control over the IoT network.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "local exploit",
                "root access",
                "IoT platform"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "18",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate an emonPi/emonBase device on the network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the same network as the IoT devices.",
                    "Role": "Attacker",
                    "Condition": "Attacker has network access"
                },
                {
                    "Assumption": "IoT devices and the network do not enforce strong authentication mechanisms.",
                    "Role": "System Design",
                    "Condition": "Weak or no authentication"
                },
                {
                    "Assumption": "Devices rely on device IDs that are easy to guess or replicate.",
                    "Role": "Device Manufacturer",
                    "Condition": "Predictable or reusable IDs"
                }
            ],
            "Potential Impact": "Unauthorized disclosure, tampering of data, system disruption",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "network",
                "impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the MQTT broker to intercept communications.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the network where MQTT messages are transmitted.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "The MQTT communication does not use encrypted/authenticated channels.",
                    "Role": "System Design",
                    "Condition": "Unencrypted or unauthenticated channels"
                },
                {
                    "Assumption": "The system does not validate MQTT broker identity.",
                    "Role": "System Design",
                    "Condition": "No broker validation"
                }
            ],
            "Potential Impact": "Unauthorized information disclosure, data integrity compromise",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "MQTT",
                "impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could use fake credentials to gain access to the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained or guessed valid credentials.",
                    "Role": "Attacker",
                    "Condition": "Credential compromise"
                },
                {
                    "Assumption": "The web application does not implement multi-factor authentication.",
                    "Role": "System Design",
                    "Condition": "Single-factor authentication"
                },
                {
                    "Assumption": "There is no login attempt threshold or account lockout policy.",
                    "Role": "System Design",
                    "Condition": "No account lockout"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive information, control over devices",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "web",
                "impersonation",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify MQTT messages to control home devices inappropriately.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept MQTT messages.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "System Design",
                    "Condition": "Unencrypted messages"
                },
                {
                    "Assumption": "End devices trust all messages from the broker without verification.",
                    "Role": "Device Manufacturer",
                    "Condition": "Lack of message verification"
                }
            ],
            "Potential Impact": "Tampering with device settings, unauthorized control over home automation",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MQTT",
                "network",
                "message injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter data stored on the EmonCMS to falsify energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the database storage.",
                    "Role": "Attacker",
                    "Condition": "Database access"
                },
                {
                    "Assumption": "The database does not have strong access controls or encryption.",
                    "Role": "System Design",
                    "Condition": "Weak access control"
                },
                {
                    "Assumption": "Logs for database alterations are insufficient or non-existent.",
                    "Role": "System Design",
                    "Condition": "Lack of audit logs"
                }
            ],
            "Potential Impact": "Corruption of historical data, misrepresentation of energy usage",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "SQL",
                "database",
                "data corruption"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could exploit vulnerabilities in the EmonCMS web application to modify data inputs.",
            "Assumptions": [
                {
                    "Assumption": "The web application has unpatched vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Unpatched system"
                },
                {
                    "Assumption": "The attacker has discovered and can exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability exploitation"
                },
                {
                    "Assumption": "There are no effective input validation mechanisms in place.",
                    "Role": "System Design",
                    "Condition": "Poor input validation"
                }
            ],
            "Potential Impact": "Manipulation of incoming data, incorrect system behavior",
            "MITRE ATT&CK Keywords": [
                "web",
                "tampering",
                "application",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could deny actions performed on the IoT devices by spoofing logs.",
            "Assumptions": [
                {
                    "Assumption": "The system relies solely on local logs without backups.",
                    "Role": "System Design",
                    "Condition": "Local logs only"
                },
                {
                    "Assumption": "Logs are not digitally signed or secured.",
                    "Role": "System Design",
                    "Condition": "Unsecured logs"
                },
                {
                    "Assumption": "There is no mechanism for log integrity verification.",
                    "Role": "System Design",
                    "Condition": "No integrity check"
                }
            ],
            "Potential Impact": "Loss of accountability, inability to trace actions",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "forging",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could exploit vulnerabilities to alter logs in the database.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has legitimate or exploited access to the database.",
                    "Role": "Attacker",
                    "Condition": "Database access"
                },
                {
                    "Assumption": "Logs are kept in the same database as other data and are not protected.",
                    "Role": "System Design",
                    "Condition": "Unprotected logs"
                },
                {
                    "Assumption": "The application does not audit database queries effectively.",
                    "Role": "System Design",
                    "Condition": "No effective auditing"
                }
            ],
            "Potential Impact": "Loss of data integrity, denial of historical actions",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "SQL",
                "database",
                "log manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could delete log files on the EmonCMS server to hide traces.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the file system where logs are stored.",
                    "Role": "Attacker",
                    "Condition": "File system access"
                },
                {
                    "Assumption": "Log files are not backed up or monitored.",
                    "Role": "System Design",
                    "Condition": "No log backups"
                },
                {
                    "Assumption": "The system does not use a WORM (write once, read many) storage for logs.",
                    "Role": "System Design",
                    "Condition": "Modifiable logs"
                }
            ],
            "Potential Impact": "Loss of audit trail, difficulty in incident investigation",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log deletion",
                "file system",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could sniff MQTT messages to gain sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are transmitted without encryption.",
                    "Role": "System Design",
                    "Condition": "Unencrypted transmission"
                },
                {
                    "Assumption": "The attacker has access to the network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "Sensitive data is included in the MQTT payloads.",
                    "Role": "System Design",
                    "Condition": "Sensitive payloads"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "MQTT",
                "data sniffing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could exploit web application vulnerabilities to access sensitive data in EmonCMS.",
            "Assumptions": [
                {
                    "Assumption": "The web application has unpatched known vulnerabilities.",
                    "Role": "System Design",
                    "Condition": "Unpatched vulnerabilities"
                },
                {
                    "Assumption": "The attacker can discover and exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Exploitable vulnerabilities"
                },
                {
                    "Assumption": "Sensitive data is not adequately protected or encrypted.",
                    "Role": "System Design",
                    "Condition": "Unprotected data"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "web application",
                "exploitation",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider with database access could extract sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "An insider has legitimate access to the database.",
                    "Role": "Insider",
                    "Condition": "Legitimate access"
                },
                {
                    "Assumption": "Access controls on the database are insufficient or not monitored.",
                    "Role": "System Design",
                    "Condition": "Weak access control"
                },
                {
                    "Assumption": "Sensitive data is stored in plaintext.",
                    "Role": "System Design",
                    "Condition": "Plaintext data"
                }
            ],
            "Potential Impact": "Unauthorized data exfiltration",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider",
                "database",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could overload the MQTT broker causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate a large volume of MQTT messages.",
                    "Role": "Attacker",
                    "Condition": "High message volume"
                },
                {
                    "Assumption": "The MQTT broker lacks rate limiting or load balancing.",
                    "Role": "System Design",
                    "Condition": "No rate limiting"
                },
                {
                    "Assumption": "The broker is not designed to handle high loads.",
                    "Role": "System Design",
                    "Condition": "Low capacity"
                }
            ],
            "Potential Impact": "Disruption of device communication",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "network",
                "message flooding"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could exploit known vulnerabilities in MySQL to cause a system crash.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL server is running a vulnerable version.",
                    "Role": "System Design",
                    "Condition": "Unpatched system"
                },
                {
                    "Assumption": "The attacker has network access and can connect to the MySQL server.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "No mitigating defenses are in place (e.g., WAF).",
                    "Role": "System Design",
                    "Condition": "No defense mechanisms"
                }
            ],
            "Potential Impact": "Service disruption, data unavailability",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "database",
                "MySQL",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could send malformed TLS packets to exploit vulnerabilities causing a Denial of Service.",
            "Assumptions": [
                {
                    "Assumption": "The system handles TLS connections and uses a vulnerable library.",
                    "Role": "System Design",
                    "Condition": "Vulnerable library"
                },
                {
                    "Assumption": "The attacker can initiate a connection to the affected service.",
                    "Role": "Attacker",
                    "Condition": "Connection initiation"
                },
                {
                    "Assumption": "The system does not have protective measures against malformed packets.",
                    "Role": "System Design",
                    "Condition": "Lack of protections"
                }
            ],
            "Potential Impact": "Service unavailability, crashing systems",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "TLS",
                "network",
                "malformed packets"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a buffer overflow vulnerability in MySQL to execute arbitrary code.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL server is running an unpatched version with a known buffer overflow vulnerability.",
                    "Role": "System Design",
                    "Condition": "Unpatched system"
                },
                {
                    "Assumption": "The attacker has the ability to send crafted input to the vulnerable service.",
                    "Role": "Attacker",
                    "Condition": "Crafted input"
                },
                {
                    "Assumption": "There are no effective mitigations like ASLR or DEP.",
                    "Role": "System Design",
                    "Condition": "No effective mitigations"
                }
            ],
            "Potential Impact": "Unauthorized code execution, potential full system control",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "buffer overflow",
                "MySQL",
                "code execution"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could gain administrative access to the EmonCMS application via an unpatched PHP vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "The EmonCMS is using a vulnerable version of PHP.",
                    "Role": "System Design",
                    "Condition": "Unpatched system"
                },
                {
                    "Assumption": "The attacker is aware of the vulnerability and can exploit it.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability knowledge"
                },
                {
                    "Assumption": "There are no effective compensating controls on the web server.",
                    "Role": "System Design",
                    "Condition": "Lack of compensating controls"
                }
            ],
            "Potential Impact": "Unauthorized administrative access",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "PHP",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a null pointer dereference in the OpenSSL library to crash the application and gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "The system is using an affected version of OpenSSL.",
                    "Role": "System Design",
                    "Condition": "Vulnerable OpenSSL version"
                },
                {
                    "Assumption": "The attacker can send specially crafted inputs to trigger the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Specially crafted input"
                },
                {
                    "Assumption": "There are no safeguards like input validation or strict input checking in place.",
                    "Role": "System Design",
                    "Condition": "Lack of input validation"
                }
            ],
            "Potential Impact": "Application crash, potential privilege escalation",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "OpenSSL",
                "null pointer dereference",
                "crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "19",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an MQTT broker to intercept or inject malicious messages between IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the same network as the IoT devices.",
                    "Role": "Network Attacker",
                    "Condition": "Valid if the network is not secured adequately."
                },
                {
                    "Assumption": "MQTT authentication and encryption are not enforced.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the system is using default configuration without secured MQTT setup."
                },
                {
                    "Assumption": "IoT devices do not validate server certificates.",
                    "Role": "Device Firmware",
                    "Condition": "Valid if IoT device firmware lacks certificate validation support."
                }
            ],
            "Potential Impact": "Unauthorized control of devices and disruption of data integrity.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "MQTT",
                "network",
                "IoT"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers spoof emonPi or emonBase devices to send fake data to the EmonCMS Web Application.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can physically access the network or use wireless access.",
                    "Role": "Network Attacker",
                    "Condition": "Valid if the network is accessible via Wi-Fi without strong authentication."
                },
                {
                    "Assumption": "EmonCMS does not verify the origin of incoming data.",
                    "Role": "EmonCMS Configuration",
                    "Condition": "Valid if origin verification is not configured."
                },
                {
                    "Assumption": "Devices authenticate based on easily spoofable identifiers.",
                    "Role": "Device Firmware",
                    "Condition": "Valid if devices use weak or no device authentication mechanisms."
                }
            ],
            "Potential Impact": "False energy usage data and misleading information, leading to incorrect user actions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "emanPi",
                "device",
                "injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A user\u2019s credentials for the web application are stolen via an MQTT man-in-the-middle attack.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are transmitted in cleartext.",
                    "Role": "System Configuration",
                    "Condition": "Valid if encryption is not used for MQTT communication."
                },
                {
                    "Assumption": "The attacker has access to the communication channel between the client and server.",
                    "Role": "Network Attacker",
                    "Condition": "Valid if the network traffic is not adequately protected."
                },
                {
                    "Assumption": "Proper user training on secure practices is not enforced.",
                    "Role": "User",
                    "Condition": "Valid if users are not trained in recognizing spoofing attempts."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user data and control of the system.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "credentials",
                "network",
                "MQTT"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of emonTx or emonTh devices to report false data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or network access to the devices.",
                    "Role": "Malicious Actor",
                    "Condition": "Valid if devices are accessible without physical security or network protection."
                },
                {
                    "Assumption": "Firmware integrity checks are not implemented on the devices.",
                    "Role": "Device Manufacturer",
                    "Condition": "Valid if the devices lack self-verification mechanisms."
                },
                {
                    "Assumption": "The devices are configured with default or weak security settings.",
                    "Role": "System Administrator",
                    "Condition": "Valid if security best practices are not followed."
                }
            ],
            "Potential Impact": "Compromised data integrity and loss of trust in the system's data accuracy.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "tampering",
                "device",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits vulnerabilities in the MySQL database to alter historical energy data.",
            "Assumptions": [
                {
                    "Assumption": "The database server is exposed to network attacks.",
                    "Role": "System Administrator",
                    "Condition": "Valid if network segmentation is not implemented."
                },
                {
                    "Assumption": "Known vulnerabilities are not patched.",
                    "Role": "System Maintenance",
                    "Condition": "Valid if regular updates and patches are not applied."
                },
                {
                    "Assumption": "Database access controls are weak or misconfigured.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if database permissions are not properly enforced."
                }
            ],
            "Potential Impact": "False historical data leading to incorrect analysis and decision-making.",
            "MITRE ATT&CK Keywords": [
                "database",
                "SQL",
                "tampering",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker remotely manipulates MQTT messages to control IoT device states.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker is accessible without strong access controls.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the broker is publicly reachable without authentication."
                },
                {
                    "Assumption": "Devices accept control commands without verifying their authenticity.",
                    "Role": "Device Firmware",
                    "Condition": "Valid if device authentication and command validation are not implemented."
                },
                {
                    "Assumption": "Network traffic is not encrypted or monitored.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network communication lacks encryption and anomaly detection."
                }
            ],
            "Potential Impact": "Unauthorized changes to device states, leading to potential safety hazards and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "MQTT",
                "tampering",
                "command injection",
                "IoT"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies logs within the EmonCMS, making their actions untraceable.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access privileges to EmonCMS.",
                    "Role": "Compromised User",
                    "Condition": "Valid if user account is compromised."
                },
                {
                    "Assumption": "Logging integrity checks are not in place.",
                    "Role": "System Configuration",
                    "Condition": "Valid if log files are not protected or monitored."
                },
                {
                    "Assumption": "Database modification is possible without detection.",
                    "Role": "System Administrator",
                    "Condition": "Valid if database activities are not logged or audited."
                }
            ],
            "Potential Impact": "Inability to trace attacks or verify the integrity of historical data.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "repudiation",
                "monitoring",
                "audit"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A legitimate user's actions are falsely attributed to another user due to weak session management in the web application.",
            "Assumptions": [
                {
                    "Assumption": "Session tokens are predictable or reusable.",
                    "Role": "System Developer",
                    "Condition": "Valid if session management is weak or improperly implemented."
                },
                {
                    "Assumption": "Multiple logins from different locations are not flagged.",
                    "Role": "System Administrator",
                    "Condition": "Valid if user activity monitoring is not enforced."
                },
                {
                    "Assumption": "User authentication lacks additional factors (e.g., 2FA).",
                    "Role": "User",
                    "Condition": "Valid if only single-factor authentication is used."
                }
            ],
            "Potential Impact": "Unauthorized actions attributed to legitimate users, leading to potential security incidents and disputes.",
            "MITRE ATT&CK Keywords": [
                "session hijacking",
                "authentication",
                "repudiation",
                "audit"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes log files to cover their tracks after performing malicious activities on the system.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms do not use redundant or tamper-proof storage.",
                    "Role": "System Administrator",
                    "Condition": "Valid if log files are stored locally or on modifiable storage."
                },
                {
                    "Assumption": "No real-time log monitoring or alerting is in place.",
                    "Role": "Security Operations",
                    "Condition": "Valid if there is no continuous monitoring for log changes."
                },
                {
                    "Assumption": "Permissions for modifying logs are not restricted and audited.",
                    "Role": "System Administrator",
                    "Condition": "Valid if access control is weak."
                }
            ],
            "Potential Impact": "Loss of forensic data, making incident investigation and recovery difficult.",
            "MITRE ATT&CK Keywords": [
                "log deletion",
                "repudiation",
                "audit",
                "security operations"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Linux Audit System",
                "description": "Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.\n\nOften referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.(Citation: Red Hat System Auditing)(Citation: IzyKnows auditd threat detection 2022)\n\nWith root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.(Citation: Trustwave Honeypot SkidMap 2023)(Citation: ESET Ebury Feb 2014)",
                "id": "attack-pattern--562e9b64-7239-493d-80f4-2bff900d9054",
                "technique_id": "T1562.012"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data transmitted between IoT devices and the EmonCMS is intercepted due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted in plaintext over the network.",
                    "Role": "System Configuration",
                    "Condition": "Valid if encryption is not used for data transmission."
                },
                {
                    "Assumption": "Network traffic is not segmented or secured.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if secure network segmentation practices are not followed."
                },
                {
                    "Assumption": "Attackers have access to network traffic.",
                    "Role": "Network Attacker",
                    "Condition": "Valid if the network is not protected from eavesdropping attacks."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user and device data.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "plaintext",
                "network",
                "IoT"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits the lack of access controls on the EmonCMS to access user data.",
            "Assumptions": [
                {
                    "Assumption": "Improper access control mechanisms are implemented.",
                    "Role": "System Administrator",
                    "Condition": "Valid if user access controls are poorly configured or not enforced."
                },
                {
                    "Assumption": "Public access to sensitive parts of the web application is permitted.",
                    "Role": "Web Developer",
                    "Condition": "Valid if web application is not correctly segmented."
                },
                {
                    "Assumption": "No monitoring for unauthorized access attempts.",
                    "Role": "Security Operations",
                    "Condition": "Valid if there is no monitoring or alerting for unauthorized access."
                }
            ],
            "Potential Impact": "Sensitive user data exposure and potential for further exploitation.",
            "MITRE ATT&CK Keywords": [
                "unauthorized access",
                "access controls",
                "web application",
                "EmonCMS"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Confidential configuration files are exposed due to improper server settings.",
            "Assumptions": [
                {
                    "Assumption": "Server has misconfigured access permissions.",
                    "Role": "System Administrator",
                    "Condition": "Valid if server permissions are not properly set."
                },
                {
                    "Assumption": "Sensitive files are not stored securely.",
                    "Role": "System Configurator",
                    "Condition": "Valid if sensitive files are placed in publicly accessible directories."
                },
                {
                    "Assumption": "Automated security scans and audits are not performed.",
                    "Role": "Security Operations",
                    "Condition": "Valid if regular audits and scans are not conducted."
                }
            ],
            "Potential Impact": "Leaking of configuration details that can be leveraged for further attacks.",
            "MITRE ATT&CK Keywords": [
                "configuration file",
                "server settings",
                "information disclosure",
                "file permissions"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends excessive MQTT messages to overwhelm the WiFi MQTT Relay, causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker does not have rate limiting or DoS protection.",
                    "Role": "System Administrator",
                    "Condition": "Valid if protective measures against DoS are not implemented on the broker."
                },
                {
                    "Assumption": "The WLAN network is accessible to attackers.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network access is not restricted."
                },
                {
                    "Assumption": "Devices cannot handle unexpected high loads.",
                    "Role": "Device Manufacturer",
                    "Condition": "Valid if devices are not designed to handle high traffic volumes."
                }
            ],
            "Potential Impact": "Service availability disruption and potential device malfunction.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "message flooding",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of CVE vulnerabilities in MySQL to crash the database server due to malformed requests.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities are not patched or mitigated.",
                    "Role": "System Maintenance",
                    "Condition": "Valid if the database system is not regularly updated."
                },
                {
                    "Assumption": "Database service is publicly accessible.",
                    "Role": "System Administrator",
                    "Condition": "Valid if MySQL server is exposed without proper access restrictions."
                },
                {
                    "Assumption": "No intrusion detection or prevention mechanisms.",
                    "Role": "Security Operations",
                    "Condition": "Valid if there are no systems to detect or prevent malicious requests."
                }
            ],
            "Potential Impact": "Inability to access database services, affecting data availability for the entire IoT system.",
            "MITRE ATT&CK Keywords": [
                "MySQL vulnerabilities",
                "crash",
                "database",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Targeted attacks leveraging known vulnerabilities in Python libraries to cause application crashes.",
            "Assumptions": [
                {
                    "Assumption": "Python components are not updated.",
                    "Role": "System Maintenance",
                    "Condition": "Valid if the application uses outdated Python libraries."
                },
                {
                    "Assumption": "Web application lacks input validation.",
                    "Role": "Web Developer",
                    "Condition": "Valid if input data is not properly sanitized."
                },
                {
                    "Assumption": "Network monitoring for abnormal behavior is not in place.",
                    "Role": "Security Operations",
                    "Condition": "Valid if there is no monitoring for abnormal application behavior."
                }
            ],
            "Potential Impact": "Web application crash, leading to a temporary loss of data access and system functionality.",
            "MITRE ATT&CK Keywords": [
                "Python vulnerabilities",
                "application crash",
                "input validation",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a buffer overflow in the MySQL daemon to gain elevated privileges on the server.",
            "Assumptions": [
                {
                    "Assumption": "The mysql user has insufficiently restricted privileges.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if default privileges are used without restricting permissions."
                },
                {
                    "Assumption": "Buffer overflows are not detected or mitigated by the system.",
                    "Role": "System Maintenance",
                    "Condition": "Valid if software updates to fix buffer overflows are not applied."
                },
                {
                    "Assumption": "The attacker has network access to the MySQL server.",
                    "Role": "Network Attacker",
                    "Condition": "Valid if the server is accessible over the network."
                }
            ],
            "Potential Impact": "Unauthorized access with elevated privileges, which could lead to full system compromise.",
            "MITRE ATT&CK Keywords": [
                "buffer overflow",
                "privilege escalation",
                "MySQL",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses the MQTT protocol's lack of built-in security to exploit a device and gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "MQTT protocol configurations lack proper security settings.",
                    "Role": "System Administrator",
                    "Condition": "Valid if MQTT configurations are not hardened."
                },
                {
                    "Assumption": "Devices do not have strong authentication and authorization mechanisms.",
                    "Role": "Device Manufacturer",
                    "Condition": "Valid if device security features are weak or missing."
                },
                {
                    "Assumption": "The attacker has managed to gain initial access to the network.",
                    "Role": "Network Attacker",
                    "Condition": "Valid if the network is not secured from unauthorized access."
                }
            ],
            "Potential Impact": "Unauthorized control over the system and potential to perform any action with elevated privileges.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "MQTT",
                "device",
                "security misconfiguration"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised IoT device is used by an attacker to gain administrator access to EmonCMS through API exploitation.",
            "Assumptions": [
                {
                    "Assumption": "APIs are not securely implemented.",
                    "Role": "Web Developer",
                    "Condition": "Valid if API endpoints lack strong authentication and input validation."
                },
                {
                    "Assumption": "Communication between devices and the web application is not encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Valid if data in transit is not encrypted or validated."
                },
                {
                    "Assumption": "The attacker has successfully compromised a device within the network.",
                    "Role": "Network Attacker",
                    "Condition": "Valid if the network is not adequately secured against internal threats."
                }
            ],
            "Potential Impact": "Full control over the EmonCMS platform, risking data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "API exploitation",
                "administrator access",
                "IoT",
                "web application"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "20",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an authorized MQTT client to send malicious commands to IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT clients do not use strong authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "The client does not require certificates or other robust identity verification."
                },
                {
                    "Assumption": "Network traffic is not adequately encrypted.",
                    "Role": "Attacker",
                    "Condition": "The attacker can intercept and analyze MQTT traffic to replicate client behavior."
                },
                {
                    "Assumption": "The MQTT broker does not verify the integrity of the connected clients.",
                    "Role": "System Admin",
                    "Condition": "Lack of integrity checks on the broker side."
                }
            ],
            "Potential Impact": "Unauthorized control over IoT devices, leading to breaches in system integrity and potential disruptions.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "MQTT",
                "Client Impersonation",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor spoofs the identity of the emonBase to manipulate data collection and reporting.",
            "Assumptions": [
                {
                    "Assumption": "emonBase does not use mutual authentication with other devices.",
                    "Role": "Attacker",
                    "Condition": "No mutual TLS or other authentication methods are enforced."
                },
                {
                    "Assumption": "There is insufficient logging and monitoring to detect anomalous base station behavior.",
                    "Role": "System Admin",
                    "Condition": "Logging mechanisms are either not in place or not reviewed regularly."
                },
                {
                    "Assumption": "The spoofed emonBase can establish a session with the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Broker lacks stringent checks for session initiation."
                }
            ],
            "Potential Impact": "Integrity and availability of data compromised due to manipulated base station data.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Base Station",
                "Data Manipulation",
                "IoT"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a WiFi MQTT Relay to gain unauthorized control over home automation devices.",
            "Assumptions": [
                {
                    "Assumption": "Relay devices do not implement secure authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Insufficient or no use of authentication tokens."
                },
                {
                    "Assumption": "Network security is relaxed, allowing the attacker to gain access to the internal network.",
                    "Role": "Attacker",
                    "Condition": "Lack of network segmentation or weak WiFi encryption."
                },
                {
                    "Assumption": "The system's detection mechanisms are weak or nonexistent.",
                    "Role": "System Admin",
                    "Condition": "Intrusion Detection Systems (IDS) are not deployed."
                }
            ],
            "Potential Impact": "Unauthorized access and control over home automation, impacting system availability and potentially leading to unsafe device states.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Relay",
                "Unauthorized Control",
                "Home Automation"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data packets in transit between emonTx modules and the emonBase.",
            "Assumptions": [
                {
                    "Assumption": "Data packets are not encrypted during transit.",
                    "Role": "Attacker",
                    "Condition": "The communication uses plaintext MQTT messages."
                },
                {
                    "Assumption": "Network access is possible via unsecured WiFi or other vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "The network is accessible and inadequately protected."
                },
                {
                    "Assumption": "No integrity checks are performed on incoming data at the emonBase.",
                    "Role": "System Admin",
                    "Condition": "Lack of validation mechanisms such as checksums or digital signatures."
                }
            ],
            "Potential Impact": "Data integrity compromised, leading to incorrect energy monitoring and control decisions.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Packets",
                "Network",
                "IoT"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware installed on the emonPi base station to alter data before it is sent to the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The emonPi has vulnerabilities allowing unauthorized code execution.",
                    "Role": "Attacker",
                    "Condition": "Exploitable software bugs or misconfigurations."
                },
                {
                    "Assumption": "No regular integrity checks for software and firmware on emonPi.",
                    "Role": "System Admin",
                    "Condition": "Lack of verification processes for system integrity."
                },
                {
                    "Assumption": "Physical or remote access to the device is possible.",
                    "Role": "Attacker",
                    "Condition": "Weak physical security or remote access protections."
                }
            ],
            "Potential Impact": "Corruption of data integrity, leading to unreliable monitoring outputs.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Base Station",
                "Malware",
                "Software Integrity"
            ],
            "mitre_technique": {
                "name": "Malicious Shell Modification",
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user\u2019s shell. User shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command line interface or remotely logs in (such as SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user\u2019s home directory (~/) to configure the environment. All login shells on a system use <code>/etc/profile</code> when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user\u2019s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files (Citation: intezer-kaiji-malware). These files require root permissions and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> (Rocke) which are sourced when a user opens a command line interface or connects remotely. Adversaries often use ~/.bash_profile since the system only executes the first file that exists in the listed order. Adversaries have also leveraged the <code>~/.bashrc</code> file (Tsunami, Rocke, Linux Rabbit, Magento) which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command line interface. Some malware targets the termination of a program to trigger execution (Cannon), adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session(Pearl_shellbot). \n\nFor macOS, the functionality of this technique is similar but leverages zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>. The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc<code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.",
                "id": "attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8",
                "technique_id": "T1156"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An unauthorized individual physically accesses and alters the emonTx hardware to report falsified energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "Physical security mechanisms are inadequate or easily bypassed.",
                    "Role": "Attacker",
                    "Condition": "Lack of security locks or surveillance."
                },
                {
                    "Assumption": "The hardware lacks tamper-evident features.",
                    "Role": "System Admin",
                    "Condition": "No protective seals or tamper indicators."
                },
                {
                    "Assumption": "Alteration is not detected by the system's internal checks.",
                    "Role": "System Admin",
                    "Condition": "System does not perform self-checks for hardware integrity."
                }
            ],
            "Potential Impact": "Compromised data integrity and potentially inaccurate energy consumption reports.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Hardware",
                "Physical Security",
                "IoT"
            ],
            "mitre_technique": {
                "name": "Hardware",
                "description": "Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",
                "id": "attack-pattern--24286c33-d4a4-4419-85c2-1d094a896c26",
                "technique_id": "T1592.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having issued commands to the MQTT broker due to the lack of proper logging and audit trails.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks comprehensive logging and audit capabilities.",
                    "Role": "System Admin",
                    "Condition": "No proper logging setup or regular log reviews."
                },
                {
                    "Assumption": "Commands are not tied to strong user authentication methods.",
                    "Role": "System Admin",
                    "Condition": "System does not enforce user credentials or identity verification."
                },
                {
                    "Assumption": "No independent log storage to prevent tampering of logs.",
                    "Role": "System Admin",
                    "Condition": "Logs stored on the same device or network segment that could be altered."
                }
            ],
            "Potential Impact": "Issues in non-repudiation leading to difficulties in incident response and accountability.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Audit Trails",
                "MQTT"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An unauthorized user gains access to the EmonCMS web application and manipulates data without leaving a trace.",
            "Assumptions": [
                {
                    "Assumption": "Weaknesses in user authentication and session management.",
                    "Role": "Attacker",
                    "Condition": "Exploitable authentication mechanisms (e.g., weak passwords, session hijacking)."
                },
                {
                    "Assumption": "Audit logs are not protected from unauthorized modification.",
                    "Role": "System Admin",
                    "Condition": "Logs not protected or tamper-evident."
                },
                {
                    "Assumption": "No intrusion detection system is in place to monitor suspicious activities.",
                    "Role": "System Admin",
                    "Condition": "Absence of IDS/IPS monitoring and alerts."
                }
            ],
            "Potential Impact": "Manipulated data and lack of accountability, compromising data integrity and non-repudiation.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Web Application",
                "Unauthorized Access",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A compromised client denies sending a large volume of messages that results in data flooding in the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "No safeguards against message flooding or rate-limiting in the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Broker lacks message rate limiting or flood detection mechanisms."
                },
                {
                    "Assumption": "System does not maintain logs of message rates and sources.",
                    "Role": "System Admin",
                    "Condition": "Lack of detailed logging on message activity."
                },
                {
                    "Assumption": "Insufficient monitoring to detect unusual traffic patterns.",
                    "Role": "System Admin",
                    "Condition": "Absence of traffic analysis tools."
                }
            ],
            "Potential Impact": "Denial of service and difficulty attributing the source of the attack, affecting data availability and non-repudiation.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Message Flood",
                "MQTT",
                "Data Availability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive environmental data intercepted between emonTh sensors and the emonBase.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted over an unencrypted channel.",
                    "Role": "Attacker",
                    "Condition": "Communication not encrypted (e.g., plaintext MQTT messages)."
                },
                {
                    "Assumption": "Network boundary controls are weak or nonexistent.",
                    "Role": "Attacker",
                    "Condition": "No firewall or access control mechanisms in place."
                },
                {
                    "Assumption": "The attacker has access to network resources.",
                    "Role": "Attacker",
                    "Condition": "Proximity or access to network infrastructure."
                }
            ],
            "Potential Impact": "Confidentiality of sensitive environmental data compromised, potentially leading to privacy violations.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Data Interception",
                "Network Traffic",
                "IoT Sensors"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromised EmonCMS revealing private user energy consumption data.",
            "Assumptions": [
                {
                    "Assumption": "Weaknesses in web application security.",
                    "Role": "Attacker",
                    "Condition": "Exploitable web application vulnerabilities (e.g., SQL injection, XSS)."
                },
                {
                    "Assumption": "Inadequate database security measures.",
                    "Role": "System Admin",
                    "Condition": "No encryption or weak access controls on databases."
                },
                {
                    "Assumption": "Absence of security patch management.",
                    "Role": "System Admin",
                    "Condition": "Failure to update software to patch known vulnerabilities."
                }
            ],
            "Potential Impact": "Unauthorized access to confidential user data, impacting privacy and user trust.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Web Application",
                "Energy Data",
                "Confidentiality"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of messages between the MQTT clients and broker revealing sensitive control commands.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Utilization of plaintext MQTT communication."
                },
                {
                    "Assumption": "Network traffic can be monitored by unauthorized actors.",
                    "Role": "Attacker",
                    "Condition": "Network lacks adequate monitoring and protection."
                },
                {
                    "Assumption": "No secure access controls for the network.",
                    "Role": "System Admin",
                    "Condition": "Network devices are susceptible to unauthorized access."
                }
            ],
            "Potential Impact": "Confidentiality breach of sensitive control commands, potentially leading to malicious activity.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "MQTT",
                "Sensitive Data",
                "Network Traffic"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Network flooding overloads the MQTT broker, causing it to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting or message filtering on the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Broker can accept unlimited message rates from clients."
                },
                {
                    "Assumption": "The attacker has network access to send a high volume of messages.",
                    "Role": "Attacker",
                    "Condition": "Lack of network segmentation and access controls."
                },
                {
                    "Assumption": "Insufficient network monitoring to detect and mitigate attacks.",
                    "Role": "System Admin",
                    "Condition": "No active monitoring or alert systems in place."
                }
            ],
            "Potential Impact": "Availability of the MQTT broker is compromised, disrupting the communication between IoT devices.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Network Flooding",
                "MQTT Broker",
                "Availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of a known vulnerability in MySQL to crash the database servers used by the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "MySQL instances are not patched to address known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Lack of regular updates and security patch management."
                },
                {
                    "Assumption": "The attacker has network access to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Network lacks robust access controls."
                },
                {
                    "Assumption": "No intrusion detection mechanisms for database attack attempts.",
                    "Role": "System Admin",
                    "Condition": "Absence of IDS/IPS systems monitoring database activities."
                }
            ],
            "Potential Impact": "Availability of the database and the web application is compromised, affecting data access and usage.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Database Crash",
                "MySQL",
                "Web Application"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A large-scale ping flood attack disrupts the connectivity of emonPi and emonBase stations.",
            "Assumptions": [
                {
                    "Assumption": "Network lacks protections against ICMP flood attacks.",
                    "Role": "Attacker",
                    "Condition": "No rate limiting or blocking of ICMP requests."
                },
                {
                    "Assumption": "Devices are connected to the network with vulnerable configurations.",
                    "Role": "Attacker",
                    "Condition": "Simple default configurations without security hardening."
                },
                {
                    "Assumption": "No active monitoring for abnormal network traffic patterns.",
                    "Role": "System Admin",
                    "Condition": "Lack of network monitoring and alert systems."
                }
            ],
            "Potential Impact": "Network availability and device connectivity are compromised, disrupting data collection and control.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Ping Flood",
                "Network Connectivity",
                "IoT Devices"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of a buffer overflow in the EmonCMS web application to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Web application includes unpatched buffer overflow vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Use of known vulnerable software versions."
                },
                {
                    "Assumption": "The attacker has access to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Network or web access without strong protections."
                },
                {
                    "Assumption": "Absence of input validation mechanisms.",
                    "Role": "System Admin",
                    "Condition": "Failure to sanitize and validate user input."
                }
            ],
            "Potential Impact": "Attacker gains unauthorized elevated privileges, compromising system integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Buffer Overflow",
                "Web Application",
                "Root Access"
            ],
            "mitre_technique": {
                "name": "Container and Resource Discovery",
                "description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\n\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment\u2019s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary\u2019s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ",
                "id": "attack-pattern--0470e792-32f8-46b0-a351-652bc35e9336",
                "technique_id": "T1613"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A low-privileged attacker leveraging a vulnerability in MySQL to gain administrative access to the database.",
            "Assumptions": [
                {
                    "Assumption": "MySQL database is not updated to patch known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Outdated or vulnerable MySQL versions."
                },
                {
                    "Assumption": "Database security configurations are weak.",
                    "Role": "System Admin",
                    "Condition": "Inadequate access controls and privilege management."
                },
                {
                    "Assumption": "The attacker has network access to the database server.",
                    "Role": "Attacker",
                    "Condition": "No network segmentation or strong firewall rules."
                }
            ],
            "Potential Impact": "Gaining administrative access compromises data integrity and confidentiality within the database.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "MySQL",
                "Database Security",
                "Administrative Access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of a vulnerability in the Raspberry Pi OS running on the emonPi to achieve root privileges.",
            "Assumptions": [
                {
                    "Assumption": "Raspberry Pi OS is not regularly updated.",
                    "Role": "Attacker",
                    "Condition": "Outdated OS versions with known vulnerabilities."
                },
                {
                    "Assumption": "The attacker can access the Raspberry Pi device.",
                    "Role": "Attacker",
                    "Condition": "Poor physical or network access protections."
                },
                {
                    "Assumption": "No intrusion detection mechanisms monitoring the device.",
                    "Role": "System Admin",
                    "Condition": "Lack of system monitoring and alerting solutions."
                }
            ],
            "Potential Impact": "Root access obtained, leading to full control over the device and its data.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Raspberry Pi OS",
                "Root Access",
                "Device Security"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "21",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate MQTT clients and send false data to the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker does not enforce strong client authentication.",
                    "Role": "System Designer",
                    "Condition": "Authentication mechanism is weak or non-existent."
                },
                {
                    "Assumption": "The attacker can access the network where the MQTT broker is accessible.",
                    "Role": "Network Administrator",
                    "Condition": "Network is not adequately secured against unauthorized access."
                }
            ],
            "Potential Impact": "False data can corrupt energy usage statistics or manipulate device actions, impacting data integrity.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "MQTT",
                "Network",
                "Impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the EmonCMS web application to trick users into providing their login credentials.",
            "Assumptions": [
                {
                    "Assumption": "Users access the EmonCMS web application over an insecure channel.",
                    "Role": "User",
                    "Condition": "Users do not use HTTPS."
                },
                {
                    "Assumption": "The web application does not appropriately validate the origin of requests.",
                    "Role": "Web Developer",
                    "Condition": "Lack of secure web application design and implementation."
                }
            ],
            "Potential Impact": "Compromised user credentials can lead to unauthorized access to sensitive user data, impacting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Web",
                "Credential Harvesting",
                "Phishing",
                "Impersonation"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the emonPi base station identity to intercept and manipulate data flows.",
            "Assumptions": [
                {
                    "Assumption": "Base station identity verification is weak or missing.",
                    "Role": "System Integrator",
                    "Condition": "Weakness in the design of identity verification mechanisms."
                },
                {
                    "Assumption": "Attackers can access the communication channel between base stations and other devices.",
                    "Role": "Network Administrator",
                    "Condition": "Networks are inadequately monitored and protected."
                }
            ],
            "Potential Impact": "Potential manipulation and incorrect logging of energy data, impacting data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Device",
                "Impersonation",
                "Man-in-the-Middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with MQTT messages, altering commands sent to the WiFi MQTT Relay.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Encryption is not enforced for MQTT communication."
                },
                {
                    "Assumption": "The attacker has access to the network where the MQTT broker operates.",
                    "Role": "Network Administrator",
                    "Condition": "Network lacks sufficient access controls."
                }
            ],
            "Potential Impact": "Manipulated device commands could disrupt automated systems, impacting availability and safety.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "MQTT",
                "Relay",
                "Command Injection"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify EmonCMS data entries by exploiting a vulnerability in the web application.",
            "Assumptions": [
                {
                    "Assumption": "There is a known vulnerability in the web application that allows input manipulation.",
                    "Role": "Pentester",
                    "Condition": "Application vulnerabilities are not patched promptly."
                },
                {
                    "Assumption": "Attackers can submit malicious input to web forms or APIs.",
                    "Role": "Web Developer",
                    "Condition": "Lack of input validation and sanitization."
                }
            ],
            "Potential Impact": "Unauthorized data modification leads to corrupted energy records, impacting data integrity.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Web Application",
                "SQL Injection",
                "Data Integrity Manipulation"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampering with the firmware of emonPi or emonTx modules by exploiting physical or remote access.",
            "Assumptions": [
                {
                    "Assumption": "Firmware is not signed or verified before installation.",
                    "Role": "System Integrator",
                    "Condition": "Lack of secure firmware deployment practices."
                },
                {
                    "Assumption": "Attackers can gain physical or remote access to the devices.",
                    "Role": "Physical Security Officer",
                    "Condition": "Inadequate physical or remote access controls."
                }
            ],
            "Potential Impact": "Compromised firmware could lead to manipulated readings and potentially disrupt system operations, impacting data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "Firmware Tampering",
                "Device",
                "Physical Access",
                "Remote Access"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user or attacker performs actions via the OEM system without leaving an audit trail, denying their actions.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks comprehensive logging mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Log management is not properly configured."
                },
                {
                    "Assumption": "Auditing mechanisms are not enforced consistently.",
                    "Role": "Security Officer",
                    "Condition": "Audit policies are insufficient or not implemented."
                }
            ],
            "Potential Impact": "Lack of accountability and difficulty in tracking malicious or erroneous actions, impacting data integrity and system oversight.",
            "MITRE ATT&CK Keywords": [
                "Audit Bypass",
                "Logging",
                "User Actions",
                "Repudiation"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could exploit logging weaknesses to delete or alter logs within the MySQL backend database.",
            "Assumptions": [
                {
                    "Assumption": "Database write permissions are not properly restricted.",
                    "Role": "Database Administrator",
                    "Condition": "Inadequate enforcement of least privilege principle."
                },
                {
                    "Assumption": "Logging mechanisms do not have immutability or tamper-evident features.",
                    "Role": "Database Architect",
                    "Condition": "Logs are stored in a modifiable format."
                }
            ],
            "Potential Impact": "Deletion or alteration of log entries could hinder incident response and post-attack analysis, impacting data integrity.",
            "MITRE ATT&CK Keywords": [
                "Log Deletion",
                "Database",
                "MySQL",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious user could exploit poor session management in EmonCMS to deny specific actions performed under their account.",
            "Assumptions": [
                {
                    "Assumption": "Session management features are inadequately implemented.",
                    "Role": "Web Developer",
                    "Condition": "Mechanisms like session logs are weak or missing."
                },
                {
                    "Assumption": "The application does not enforce strong user authentication and session control.",
                    "Role": "Application Security Engineer",
                    "Condition": "Weak session controls."
                }
            ],
            "Potential Impact": "Manipulation or denial of performed actions can lead to unauthorized activities going unnoticed, impacting system integrity.",
            "MITRE ATT&CK Keywords": [
                "Session Management",
                "Web Application",
                "User Actions",
                "Repudiation"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Network sniffing could intercept unencrypted MQTT messages revealing sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are sent in plaintext.",
                    "Role": "System Designer",
                    "Condition": "No encryption protocol is applied to MQTT communication."
                },
                {
                    "Assumption": "Attackers have access to the network containing MQTT traffic.",
                    "Role": "Network Administrator",
                    "Condition": "Network monitoring and security mechanisms are weak."
                }
            ],
            "Potential Impact": "Sensitive energy usage data and control messages could be intercepted, jeopardizing data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Network Sniffing",
                "MQTT",
                "Plaintext",
                "Data Exposure"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exploitation of MySQL database vulnerabilities leads to unauthorized access to sensitive energy monitoring data.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL database is misconfigured or unpatched.",
                    "Role": "Database Administrator",
                    "Condition": "Failure to apply critical security updates."
                },
                {
                    "Assumption": "Attackers have the capability to exploit known vulnerabilities remotely.",
                    "Role": "Security Analyst",
                    "Condition": "Presence of remotely exploitable database vulnerabilities."
                }
            ],
            "Potential Impact": "Unauthorized access to energy monitoring data can lead to privacy breaches, impacting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Database",
                "MySQL",
                "Exploitation",
                "Data Leakage"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to EmonCMS web interface due to weak or absent authentication allows viewing of sensitive user data.",
            "Assumptions": [
                {
                    "Assumption": "There is weak or no authentication mechanism implemented in EmonCMS.",
                    "Role": "Web Developer",
                    "Condition": "Lack of enforced authentication controls."
                },
                {
                    "Assumption": "Attackers can access the EmonCMS interface directly.",
                    "Role": "System Administrator",
                    "Condition": "Application is internet-facing without proper restrictions."
                }
            ],
            "Potential Impact": "Sensitive energy usage data and user details can be accessed and potentially misused, impacting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Web Interface",
                "Authentication Bypass",
                "Sensitive Data",
                "Data Breach"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a known MySQL vulnerability to crash the MySQL server, disrupting data availability.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL server is running a version with known vulnerabilities.",
                    "Role": "Database Administrator",
                    "Condition": "Database updates are not applied consistently."
                },
                {
                    "Assumption": "Attackers have network access to the MySQL server.",
                    "Role": "Network Administrator",
                    "Condition": "Network access control measures are insufficient."
                }
            ],
            "Potential Impact": "Unavailable database services result in disruption of data collection and access, impacting system availability.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "Database",
                "MySQL",
                "Crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "MQTT Broker is overwhelmed with a flood of connection requests, disrupting communication between devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not have rate-limiting or DoS protection.",
                    "Role": "System Designer",
                    "Condition": "Lack of adequate security measures on MQTT broker."
                },
                {
                    "Assumption": "Attackers can initiate numerous connections to the MQTT broker.",
                    "Role": "Network Administrator",
                    "Condition": "Network is accessible by unauthorized entities."
                }
            ],
            "Potential Impact": "Flooding the MQTT broker with requests can disrupt communication, impacting system availability.",
            "MITRE ATT&CK Keywords": [
                "MQTT",
                "Connection Flooding",
                "DoS",
                "Communication Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of MQTT broker to crash it using malformed MQTT messages.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker is vulnerable to malformed message attacks.",
                    "Role": "Software Developer",
                    "Condition": "Lack of strict input validation."
                },
                {
                    "Assumption": "Attackers can send malformed MQTT messages to the broker.",
                    "Role": "Network Administrator",
                    "Condition": "No input filtering or validation on the MQTT broker."
                }
            ],
            "Potential Impact": "The broker crash can halt device communication and disrupt energy monitoring processes, impacting system availability.",
            "MITRE ATT&CK Keywords": [
                "MQTT",
                "Malformed Messages",
                "DoS",
                "Service Crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the MySQL server to gain administrative control.",
            "Assumptions": [
                {
                    "Assumption": "Known SQL vulnerabilities exist in the server version.",
                    "Role": "Database Administrator",
                    "Condition": "Critical patches are not applied."
                },
                {
                    "Assumption": "The attacker has network access to the MySQL server.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of network isolation and protection."
                }
            ],
            "Potential Impact": "Gaining administrative control can allow the attacker to modify permissions, data, and system configurations, impacting data integrity.",
            "MITRE ATT&CK Keywords": [
                "SQL Exploitation",
                "Admin Control",
                "Privilege Escalation",
                "Database"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a vulnerability in EmonCMS to gain unauthorized administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities exist within the web application.",
                    "Role": "Web Developer",
                    "Condition": "Application code is unpatched or lacks proper security measures."
                },
                {
                    "Assumption": "The attacker can interact with the EmonCMS-facing interface.",
                    "Role": "System Administrator",
                    "Condition": "The interface is publicly accessible without proper restrictions."
                }
            ],
            "Potential Impact": "Unauthorized administrative access can lead to manipulation of web application settings and user data, impacting data integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Web Application",
                "Admin Access",
                "Privilege Escalation",
                "Exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses insecure IoT device firmware to escalate privileges to the base station levels.",
            "Assumptions": [
                {
                    "Assumption": "IoT device firmware contains security flaws.",
                    "Role": "System Designer",
                    "Condition": "Firmware lacks proper security measures."
                },
                {
                    "Assumption": "Attackers can directly interact with IoT devices on the network.",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient network security and monitoring."
                }
            ],
            "Potential Impact": "Privilege escalation from IoT devices to base station controls can disrupt the entire monitoring system, impacting data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "IoT Device",
                "Firmware Exploitation",
                "Privilege Escalation",
                "Base Station"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft DLL Search) Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence. \n\nAdversaries may perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft 2269637) Adversaries may use this behavior to cause the program to load a malicious DLL. \n\nAdversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL to maintain persistence or privilege escalation. (Citation: Microsoft DLL Redirection) (Citation: Microsoft Manifests) (Citation: Mandiant Search Order)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.\n\nPrograms that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--46944654-fcc1-4f63-9dad-628102376586",
                "technique_id": "T1038"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "22",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an emonPi or emonBase device by manipulating the MAC addresses and gains unauthorized access to the network.",
            "Assumptions": [
                {
                    "Assumption": "The network does not use strong mutual authentication methods for devices.",
                    "Role": "Network Admin",
                    "Condition": "Insecure network settings."
                },
                {
                    "Assumption": "The attacker has network access to the same subnet as the IoT devices.",
                    "Role": "Attacker",
                    "Condition": "Physical or limited network access."
                },
                {
                    "Assumption": "The spoofing attack is not detected through intrusion detection systems.",
                    "Role": "System Admin",
                    "Condition": "Lack of IDS/IPS or weak configuration."
                }
            ],
            "Potential Impact": "Unauthorized control and access to collected data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "mac address"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses phishing techniques to spoof the EmonCMS Web Application and capture user credentials.",
            "Assumptions": [
                {
                    "Assumption": "Users may fall for phishing emails containing URLs to malicious web pages.",
                    "Role": "User",
                    "Condition": "Weak phishing awareness."
                },
                {
                    "Assumption": "The EmonCMS Web Application does not enforce multi-factor authentication.",
                    "Role": "System Admin",
                    "Condition": "Insecure authentication mechanisms."
                },
                {
                    "Assumption": "The phishing site successfully mimics the legitimate EmonCMS Web Application UI.",
                    "Role": "Attacker",
                    "Condition": "Detailed reconnaissance and technical skills."
                }
            ],
            "Potential Impact": "Compromise of user credentials and unauthorized application access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "phishing",
                "web application",
                "credentials"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts MQTT communications and impersonates an MQTT client to issue unauthorized commands.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT protocol is not using secure channels (e.g., TLS) for communication.",
                    "Role": "Network Admin",
                    "Condition": "Insecure communication channels."
                },
                {
                    "Assumption": "The attacker can perform a man-in-the-middle (MitM) attack on the MQTT communications.",
                    "Role": "Attacker",
                    "Condition": "Network access with capabilities for MitM attacks."
                },
                {
                    "Assumption": "The MQTT broker does not validate the sender's identity robustly.",
                    "Role": "System Admin",
                    "Condition": "Weak client authentication mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized control of home appliances and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "mqtt",
                "mitm",
                "unauthorized commands"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to an emonTh or emonTx and alters the sensor readings.",
            "Assumptions": [
                {
                    "Assumption": "The device does not have tamper-proof seals or mechanisms.",
                    "Role": "Device Manufacturer",
                    "Condition": "Design oversight in physical security."
                },
                {
                    "Assumption": "The attacker has physical access to the target environment.",
                    "Role": "Attacker",
                    "Condition": "Weak physical security controls."
                },
                {
                    "Assumption": "The system does not perform regular integrity checks of the sensor data.",
                    "Role": "System Admin",
                    "Condition": "Lack of integrity validation mechanisms."
                }
            ],
            "Potential Impact": "Data integrity issues and misleading energy usage information.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "sensor",
                "physical access",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Security Software Discovery",
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1063) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\n\n### Windows\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.\n\n### Mac\n\nIt's becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.",
                "id": "attack-pattern--241814ae-de3f-4656-b49e-f9a80764d4b7",
                "technique_id": "T1063"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of the MQTT WiFi relay to execute malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "The relay does not use secure boot or signed firmware updates.",
                    "Role": "Device Manufacturer",
                    "Condition": "Insecure firmware update mechanisms."
                },
                {
                    "Assumption": "The attacker can access the relay over the network.",
                    "Role": "Attacker",
                    "Condition": "Network vulnerabilities or inadequate network segmentation."
                },
                {
                    "Assumption": "The device firmware lacks methods to validate integrity.",
                    "Role": "System Admin",
                    "Condition": "Absence of integrity checks during firmware operations."
                }
            ],
            "Potential Impact": "Unauthorized control over home automation devices.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "mqtt",
                "network"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data packets in transit between the MQTT broker and clients.",
            "Assumptions": [
                {
                    "Assumption": "Data packets are not encrypted during transmission.",
                    "Role": "Network Admin",
                    "Condition": "Lack of encryption standards."
                },
                {
                    "Assumption": "The attacker has access to the network path between clients and the broker.",
                    "Role": "Attacker",
                    "Condition": "Network access with packet interception capabilities."
                },
                {
                    "Assumption": "There is no integrity checking mechanism for MQTT messages.",
                    "Role": "System Admin",
                    "Condition": "Weak or nonexistent data validation."
                }
            ],
            "Potential Impact": "Compromised data integrity and unauthorized actions based on modified data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "mqtt",
                "data packets",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending specific commands to an MQTT relay, disputing responsibility.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log comprehensive records of actions performed over MQTT.",
                    "Role": "System Admin",
                    "Condition": "Inadequate logging mechanisms."
                },
                {
                    "Assumption": "There is no strong non-repudiation mechanism in place.",
                    "Role": "System Admin",
                    "Condition": "Absence of verification methods for actions."
                },
                {
                    "Assumption": "User authentication lacks robust identity verification.",
                    "Role": "System Admin",
                    "Condition": "Weak authentication methods."
                }
            ],
            "Potential Impact": "Difficulty in verifying legitimate user actions, potential for abuse and dispute.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "mqtt",
                "logging",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker inserts log entries in the database to cover malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Database access is not sufficiently restricted.",
                    "Role": "Database Admin",
                    "Condition": "Weak access control policies."
                },
                {
                    "Assumption": "There are no robust integrity checks for log entries.",
                    "Role": "System Admin",
                    "Condition": "Inadequate log validation mechanisms."
                },
                {
                    "Assumption": "The system lacks continuous monitoring and anomaly detection.",
                    "Role": "Security Team",
                    "Condition": "Absence of real-time monitoring tools."
                }
            ],
            "Potential Impact": "Compromised audit trail, difficulty in incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "database",
                "tampering",
                "logging"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user claims unauthorized action was taken even though their credentials were used.",
            "Assumptions": [
                {
                    "Assumption": "The system does not have multi-factor authentication (MFA) enabled.",
                    "Role": "System Admin",
                    "Condition": "Non-implementation of MFA."
                },
                {
                    "Assumption": "User credential verification does not record specific authentication attempts.",
                    "Role": "System Admin",
                    "Condition": "Lack of detailed authentication logs."
                },
                {
                    "Assumption": "There is no behavioral analysis to detect unusual user activities.",
                    "Role": "Security Team",
                    "Condition": "Absence of UBA tools."
                }
            ],
            "Potential Impact": "Challenges in proving user accountability, increased risk of unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "authentication",
                "user behavior analysis",
                "logging"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data transmitted via MQTT is intercepted by an unauthorized party.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communications are not encrypted.",
                    "Role": "Network Admin",
                    "Condition": "Use of plaintext transmission."
                },
                {
                    "Assumption": "The attacker has the ability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access with packet sniffing tools."
                },
                {
                    "Assumption": "There are no security measures in place to detect eavesdropping.",
                    "Role": "System Admin",
                    "Condition": "Lack of network monitoring."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "eavesdropping",
                "mqtt",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the EmonCMS database and extracts user data.",
            "Assumptions": [
                {
                    "Assumption": "Database credentials are insufficiently protected.",
                    "Role": "Database Admin",
                    "Condition": "Weak credential management."
                },
                {
                    "Assumption": "Access controls are not stringent for database connections.",
                    "Role": "System Admin",
                    "Condition": "Inadequate access control policies."
                },
                {
                    "Assumption": "No encryption of sensitive data stored in the database.",
                    "Role": "System Admin",
                    "Condition": "Lack of database encryption."
                }
            ],
            "Potential Impact": "Sensitive user information is compromised.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database",
                "unauthorized access",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the EmonCMS Web Application to perform SQL Injection and access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The application has vulnerabilities susceptible to SQL Injection.",
                    "Role": "Developer",
                    "Condition": "Poor input validation in code."
                },
                {
                    "Assumption": "The necessary patches for known vulnerabilities are not applied.",
                    "Role": "System Admin",
                    "Condition": "Lack of regular updates and patch management."
                },
                {
                    "Assumption": "Web Application Firewall (WAF) is either not deployed or misconfigured.",
                    "Role": "Security Team",
                    "Condition": "Absence or ineffective WAF implementation."
                }
            ],
            "Potential Impact": "Exposure of sensitive user data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "sql injection",
                "web application",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits buffer overflow vulnerabilities in the MySQL server to crash the service.",
            "Assumptions": [
                {
                    "Assumption": "The server software is outdated and has known buffer overflow vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Neglect of patch management."
                },
                {
                    "Assumption": "The attacker has network access to the MySQL service.",
                    "Role": "Attacker",
                    "Condition": "Unrestricted network access."
                },
                {
                    "Assumption": "There is a lack of monitoring mechanisms for unusual MySQL service behavior.",
                    "Role": "Security Team",
                    "Condition": "Inadequate monitoring."
                }
            ],
            "Potential Impact": "Loss of database availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "buffer overflow",
                "mysql",
                "crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malformed payload sent to the MQTT Broker causes it to crash, disrupting device communications.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT Broker has vulnerabilities allowing malformed payloads to cause crashes.",
                    "Role": "Developer",
                    "Condition": "Coding issues or vulnerabilities."
                },
                {
                    "Assumption": "No input validation or sanitation is in place for incoming MQTT messages.",
                    "Role": "Network Admin",
                    "Condition": "Lack of input validation."
                },
                {
                    "Assumption": "There is no resiliency or recovery mechanism in place for the MQTT Broker.",
                    "Role": "System Admin",
                    "Condition": "Absence of auto-recovery mechanisms."
                }
            ],
            "Potential Impact": "Temporary loss of communication between devices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "mqtt",
                "malformed payload",
                "crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker initiates a large-scale DDoS attack on the EmonCMS Web Application, making it unavailable to users.",
            "Assumptions": [
                {
                    "Assumption": "The application is accessible over the internet.",
                    "Role": "System Admin",
                    "Condition": "Internet-facing application."
                },
                {
                    "Assumption": "No DDoS mitigation strategies (e.g., rate limiting, WAF) are in place.",
                    "Role": "Security Team",
                    "Condition": "Lack of DDoS protections."
                },
                {
                    "Assumption": "The attacker has access to a botnet to launch the attack.",
                    "Role": "Attacker",
                    "Condition": "Availability of botnet resources."
                }
            ],
            "Potential Impact": "Web application downtime and loss of service availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "ddos",
                "web application",
                "botnet"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker finds and exploits a vulnerability in the EmonCMS application to gain admin-level access.",
            "Assumptions": [
                {
                    "Assumption": "The EmonCMS application has unpatched security vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "Neglect of patch management and security practices."
                },
                {
                    "Assumption": "The attacker has knowledge of the application architecture and coding practices.",
                    "Role": "Attacker",
                    "Condition": "Insufficient obfuscation and security controls."
                },
                {
                    "Assumption": "The application's privilege model is prone to escalation issues.",
                    "Role": "System Admin",
                    "Condition": "Weak privilege management."
                }
            ],
            "Potential Impact": "Unauthorized control and manipulation of the application.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "application vulnerability",
                "admin access",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a zero-day exploit in the underlying OS of emonPi or emonBase to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "The operating system running on the devices is susceptible to zero-day exploits.",
                    "Role": "System Admin",
                    "Condition": "Use of outdated or vulnerable OS versions."
                },
                {
                    "Assumption": "There is lack of regular security auditing and vulnerability scanning.",
                    "Role": "Security Team",
                    "Condition": "Inadequate security practices."
                },
                {
                    "Assumption": "The attacker has substantial technical knowledge and resources.",
                    "Role": "Attacker",
                    "Condition": "Advanced skillset and resources."
                }
            ],
            "Potential Impact": "Full control over the affected devices.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "zero-day exploit",
                "root access",
                "operating system"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
                "id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                "technique_id": "T1014"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker with regular user access exploits vulnerabilities in the MySQL server to gain superuser privileges.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL server has known unpatched vulnerabilities.",
                    "Role": "Database Admin",
                    "Condition": "Non-updated MySQL instances."
                },
                {
                    "Assumption": "The user roles are not properly segregated, allowing access to sensitive operations.",
                    "Role": "System Admin",
                    "Condition": "Weak user role management."
                },
                {
                    "Assumption": "The attacker has sufficient knowledge of SQL and MySQL server internals.",
                    "Role": "Attacker",
                    "Condition": "High technical expertise."
                }
            ],
            "Potential Impact": "Compromise of the database integrity and unauthorized data manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "mysql",
                "superuser access",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "23",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate emonTx module to inject falsified power consumption data.",
            "Assumptions": [
                {
                    "Assumption": "The system relies on MQTT for communication without proper authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Current configuration and setup of MQTT protocol."
                },
                {
                    "Assumption": "Lack of SSL/TLS for MQTT communication to verify device identities.",
                    "Role": "Network Engineer",
                    "Condition": "Existing network setup does not enforce encrypted communications."
                }
            ],
            "Potential Impact": "Unauthorized manipulation of energy consumption data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "MQTT",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker pretends to be a legitimate user accessing the EmonCMS Web Application to gain control over home automation devices.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no multi-factor authentication in place.",
                    "Role": "User",
                    "Condition": "Inability or unwillingness to implement multi-factor authentication."
                },
                {
                    "Assumption": "Possibility of credential theft via phishing or other means.",
                    "Role": "User",
                    "Condition": "Users are susceptible to phishing attacks."
                }
            ],
            "Potential Impact": "Unauthorized access to home automation controls.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "web application",
                "credential theft",
                "phishing",
                "access"
            ],
            "mitre_technique": {
                "name": "Shared Modules",
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., [Native API](https://attack.mitre.org/techniques/T1106)).\n\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\n\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in `dlfcn.h` in functions such as `dlopen` and `dlsym`. Although macOS can execute `.so` files, common practice uses `.dylib` files.(Citation: Apple Dev Dynamic Libraries)(Citation: Linux Shared Libraries)(Citation: RotaJakiro 2021 netlab360 analysis)(Citation: Unit42 OceanLotus 2017)\n\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in `NTDLL.dll` and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like `LoadLibrary` at run time.(Citation: Microsoft DLL)",
                "id": "attack-pattern--0a5231ec-41af-4a35-83d0-6bdf11f28c65",
                "technique_id": "T1129"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker hijacks an legitimate emonPi and sends falsified power production data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not signed or verified.",
                    "Role": "Developer",
                    "Condition": "Current implementation of MQTT communication."
                },
                {
                    "Assumption": "Lack of regular firmware updates for emonPi.",
                    "Role": "Device Management",
                    "Condition": "Failure to keep firmware updated."
                }
            ],
            "Potential Impact": "Inaccurate tracking of power production, leading to potential financial losses.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "MQTT",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters MQTT messages between the emonPi and MQTT Broker.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communication is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Network configuration without SSL/TLS."
                },
                {
                    "Assumption": "No integrity checks for data packets.",
                    "Role": "Developer",
                    "Condition": "Failure to implement data integrity verification."
                }
            ],
            "Potential Impact": "Corruption and manipulation of energy monitoring data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MQTT",
                "network",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider with access to the emonBase device modifies system firmware to perform malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Physical security controls are weak or non-existent.",
                    "Role": "Physical Security Personnel",
                    "Condition": "Inadequate physical security measures."
                },
                {
                    "Assumption": "System firmware is not signed or verified upon update.",
                    "Role": "Developer",
                    "Condition": "Lack of secure boot and trusted firmware modules."
                }
            ],
            "Potential Impact": "Operational disruption and potential unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "insider threat",
                "device"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a buffer overflow vulnerability in the MySQL database to corrupt or delete stored data.",
            "Assumptions": [
                {
                    "Assumption": "MySQL is not updated to the latest secure version.",
                    "Role": "Database Administrator",
                    "Condition": "Outdated MySQL version with known vulnerabilities."
                },
                {
                    "Assumption": "No input validation on data interacting with MySQL.",
                    "Role": "Developer",
                    "Condition": "Insufficient input validation and sanitization."
                }
            ],
            "Potential Impact": "Loss of integrity and availability of critical data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MySQL",
                "buffer overflow",
                "database"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious user denies sending or altering commands through the WiFi MQTT Relay.",
            "Assumptions": [
                {
                    "Assumption": "Logging and monitoring mechanisms are not implemented.",
                    "Role": "System Administrator",
                    "Condition": "Lack of sufficient logging and monitoring."
                },
                {
                    "Assumption": "No non-repudiation controls in place for command execution.",
                    "Role": "Developer",
                    "Condition": "Design decision omitting non-repudiation mechanisms."
                }
            ],
            "Potential Impact": "Difficulty in tracking and attributing malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "MQTT",
                "command execution"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies accessing the EmonCMS Web Application after unauthorized actions are detected.",
            "Assumptions": [
                {
                    "Assumption": "Lack of audit trails and user activity logs.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient logging practices."
                },
                {
                    "Assumption": "No multi-factor authentication is in place.",
                    "Role": "System Designer",
                    "Condition": "MFA not implemented for web application."
                }
            ],
            "Potential Impact": "Inability to hold users accountable for their actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "web application",
                "auditing",
                "user activity"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates temperature readings from the emonTh module and later denies doing so.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted communication between emonTh and emonBase.",
                    "Role": "Network Engineer",
                    "Condition": "MQTT messages are sent in clear text."
                },
                {
                    "Assumption": "Lack of digital signatures for message integrity.",
                    "Role": "Developer",
                    "Condition": "System does not implement message signing."
                }
            ],
            "Potential Impact": "Challenge in attributing malicious actions to the attacker.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "MQTT",
                "sensor data",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts MQTT messages to read sensitive data sent between IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communication is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "No SSL/TLS used for MQTT."
                },
                {
                    "Assumption": "Lack of network segmentation.",
                    "Role": "Network Administrator",
                    "Condition": "Improper network design not separating critical data flows."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive energy consumption data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MQTT",
                "network",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A vulnerability in the EmonCMS Web Application exposes user data to unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in the web application due to poor coding practices.",
                    "Role": "Developer",
                    "Condition": "No secure coding practices followed."
                },
                {
                    "Assumption": "No regular security assessments performed.",
                    "Role": "Security Analyst",
                    "Condition": "Infrequent security testing and code reviews."
                }
            ],
            "Potential Impact": "Leakage of personal and energy usage data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "web application",
                "vulnerability",
                "data leak"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to the MySQL database containing sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Weak database authentication mechanisms.",
                    "Role": "Database Administrator",
                    "Condition": "Insecure DBA passwords or lack of password policies."
                },
                {
                    "Assumption": "No database encryption in place.",
                    "Role": "Data Engineer",
                    "Condition": "Stored data is not encrypted."
                }
            ],
            "Potential Impact": "Exposure of sensitive user and energy consumption data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database",
                "authentication",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a MySQL vulnerability causing a complete system crash.",
            "Assumptions": [
                {
                    "Assumption": "MySQL service is not updated with security patches.",
                    "Role": "Database Administrator",
                    "Condition": "Neglecting routine patch management."
                },
                {
                    "Assumption": "High availability mechanisms are not implemented.",
                    "Role": "System Architect",
                    "Condition": "No redundancy or failover systems in place."
                }
            ],
            "Potential Impact": "Complete denial of service for the OEM system.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "SQL injection",
                "database",
                "system crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends excessive MQTT messages, overwhelming the MQTT Broker.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting or throttling mechanisms.",
                    "Role": "Developer",
                    "Condition": "Lack of protective measures against flooding."
                },
                {
                    "Assumption": "Insufficient monitoring of MQTT traffic.",
                    "Role": "Network Administrator",
                    "Condition": "No traffic analysis or anomaly detection."
                }
            ],
            "Potential Impact": "Disruption of communication between IoT devices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "flooding",
                "message broker"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malware attack cripples the MySQL server causing repeated crashes.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate anti-malware protections.",
                    "Role": "Security Engineer",
                    "Condition": "No endpoint protection or malware scanning."
                },
                {
                    "Assumption": "Lack of network segmentation.",
                    "Role": "Network Administrator",
                    "Condition": "MySQL server is openly accessible."
                }
            ],
            "Potential Impact": "Reduced availability of critical services and data.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "database",
                "server crash"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A low-privileged attacker exploits a MySQL vulnerability to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Outdated MySQL with known vulnerabilities.",
                    "Role": "Database Administrator",
                    "Condition": "Irregular software updates and patches."
                },
                {
                    "Assumption": "Weak database access controls.",
                    "Role": "Security Architect",
                    "Condition": "Inadequate access control policies."
                }
            ],
            "Potential Impact": "Unauthorized administrative access to database and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "SQL injection",
                "database",
                "access control"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a vulnerability in the EmonCMS Web Application to execute arbitrary code.",
            "Assumptions": [
                {
                    "Assumption": "Web application vulnerabilities due to improper coding.",
                    "Role": "Developer",
                    "Condition": "Web application lacks proper security measures."
                },
                {
                    "Assumption": "Inadequate protection against code injection attacks.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of security mechanisms."
                }
            ],
            "Potential Impact": "Execution of unauthorized commands, leading to potential system compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "code injection",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Reflective Code Loading",
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).\n\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",
                "id": "attack-pattern--4933e63b-9b77-476e-ab29-761bc5b7d15a",
                "technique_id": "T1620"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with basic access exploits application vulnerabilities to access restricted data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient segregation of duties within the application.",
                    "Role": "System Administrator",
                    "Condition": "No strict access control measures."
                },
                {
                    "Assumption": "No regular security audits and assessments.",
                    "Role": "Security Auditor",
                    "Condition": "Lack of continuous security testing."
                }
            ],
            "Potential Impact": "Unauthorized access and potential misuse of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "access control",
                "data access"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "24",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of an authorized user to gain unauthorized access to the OEM system.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks strong authentication mechanisms, such as multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "When only basic authentication methods are in place."
                },
                {
                    "Assumption": "Attackers can intercept or guess user credentials.",
                    "Role": "Attacker",
                    "Condition": "When users use weak passwords or there is a lack of encryption."
                }
            ],
            "Potential Impact": "Unauthorized access leading to data breaches and control over home automation devices.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "user credentials",
                "authentication",
                "identity theft"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an MQTT client to send malicious commands to IoT devices within the home automation system.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT protocol does not enforce client authentication.",
                    "Role": "System Developer",
                    "Condition": "When the implementation lacks necessary authentication checks."
                },
                {
                    "Assumption": "Network traffic is not encrypted, allowing interception.",
                    "Role": "Attacker",
                    "Condition": "When secure protocols like TLS are not used."
                }
            ],
            "Potential Impact": "Disruption of home automation systems and potential physical damage to devices.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "MQTT",
                "IoT devices",
                "network traffic"
            ],
            "mitre_technique": {
                "name": "Protocol Impersonation",
                "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",
                "id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
                "technique_id": "T1001.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could masquerade as an emonPi or emonBase device to inject false data into the OEM system.",
            "Assumptions": [
                {
                    "Assumption": "EmonPi/emonBase devices do not have mutual authentication mechanisms.",
                    "Role": "System Architect",
                    "Condition": "When device-to-device communication is not secured with mutual TLS or similar protocols."
                },
                {
                    "Assumption": "The attacker has access to the same network as the target device.",
                    "Role": "Attacker",
                    "Condition": "When network security is insufficient, allowing easy access."
                }
            ],
            "Potential Impact": "Corruption of energy monitoring data and misleading insights for the user.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device masquerading",
                "false data injection",
                "network access"
            ],
            "mitre_technique": {
                "name": "Network Trust Dependencies",
                "description": "Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: Pentesting AD Forests) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                "id": "attack-pattern--36aa137f-5166-41f8-b2f0-a4cfa1b4133e",
                "technique_id": "T1590.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the data stored in the MySQL database used by the emonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The database is not adequately protected by strong access controls.",
                    "Role": "Database Administrator",
                    "Condition": "When default or weak database credentials are used."
                },
                {
                    "Assumption": "No intrusion detection system (IDS) is in place.",
                    "Role": "System Administrator",
                    "Condition": "When the system lacks monitoring and alerting mechanisms."
                }
            ],
            "Potential Impact": "Data integrity compromised, leading to incorrect energy usage reports and insights.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data modification",
                "MySQL",
                "database security"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of an emonTx module to report incorrect power consumption readings.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not authenticated or verified.",
                    "Role": "Firmware Developer",
                    "Condition": "When update mechanisms lack integrity checks."
                },
                {
                    "Assumption": "Physical security of the device is inadequate.",
                    "Role": "User",
                    "Condition": "When devices are easily accessible by unauthorized individuals."
                }
            ],
            "Potential Impact": "Compromised data integrity and misinformed energy usage decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware modification",
                "power consumption",
                "IoT security"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters MQTT messages being transmitted between devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "System Architect",
                    "Condition": "When using MQTT without SSL/TLS."
                },
                {
                    "Assumption": "Network lacks proper segmentation and security controls.",
                    "Role": "Network Engineer",
                    "Condition": "When all devices communicate over the same unsecured network."
                }
            ],
            "Potential Impact": "Disruption of device communications and inaccurate data reporting.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MQTT",
                "message interception",
                "data alteration"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending MQTT messages to the broker, raising doubts about transaction authenticity.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not log message metadata.",
                    "Role": "System Administrator",
                    "Condition": "When logging mechanisms are disabled or not detailed."
                },
                {
                    "Assumption": "Lack of non-repudiation mechanisms in communication.",
                    "Role": "System Architect",
                    "Condition": "When messages are not cryptographically signed."
                }
            ],
            "Potential Impact": "Loss of transaction integrity and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "MQTT",
                "message denial",
                "transaction authenticity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny actions performed through the EmonCMS web application, such as device control or data deletion.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks detailed audit logs.",
                    "Role": "System Designer",
                    "Condition": "When user actions are not logged comprehensively."
                },
                {
                    "Assumption": "No mechanism for digital signatures on critical actions.",
                    "Role": "Application Developer",
                    "Condition": "When actions are not verified with user credentials."
                }
            ],
            "Potential Impact": "Difficulty in accountability and forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "web application",
                "user actions",
                "audit logs"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes or modifies the system logs to cover their tracks.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not protected with adequate permissions.",
                    "Role": "System Administrator",
                    "Condition": "When log files are accessible to unauthorized users."
                },
                {
                    "Assumption": "No backup mechanism for log files.",
                    "Role": "Network Admin",
                    "Condition": "When logs are not regularly backed up and stored securely."
                }
            ],
            "Potential Impact": "Obfuscation of attack vectors and reduced ability to perform incident analysis.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "audit trail",
                "system integrity"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive energy usage data intercepted due to unencrypted MQTT communication.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages lack encryption.",
                    "Role": "System Architect",
                    "Condition": "When MQTT is used without SSL/TLS."
                },
                {
                    "Assumption": "Attackers have access to the network traffic.",
                    "Role": "Attacker",
                    "Condition": "When network security is insufficient, allowing traffic sniffing."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of household energy data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MQTT",
                "unencrypted communication",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--095a579b-1742-4b09-85fc-30ecc2e4ac10",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the MySQL database containing sensitive user data.",
            "Assumptions": [
                {
                    "Assumption": "Database access controls are weak or misconfigured.",
                    "Role": "Database Administrator",
                    "Condition": "When using default or weak credentials."
                },
                {
                    "Assumption": "The database is internet-facing without adequate protection.",
                    "Role": "Network Admin",
                    "Condition": "When the database server is exposed to external networks."
                }
            ],
            "Potential Impact": "Leakage of sensitive user information and energy usage data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MySQL",
                "database access",
                "user data"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exposure of sensitive system configuration files due to improper permissions.",
            "Assumptions": [
                {
                    "Assumption": "File and directory permissions are not strictly enforced.",
                    "Role": "System Administrator",
                    "Condition": "When improper file permissions are set."
                },
                {
                    "Assumption": "Critical configuration files are not encrypted.",
                    "Role": "System Architect",
                    "Condition": "When sensitive configurations are stored in plaintext."
                }
            ],
            "Potential Impact": "Disclosure of system configurations leading to further exploitation.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "system files",
                "permissions",
                "configuration leak"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the MQTT broker with invalid messages, causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker does not have rate limiting or DoS protection.",
                    "Role": "Network Architect",
                    "Condition": "When basic DoS protections are not implemented."
                },
                {
                    "Assumption": "Network traffic is not monitored for anomalies.",
                    "Role": "Network Admin",
                    "Condition": "When traffic monitoring tools are not deployed."
                }
            ],
            "Potential Impact": "Disruption of messaging services and device communication.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "message flooding",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of MySQL vulnerabilities leading to a server crash.",
            "Assumptions": [
                {
                    "Assumption": "MySQL server runs on outdated or vulnerable versions.",
                    "Role": "System Administrator",
                    "Condition": "When the server is not regularly updated."
                },
                {
                    "Assumption": "No intrusion prevention systems in place.",
                    "Role": "Network Admin",
                    "Condition": "When there are no protections against known exploits."
                }
            ],
            "Potential Impact": "Service outage and loss of database availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MySQL",
                "server crash",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the EmonCMS web application with a distributed denial-of-service (DDoS) attack.",
            "Assumptions": [
                {
                    "Assumption": "The web application is not behind DDoS protection services.",
                    "Role": "Network Architect",
                    "Condition": "When no DDoS mitigation services are used."
                },
                {
                    "Assumption": "The application lacks horizontal scaling capabilities.",
                    "Role": "System Designer",
                    "Condition": "When the system cannot scale to handle increased load."
                }
            ],
            "Potential Impact": "Web application becomes inaccessible, disrupting user access to energy monitoring data.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "EmonCMS",
                "web application"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a buffer overflow vulnerability in the MySQL server to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL server is running a vulnerable version.",
                    "Role": "System Administrator",
                    "Condition": "When updates and patches are not applied."
                },
                {
                    "Assumption": "No proactive vulnerability scanning in place.",
                    "Role": "Security Team",
                    "Condition": "When regular security assessments are not performed."
                }
            ],
            "Potential Impact": "Unauthorized administrative access and control over the database.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "buffer overflow",
                "MySQL",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a firmware vulnerability to gain root access on an emonTx module.",
            "Assumptions": [
                {
                    "Assumption": "Firmware is not regularly updated with security patches.",
                    "Role": "Firmware Engineer",
                    "Condition": "When updates are infrequent and delayed."
                },
                {
                    "Assumption": "Physical access to the device is possible.",
                    "Role": "User",
                    "Condition": "When devices are not securely installed."
                }
            ],
            "Potential Impact": "Full control over the device, allowing manipulation of power consumption data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware vulnerability",
                "root access",
                "IoT device"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on the EmonCMS web application by exploiting a known PHP vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "The web application uses an outdated version of PHP.",
                    "Role": "Web Developer",
                    "Condition": "When application libraries are not updated."
                },
                {
                    "Assumption": "No web application firewall (WAF) in place.",
                    "Role": "Network Admin",
                    "Condition": "When WAF is not deployed to filter malicious requests."
                }
            ],
            "Potential Impact": "Access to higher-level functions and sensitive user data within the web application.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "PHP vulnerability",
                "web application",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "25",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as an authorized IoT device to connect to the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not fully authenticate devices.",
                    "Role": "MQTT broker",
                    "Condition": "Device attempts to connect to broker without strong authentication."
                },
                {
                    "Assumption": "Attacker has network access sufficient to intercept or imitate device communications.",
                    "Role": "Attacker",
                    "Condition": "Attacker is in the same local network or has network access."
                },
                {
                    "Assumption": "Lack of encryption or weak encryption in device communication",
                    "Role": "IoT devices",
                    "Condition": "Devices are using plain text or outdated encryption methods to communicate."
                }
            ],
            "Potential Impact": "Unauthorized device communication, data interception, or manipulation.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "MQTT",
                "IoT",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses stolen credentials to log into the EmonCMS Web Application.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are weak or reused passwords",
                    "Role": "Users",
                    "Condition": "Users create weak or reused passwords."
                },
                {
                    "Assumption": "Attacker has access to a credential database or uses phishing techniques",
                    "Role": "Attacker",
                    "Condition": "Attacker has successfully gathered credentials."
                },
                {
                    "Assumption": "No multi-factor authentication (MFA) is in use",
                    "Role": "System",
                    "Condition": "System does not enforce MFA for sensitive access."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and system control.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credential Access",
                "Phishing",
                "Web Application"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker falsifies device identity to manipulate environmental monitoring data.",
            "Assumptions": [
                {
                    "Assumption": "Minimal device identity verification",
                    "Role": "IoT devices and system",
                    "Condition": "Devices and system do not verify identities strongly."
                },
                {
                    "Assumption": "Attacker intercepts or mimics device communication",
                    "Role": "Attacker",
                    "Condition": "Attacker can monitor or fake device messages."
                },
                {
                    "Assumption": "Lack of end-to-end message integrity checks",
                    "Role": "System",
                    "Condition": "System does not check integrity of messages."
                }
            ],
            "Potential Impact": "Inaccurate environmental condition data reporting and control decisions.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "IoT",
                "Data Manipulation",
                "Device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies MQTT messages in transit to alter device behavior.",
            "Assumptions": [
                {
                    "Assumption": "Messages are not encrypted",
                    "Role": "MQTT broker and clients",
                    "Condition": "Communication happens over plaintext."
                },
                {
                    "Assumption": "Network is accessible to the attacker",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to the same network."
                },
                {
                    "Assumption": "No integrity checks on MQTT messages",
                    "Role": "MQTT system",
                    "Condition": "System does not validate the integrity of messages."
                }
            ],
            "Potential Impact": "Altered device operations, leading to potential safety and operational risks.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Message Injection",
                "MQTT",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to emonPi or emonBase and alters configuration files or data.",
            "Assumptions": [
                {
                    "Assumption": "Weak physical security or default configuration",
                    "Role": "EmonPi/emonBase",
                    "Condition": "Devices have default passwords or weak physical security."
                },
                {
                    "Assumption": "Insider threat or physical access by an unauthorized person",
                    "Role": "Attacker",
                    "Condition": "Attacker is inside the premises or has gained unauthorized physical access."
                },
                {
                    "Assumption": "Lack of regular integrity checks and alerts on critical system files",
                    "Role": "System",
                    "Condition": "System does not monitor file integrity."
                }
            ],
            "Potential Impact": "Unauthorized modifications leading to data corruption or incorrect monitoring/control.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Configuration Files",
                "IoT",
                "Device"
            ],
            "mitre_technique": {
                "name": "System Checks",
                "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \n\nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. Once executed, malware may also use [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) to check if it was saved in a folder or file with unexpected or even analysis-related naming artifacts such as `malware`, `sample`, or `hash`.\n\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \n \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)",
                "id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
                "technique_id": "T1497.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker corrupts the database storing historical energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "Database vulnerabilities such as SQL injection",
                    "Role": "Database",
                    "Condition": "Database does not use secure coding practices."
                },
                {
                    "Assumption": "No regular database backups or monitoring",
                    "Role": "System",
                    "Condition": "System lacks periodic backups and continuous monitoring."
                },
                {
                    "Assumption": "Attacker has credentialed access or exploits a software vulnerability",
                    "Role": "Attacker",
                    "Condition": "Attacker uses valid credentials or exploits database vulnerabilities."
                }
            ],
            "Potential Impact": "Loss of historical data integrity and reliability in reporting.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Database",
                "SQL Injection",
                "Data Corruption"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny initiating certain network actions or commands on IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "Lack of detailed logging or tamper-evident logs",
                    "Role": "System",
                    "Condition": "System does not maintain detailed, tamper-evident logs."
                },
                {
                    "Assumption": "Users have sufficient access to perform actions",
                    "Role": "Users",
                    "Condition": "Users possess the required access privileges."
                },
                {
                    "Assumption": "No third-party verification of actions",
                    "Role": "System",
                    "Condition": "System lacks methods to verify action sources through third parties."
                }
            ],
            "Potential Impact": "Disputes over user actions and potential shifts in accountability.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "IoT",
                "Actions"
            ],
            "mitre_technique": {
                "name": "System Owner/User Discovery",
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
                "technique_id": "T1033"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Admins deny the execution of critical updates or configurations on the central hub (emonPi/emonBase).",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls and logs",
                    "Role": "System",
                    "Condition": "System does not have strict access controls or detailed logs."
                },
                {
                    "Assumption": "Admin privileges are necessary to perform changes",
                    "Role": "Admins",
                    "Condition": "Admins are responsible for applying changes."
                },
                {
                    "Assumption": "No alerts for critical system changes",
                    "Role": "System",
                    "Condition": "System lacks real-time alerts for critical updates or configuration changes."
                }
            ],
            "Potential Impact": "Unverifiable critical updates, leading to potential security breaches or misconfigurations.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Administrative Actions",
                "Logging",
                "Update"
            ],
            "mitre_technique": {
                "name": "Source",
                "description": "**This technique has been deprecated and should no longer be used.**\n\nThe <code>source</code> command loads functions into the current shell or executes files in the current context. This built-in command can be run in two different ways <code>source /path/to/filename [arguments]</code> or <code>.**This technique has been deprecated and should no longer be used.** /path/to/filename [arguments]</code>. Take note of the space after the \".\". Without a space, a new shell is created that runs the program instead of running the program within the current context. This is often used to make certain features or functions available to a shell or to update a specific shell's environment.(Citation: Source Manual)\n\nAdversaries can abuse this functionality to execute programs. The file executed with this technique does not need to be marked executable beforehand.",
                "id": "attack-pattern--45d84c8b-c1e2-474d-a14d-69b5de0a2bc0",
                "technique_id": "T1153"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Database changes do not have an audit trail, allowing malicious actors to deny making changes.",
            "Assumptions": [
                {
                    "Assumption": "No database level auditing enabled",
                    "Role": "Database",
                    "Condition": "Database does not maintain an audit log of changes."
                },
                {
                    "Assumption": "Access control gaps for database modifications",
                    "Role": "System",
                    "Condition": "System lacks strict access controls for database modifications."
                },
                {
                    "Assumption": "Lack of third-party verification mechanisms",
                    "Role": "System",
                    "Condition": "System does not leverage external audit mechanisms."
                }
            ],
            "Potential Impact": "Inability to track harmful changes leading to data corruption or malicious inserts.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Database",
                "Logging",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data transmitted over MQTT is intercepted due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are in plaintext",
                    "Role": "MQTT broker and clients",
                    "Condition": "Messages are not encrypted."
                },
                {
                    "Assumption": "Attacker has access to the network",
                    "Role": "Attacker",
                    "Condition": "Attacker can eavesdrop on the network traffic."
                },
                {
                    "Assumption": "Lack of message authentication or integrity checks",
                    "Role": "System",
                    "Condition": "System does not verify messages."
                }
            ],
            "Potential Impact": "Exposure of sensitive data such as energy usage or environmental conditions.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "MQTT",
                "Network",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensitive data stored in the EmonCMS web application due to poor access controls.",
            "Assumptions": [
                {
                    "Assumption": "Weak or non-existent access controls",
                    "Role": "Web application",
                    "Condition": "Lack of proper access control mechanisms."
                },
                {
                    "Assumption": "Insufficient authentication measures",
                    "Role": "System",
                    "Condition": "System does not implement strong authentication measures."
                },
                {
                    "Assumption": "Web application vulnerabilities",
                    "Role": "Web application",
                    "Condition": "Vulnerabilities such as SQL injection are present and exploitable."
                }
            ],
            "Potential Impact": "Exposure of user-specific energy consumption and other personal data.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Web Application",
                "Access Control",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Database breach exposes sensitive historical energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "Database has known vulnerabilities",
                    "Role": "Database",
                    "Condition": "Database software has known security flaws."
                },
                {
                    "Assumption": "No encryption of sensitive data at rest",
                    "Role": "System",
                    "Condition": "Sensitive data stored without encryption."
                },
                {
                    "Assumption": "Network/network perimeter lacks adequate protection",
                    "Role": "System",
                    "Condition": "System lacks network perimeter security."
                }
            ],
            "Potential Impact": "Leakage of historical data, potentially affecting user privacy and competitive insights.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Database",
                "Sensitive Data",
                "Network"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits buffer overflow vulnerabilities in MySQL to crash the system.",
            "Assumptions": [
                {
                    "Assumption": "Database systems running outdated or vulnerable versions",
                    "Role": "Database",
                    "Condition": "System uses vulnerable versions of MySQL."
                },
                {
                    "Assumption": "Attacker has access to the database network",
                    "Role": "Attacker",
                    "Condition": "Network access to the database is compromised."
                },
                {
                    "Assumption": "Lack of defensive coding and security patches",
                    "Role": "System",
                    "Condition": "System lacks necessary updates and patches."
                }
            ],
            "Potential Impact": "Loss of database availability causing disruption in data access and system functionality.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Buffer Overflow",
                "Database",
                "MySQL"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the MQTT broker with excessive connection requests causing service unavailability.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker has no rate limiting",
                    "Role": "System",
                    "Condition": "System does not implement rate limiting."
                },
                {
                    "Assumption": "Network is exposed to external traffic",
                    "Role": "System",
                    "Condition": "MQTT broker is network-facing."
                },
                {
                    "Assumption": "Insufficient monitoring and detection",
                    "Role": "System",
                    "Condition": "System lacks monitoring for unusual traffic patterns."
                }
            ],
            "Potential Impact": "Service disruption and unavailability of MQTT broker impacting communication between IoT devices.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "MQTT",
                "Flood Attack",
                "Service Unavailability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits SSL/TLS vulnerabilities in MySQL to crash the database during a handshake.",
            "Assumptions": [
                {
                    "Assumption": "Outdated SSL/TLS library versions",
                    "Role": "Database",
                    "Condition": "MySQL uses outdated SSL/TLS versions."
                },
                {
                    "Assumption": "Attacker can initiate SSL/TLS connections",
                    "Role": "Attacker",
                    "Condition": "Network access to database over SSL/TLS."
                },
                {
                    "Assumption": "No mitigations for known SSL/TLS issues",
                    "Role": "System",
                    "Condition": "System lacks mitigations for known SSL/TLS issues."
                }
            ],
            "Potential Impact": "Database crash resulting in temporary unavailability and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "SSL/TLS",
                "Database",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits SQL injection vulnerabilities to gain administrative access in EmonCMS.",
            "Assumptions": [
                {
                    "Assumption": "Web application has SQL injection vulnerabilities",
                    "Role": "Web application",
                    "Condition": "Web application contains SQL vulnerabilities."
                },
                {
                    "Assumption": "Attacker identifies and executes SQL injection",
                    "Role": "Attacker",
                    "Condition": "Attacker can craft and inject malicious SQL queries."
                },
                {
                    "Assumption": "Lack of input validation and sanitization",
                    "Role": "System",
                    "Condition": "System does not validate or sanitize inputs securely."
                }
            ],
            "Potential Impact": "Unauthorized access to admin functionalities, potentially altering system configurations and data.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "SQL Injection",
                "Web Application",
                "Administrative Access"
            ],
            "mitre_technique": {
                "name": "Cloud API",
                "description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",
                "id": "attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf",
                "technique_id": "T1059.009"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a buffer overflow in MySQL to execute arbitrary code and gain system-level privileges.",
            "Assumptions": [
                {
                    "Assumption": "MySQL versions contain known buffer overflow vulnerabilities",
                    "Role": "Database",
                    "Condition": "MySQL versions deployed have buffer overflow vulnerabilities."
                },
                {
                    "Assumption": "Attacker can interact with the MySQL server",
                    "Role": "Attacker",
                    "Condition": "Network access to MySQL server."
                },
                {
                    "Assumption": "Lack of application hardening and protection mechanisms",
                    "Role": "System",
                    "Condition": "System lacks mitigations like WAF or hardening."
                }
            ],
            "Potential Impact": "System compromise with potential to gain root or system-level privileges.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Buffer Overflow",
                "Database",
                "Arbitrary Code Execution"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a software vulnerability in the emonBase to escalate to root privileges.",
            "Assumptions": [
                {
                    "Assumption": "Device software has exploitable vulnerabilities",
                    "Role": "EmonBase",
                    "Condition": "Devices run software with known vulnerabilities."
                },
                {
                    "Assumption": "Attacker has authenticated access to the system",
                    "Role": "Attacker",
                    "Condition": "Attacker has initial access to the system."
                },
                {
                    "Assumption": "Lack of secure coding practices and patches",
                    "Role": "System",
                    "Condition": "System lacks secure coding and update mechanisms."
                }
            ],
            "Potential Impact": "Full control over the device, compromising the IoT infrastructure.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "IoT",
                "Exploitable Vulnerability",
                "Root Access"
            ],
            "mitre_technique": {
                "name": "Securityd Memory",
                "description": "In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords. (Citation: OS X Keychain) (Citation: External to DA, the OS X Way) Apple\u2019s securityd utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an attacker need only iterate over the other values to unlock the final password. (Citation: OS X Keychain)\n\nIf an adversary can obtain root access (allowing them to read securityd\u2019s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user\u2019s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc. (Citation: OS X Keychain) (Citation: OSX Keydnap malware)",
                "id": "attack-pattern--2715c335-1bf2-4efe-9f18-0691317ff83b",
                "technique_id": "T1167"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "26",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof device identities to send false data to the OEM system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to the IoT devices or the MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Network access is available."
                },
                {
                    "Assumption": "There are no strong authentication mechanisms in place for device identities.",
                    "Role": "System Admin",
                    "Condition": "Authentication is weak or nonexistent."
                },
                {
                    "Assumption": "The IoT devices or MQTT broker do not validate the source of data correctly.",
                    "Role": "IoT Device / MQTT Broker",
                    "Condition": "Validated incorrectly."
                }
            ],
            "Potential Impact": "Unauthorized access could lead to false data injection, affecting data integrity and control decisions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "injection",
                "MQTT"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An malicious external actor disguises as a legitimate user to gain access to the EmonCMS Web Application.",
            "Assumptions": [
                {
                    "Assumption": "The attacker understands the web application\u2019s authentication mechanism.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of the application's structure."
                },
                {
                    "Assumption": "No multi-factor authentication is in place.",
                    "Role": "System Admin",
                    "Condition": "Authentication is single-factor."
                },
                {
                    "Assumption": "User credentials can be phished or otherwise obtained.",
                    "Role": "User",
                    "Condition": "Credentials are vulnerable to theft."
                }
            ],
            "Potential Impact": "Unauthorized access to user data and control over home automation systems, impacting data confidentiality and access control.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "web application",
                "credential theft",
                "access control"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the MQTT broker to intercept or alter communications between IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is in a position to intercept communication between devices and the broker.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "The MQTT broker does not use encryption or encryption can be bypassed.",
                    "Role": "MQTT Broker",
                    "Condition": "Weak or no encryption."
                },
                {
                    "Assumption": "Devices and broker do not authenticate each other robustly.",
                    "Role": "IoT Device / MQTT Broker",
                    "Condition": "Weak mutual authentication."
                }
            ],
            "Potential Impact": "Interception and tampering of data, leading to loss of integrity and availability of the data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "MQTT",
                "network",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data stored in the emonPi or emonBase stations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the emonPi or emonBase.",
                    "Role": "Attacker",
                    "Condition": "Access to devices either physically or over the network."
                },
                {
                    "Assumption": "There are no or weak integrity checks for the data stored on these devices.",
                    "Role": "System Admin",
                    "Condition": "Integrity checks are not enforced."
                },
                {
                    "Assumption": "Authentication or authorization mechanisms on these devices are weak or bypassable.",
                    "Role": "IoT Device",
                    "Condition": "Weak or inadequate security controls."
                }
            ],
            "Potential Impact": "Loss of data integrity, leading to incorrect monitoring and control decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "device",
                "data integrity",
                "access control"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A malicious actor intercepts and modifies MQTT messages in transit.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept communications between the MQTT clients and broker.",
                    "Role": "Attacker",
                    "Condition": "Network access in-between clients and broker."
                },
                {
                    "Assumption": "Messages are not encrypted or use weak encryption susceptible to attacks.",
                    "Role": "MQTT Communications",
                    "Condition": "Weak or no encryption."
                },
                {
                    "Assumption": "The MQTT protocol implementation does not have checks to ensure message integrity.",
                    "Role": "MQTT Clients/Broker",
                    "Condition": "Insufficient integrity verification."
                }
            ],
            "Potential Impact": "Corruption of data in transit, leading to falsified energy usage data and control commands.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MQTT",
                "network",
                "message alteration"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the code of the EmonCMS Web Application.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has gained sufficient privileges to alter the web application's codebase.",
                    "Role": "Attacker",
                    "Condition": "Admin or equivalent access to the server."
                },
                {
                    "Assumption": "There are weak or no code integrity checks for the web application.",
                    "Role": "System Admin",
                    "Condition": "No monitoring or enforcement of code integrity."
                },
                {
                    "Assumption": "The web application server has vulnerabilities that can be exploited.",
                    "Role": "Web Application Server",
                    "Condition": "Presence of exploitable vulnerabilities."
                }
            ],
            "Potential Impact": "Compromise of web application functionality, potentially leading to unauthorized control and data integrity loss.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "web application",
                "code alteration",
                "server"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny initiating actions controlling IoT devices, claiming legitimate activity as malicious.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks proper logging and monitoring of user actions.",
                    "Role": "System Admin",
                    "Condition": "Inadequate logging and monitoring."
                },
                {
                    "Assumption": "Logs are not tamper-evident or securely stored.",
                    "Role": "System Admin",
                    "Condition": "Logs can be altered without detection."
                },
                {
                    "Assumption": "There are no mechanisms to verify legitimate user actions.",
                    "Role": "IoT System",
                    "Condition": "Absence of strong verification methods."
                }
            ],
            "Potential Impact": "Hindered incident response and accountability, affecting system integrity and reliability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "user actions",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates logs to hide unauthorized access or actions taken.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has sufficient privileges to access and modify logs.",
                    "Role": "Attacker",
                    "Condition": "Privileges allowing log access."
                },
                {
                    "Assumption": "Logging mechanisms are weak or non-existent, allowing easy manipulation.",
                    "Role": "System Componen_logging`, ",
                    "Condition": "Insufficient log security."
                },
                {
                    "Assumption": "Logs do not have integrity checks to detect tampering.",
                    "Role": "System Admin",
                    "Condition": "Lack of integrity checks in place."
                }
            ],
            "Potential Impact": "Loss of data integrity and audit trail, affecting forensic capabilities and system trust.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "data integrity",
                "forensics"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A legitimate user denies changes made to device configurations, causing disputes.",
            "Assumptions": [
                {
                    "Assumption": "The system does not record configuration changes reliably.",
                    "Role": "IoT System",
                    "Condition": "Absence of detailed change logs."
                },
                {
                    "Assumption": "Users have privileges to make changes that could be denied later.",
                    "Role": "User",
                    "Condition": "Users have configuration privileges."
                },
                {
                    "Assumption": "Change logs are not protected against tampering.",
                    "Role": "System Admin",
                    "Condition": "Logs can be altered."
                }
            ],
            "Potential Impact": "Challenges in dispute resolution and system integrity, reducing operational reliability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration changes",
                "logging",
                "dispute resolution"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is exposed through unsecured MQTT communication.",
            "Assumptions": [
                {
                    "Assumption": "Data transmitted via MQTT is not encrypted.",
                    "Role": "IoT Communication",
                    "Condition": "No encryption."
                },
                {
                    "Assumption": "The attacker has access to the network over which MQTT messages are transmitted.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "There are no measures to detect or prevent unauthorized access to this data.",
                    "Role": "System Admin",
                    "Condition": "Absence of security controls."
                }
            ],
            "Potential Impact": "Confidentiality of sensitive data is compromised, leading to potential misuse.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MQTT",
                "network",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to logs stored on the emonPi or emonBase.",
            "Assumptions": [
                {
                    "Assumption": "Logs contain sensitive information and are stored without encryption.",
                    "Role": "IoT Device",
                    "Condition": "No encryption on stored logs."
                },
                {
                    "Assumption": "Attacker has physical or remote access to these devices.",
                    "Role": "Attacker",
                    "Condition": "Access to the device."
                },
                {
                    "Assumption": "Insufficient access controls on these devices.",
                    "Role": "System Admin",
                    "Condition": "Lax access control measures."
                }
            ],
            "Potential Impact": "Confidential information is exposed, leading to unauthorized data use.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "logs",
                "device access",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Direct exploitation of a known vulnerability in the MySQL database exposes sensitive energy monitoring data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker finds and exploits a known vulnerability in the MySQL database.",
                    "Role": "Attacker",
                    "Condition": "Unpatched MySQL vulnerability."
                },
                {
                    "Assumption": "MySQL database holds sensitive data without adequate encryption or access control.",
                    "Role": "Database Admin",
                    "Condition": "Lack of strong encryption/access controls."
                },
                {
                    "Assumption": "Security patches and updates are not timely applied.",
                    "Role": "System Admin",
                    "Condition": "Delayed security updates."
                }
            ],
            "Potential Impact": "Sensitive energy usage data is accessible to unauthorized users, compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MySQL",
                "database",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits vulnerabilities in the MySQL server, causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "MySQL server contains unpatched vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Unpatched server."
                },
                {
                    "Assumption": "The attacker has network access to the MySQL database.",
                    "Role": "Attacker",
                    "Condition": "Network access to database."
                },
                {
                    "Assumption": "No mitigations are in place to prevent or detect such attacks.",
                    "Role": "System Admin",
                    "Condition": "Lack of preventive controls."
                }
            ],
            "Potential Impact": "Disruption of data storage and retrieval, impacting system availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MySQL",
                "database",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends a flood of invalid or malformed MQTT messages to the broker, overwhelming it.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can reach the MQTT broker via network access.",
                    "Role": "Attacker",
                    "Condition": "Network access to broker."
                },
                {
                    "Assumption": "The MQTT broker does not adequately handle abnormal message volumes.",
                    "Role": "MQTT Broker",
                    "Condition": "Weak message handling."
                },
                {
                    "Assumption": "The system lacks rate limiting or similar protections.",
                    "Role": "System Admin",
                    "Condition": "No rate limiting in place."
                }
            ],
            "Potential Impact": "MQTT broker becomes unresponsive, affecting communication between IoT devices and disrupting service.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "network",
                "message flooding"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of a buffer overflow vulnerability in the PHP web application causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "The web application runs a vulnerable PHP version.",
                    "Role": "System Admin",
                    "Condition": "Outdated PHP version."
                },
                {
                    "Assumption": "The attacker can interact with the web application.",
                    "Role": "Attacker",
                    "Condition": "Access to web application."
                },
                {
                    "Assumption": "No sufficient input validation or mitigation techniques in place.",
                    "Role": "Web Application",
                    "Condition": "Weak input validation."
                }
            ],
            "Potential Impact": "Web application crash, leading to loss of access and disruption of monitoring and control operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "web application",
                "PHP",
                "buffer overflow"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a MySQL vulnerability to gain admin privileges on the database server.",
            "Assumptions": [
                {
                    "Assumption": "MySQL server is vulnerable and accessible over the network.",
                    "Role": "System Admin",
                    "Condition": "Unpatched, accessible MySQL instance."
                },
                {
                    "Assumption": "The attacker can perform the necessary steps to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Technical capability."
                },
                {
                    "Assumption": "Insufficient monitoring and access control on the database server.",
                    "Role": "System Admin",
                    "Condition": "Weak monitoring/access controls."
                }
            ],
            "Potential Impact": "Attackers gain unauthorized access to sensitive data and manipulate system functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MySQL",
                "database",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker utilizes a buffer overflow in PHP components to execute arbitrary code with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "The web application is running a vulnerable version of PHP.",
                    "Role": "System Admin",
                    "Condition": "Outdated PHP version."
                },
                {
                    "Assumption": "Attacker can send malicious input to trigger the buffer overflow.",
                    "Role": "Attacker",
                    "Condition": "Ability to interact with vulnerable component."
                },
                {
                    "Assumption": "System lacks sufficient exploit mitigation defenses.",
                    "Role": "System Admin",
                    "Condition": "Weak or no mitigation defenses."
                }
            ],
            "Potential Impact": "Execution of arbitrary code as a privileged user, compromising system control and integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "PHP",
                "buffer overflow",
                "arbitrary code execution"
            ],
            "mitre_technique": {
                "name": "Exploitation for Client Execution",
                "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
                "id": "attack-pattern--be2dcee9-a7a7-4e38-afd6-21b31ecc3d63",
                "technique_id": "T1203"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a software flaw in the emonPi or emonBase to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "The device firmware/software contains a known vulnerability.",
                    "Role": "System Admin",
                    "Condition": "Unpatched vulnerability in firmware/software."
                },
                {
                    "Assumption": "Attacker has physical or network access to the device.",
                    "Role": "Attacker",
                    "Condition": "Access to device."
                },
                {
                    "Assumption": "Insufficient access controls and monitoring on the device.",
                    "Role": "System Admin",
                    "Condition": "Weak access control and monitoring policies."
                }
            ],
            "Potential Impact": "Compromise of device integrity and control, granting unauthorized control over the energy monitoring and management system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "IoT device",
                "root access",
                "control"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "27",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs an emonTx device to send false power consumption data to the emonPi base station.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network where the emonTx devices are operating.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker is within range of the IoT devices' communication."
                },
                {
                    "Assumption": "The OEM system does not perform strong device authentication.",
                    "Role": "System",
                    "Condition": "Valid if no secure authentication method is implemented in the OEM system."
                }
            ],
            "Potential Impact": "Corruption or tampering of data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "IoT device",
                "network",
                "data tampering"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the MQTT broker to intercept and manipulate communication between IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can mimic the IP and port of the legitimate MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can perform ARP spoofing or DNS poisoning."
                },
                {
                    "Assumption": "MQTT communication is unencrypted and lacks integrity checks.",
                    "Role": "System",
                    "Condition": "Valid if the MQTT protocol is used without encryption and integrity mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "broker",
                "network communication",
                "MQTT",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker accesses the emonCMS web application by using stolen or guessed user credentials.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to credentials or employs brute force methods to guess passwords.",
                    "Role": "Attacker",
                    "Condition": "Valid if weak passwords or lack of account lockout policies are present."
                },
                {
                    "Assumption": "The OEM system does not have multi-factor authentication enabled.",
                    "Role": "System",
                    "Condition": "Valid if MFA is not implemented for user accounts."
                }
            ],
            "Potential Impact": "Unauthorized access and potential manipulation of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "web application",
                "credential access",
                "account compromise"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious commands via the MQTT Relay to control home appliances.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can communicate with the MQTT Relay using the same MQTT broker.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker gains access to the MQTT broker's network."
                },
                {
                    "Assumption": "Commands sent to the MQTT Relay are not authenticated or validated.",
                    "Role": "System",
                    "Condition": "Valid if the system lacks command authentication or validation mechanisms."
                }
            ],
            "Potential Impact": "Corruption or tampering of data and potential physical damage.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "MQTT",
                "injection",
                "command and control",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a buffer overflow in MySQL to execute arbitrary code on the emonPi base station.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL daemon is running an outdated version vulnerable to buffer overflow.",
                    "Role": "System",
                    "Condition": "Valid if MySQL versions pre-3.23.50 or pre-4.02 are in use."
                },
                {
                    "Assumption": "The attacker can send a crafted 'datadir' parameter to MySQL.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has local or remote access to MySQL."
                }
            ],
            "Potential Impact": "Execution of arbitrary code and potential full system compromise.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "buffer overflow",
                "code execution",
                "MySQL",
                "server"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "SQL injection vulnerability on the EmonCMS web application allows data manipulation and extraction.",
            "Assumptions": [
                {
                    "Assumption": "The web application uses non-parameterized SQL queries.",
                    "Role": "System",
                    "Condition": "Valid if SQL queries are constructed with user input directly."
                },
                {
                    "Assumption": "The attacker can interact with the SQL database via a web interface.",
                    "Role": "Attacker",
                    "Condition": "Valid if web application inputs are not sanitized or validated."
                }
            ],
            "Potential Impact": "Unauthorized data manipulation and disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "SQL injection",
                "web application",
                "data extraction",
                "database"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes or modifies log files on the emonPi base station to cover their tracks.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained elevated privileges to access or modify log files.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker bypasses authentication or exploits vulnerabilities."
                },
                {
                    "Assumption": "Logging mechanisms do not provide tamper-evident storage.",
                    "Role": "System",
                    "Condition": "Valid if logs are stored in non-secure ways and can be altered without detection."
                }
            ],
            "Potential Impact": "Undetected malicious activity due to loss or modification of audit logs.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "evasion",
                "audit logs",
                "file manipulation"
            ],
            "mitre_technique": {
                "name": "Image File Execution Options Injection",
                "description": "Image File Execution Options (IFEO) enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application\u2019s IFEO will be prepended to the application\u2019s name, effectively launching the new process under the debugger (e.g., \u201cC:\\dbg\\ntsd.exe -g  notepad.exe\u201d). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code><executable></code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IEFO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nAn example where the evil.exe process is started when notepad.exe exits: (Citation: Oddvar Moe IFEO APR 2018)\n\n* <code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512</code>\n* <code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1</code>\n* <code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\notepad.exe\" /v MonitorProcess /d \"C:\\temp\\evil.exe\"</code>\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous invocation.\n\nMalware may also use IFEO for Defense Evasion by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",
                "id": "attack-pattern--62166220-e498-410f-a90a-19d4339d4e99",
                "technique_id": "T1183"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Inconsistent timestamps in logs due to improper synchronization, leading to challenges in event correlation.",
            "Assumptions": [
                {
                    "Assumption": "Network Time Protocol (NTP) is not properly configured for all system components.",
                    "Role": "System",
                    "Condition": "Valid if system clocks are not synchronized using NTP."
                },
                {
                    "Assumption": "Logging across devices does not include proper timestamps.",
                    "Role": "System",
                    "Condition": "Valid if devices log events without accurate time settings."
                }
            ],
            "Potential Impact": "Difficulty in forensic analysis and troubleshooting due to inconsistent logging.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "time synchronization",
                "NTP",
                "event correlation"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Lack of non-repudiation controls in MQTT messages makes it difficult to verify the authenticity of commands.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages do not include digital signatures or other verification mechanisms.",
                    "Role": "System",
                    "Condition": "Valid if MQTT communication is not authenticated."
                },
                {
                    "Assumption": "The attacker can inject or alter MQTT messages.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker gains network access to communicate with the MQTT broker."
                }
            ],
            "Potential Impact": "Difficulty in verifying the source and authenticity of MQTT commands.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "MQTT",
                "message verification",
                "digital signatures",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Man-in-the-Middle (MitM) attack on unencrypted MQTT communication reveals sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communication is conducted over an unencrypted channel.",
                    "Role": "System",
                    "Condition": "Valid if TLS or other encryption mechanisms are not used."
                },
                {
                    "Assumption": "The attacker can intercept network traffic between MQTT clients and broker.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has network access to the communication channel."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive system and user information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MitM",
                "MQTT",
                "eavesdropping",
                "network interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses sensitive environmental data collected by emonTh devices.",
            "Assumptions": [
                {
                    "Assumption": "Environmental data is stored without encryption on the emonPi base station.",
                    "Role": "System",
                    "Condition": "Valid if data at rest is not encrypted."
                },
                {
                    "Assumption": "The attacker gains unauthorized access to the storage system.",
                    "Role": "Attacker",
                    "Condition": "Valid if access controls are bypassed, weak, or non-existent."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive environmental and personal data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data at rest",
                "unauthorized access",
                "storage",
                "base station"
            ],
            "mitre_technique": {
                "name": "Local Data Staging",
                "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
                "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
                "technique_id": "T1074.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insufficient input validation on the EmonCMS web application enables attackers to access sensitive information via IDOR (Insecure Direct Object Reference).",
            "Assumptions": [
                {
                    "Assumption": "The web application uses direct object references in URL parameters.",
                    "Role": "System",
                    "Condition": "Valid if user authentication and authorization are not correctly implemented."
                },
                {
                    "Assumption": "The attacker can manipulate URL parameters to access unauthorized data.",
                    "Role": "Attacker",
                    "Condition": "Valid if web application lacks input validation and access control checks."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "IDOR",
                "web application",
                "URL manipulation",
                "data access"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a known vulnerability in MySQL to cause a crash (DoS) on the emonPi base station.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL server is running a version vulnerable to DoS attacks.",
                    "Role": "System",
                    "Condition": "Valid if MySQL server versions affected by the vulnerability are in use."
                },
                {
                    "Assumption": "The attacker has network access to interact with the MySQL server.",
                    "Role": "Attacker",
                    "Condition": "Valid if database access is exposed to external networks."
                }
            ],
            "Potential Impact": "Disruption of database services and availability of the emonPi base station.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MySQL",
                "vulnerability exploitation",
                "server crash",
                "availability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends a high volume of MQTT messages to overwhelm the MQTT broker.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker does not throttle or limit the rate of incoming messages.",
                    "Role": "System",
                    "Condition": "Valid if rate limiting mechanisms are not implemented."
                },
                {
                    "Assumption": "The attacker can send MQTT messages through an open network connection.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network allows unrestricted MQTT traffic."
                }
            ],
            "Potential Impact": "Denial of service to MQTT communication, affecting all connected devices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "message flooding",
                "broker",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits the NULL dereference in OpenSSL to crash communication on the EmonCMS web server.",
            "Assumptions": [
                {
                    "Assumption": "The system is using an affected version of OpenSSL.",
                    "Role": "System",
                    "Condition": "Valid if OpenSSL versions 1.1.1d to 1.1.1f are in use."
                },
                {
                    "Assumption": "The attacker can send a crafted handshake message to trigger the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can initiate SSL/TLS handshakes with the server."
                }
            ],
            "Potential Impact": "Denial of service, resulting in the unavailability of the EmonCMS web interface.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "OpenSSL",
                "NULL dereference",
                "handshake",
                "web server"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on the emonPi base station using a local buffer overflow exploit.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has local access to the emonPi base station.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker gains physical or remote command-line access."
                },
                {
                    "Assumption": "The system has a local privilege escalation vulnerability.",
                    "Role": "System",
                    "Condition": "Valid if the operating system or software contains unpatched vulnerabilities."
                }
            ],
            "Potential Impact": "Compromise of the base station with elevated privileges, potentially affecting all data and services.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "local exploit",
                "buffer overflow",
                "base station",
                "operating system"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a weak configuration in the EmonCMS web application to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The web application uses inadequate security for administrator accounts.",
                    "Role": "System",
                    "Condition": "Valid if default or weak credentials are used, or if there are accessible admin interfaces."
                },
                {
                    "Assumption": "The attacker can interact with the administrative interface.",
                    "Role": "Attacker",
                    "Condition": "Valid if web application allows public access to the admin interface."
                }
            ],
            "Potential Impact": "Full control over the web application, with the potential to manipulate or access all data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "weak configuration",
                "administrative access",
                "credential theft"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of CVE vulnerabilities in MySQL for unauthorized privileged actions.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL server uses outdated versions with known vulnerabilities.",
                    "Role": "System",
                    "Condition": "Valid if the server runs versions vulnerable to privilege escalation."
                },
                {
                    "Assumption": "The attacker has network connectivity to the MySQL service.",
                    "Role": "Attacker",
                    "Condition": "Valid if the MySQL server is exposed to the network."
                }
            ],
            "Potential Impact": "Escalation to administrative privileges on the database, potentially leading to full system compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MySQL",
                "vulnerability exploitation",
                "administrative access",
                "database"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "28",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of an MQTT client, gaining unauthorized access to the network and subsequently controlling or intercepting messages intended for specific devices within the OEM system.",
            "Assumptions": [
                {
                    "Assumption": "MQTT clients are authenticated using weak or no authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Authentication is solely based on client IDs which can be easily guessed or replicated."
                },
                {
                    "Assumption": "The network does not employ mutual authentication for clients and the broker.",
                    "Role": "System Administrator",
                    "Condition": "Lack of implementation of TLS/SSL for secure authentication."
                },
                {
                    "Assumption": "Lack of monitoring and anomaly detection mechanisms for identifying spoofed client connections.",
                    "Role": "System Administrator",
                    "Condition": "No active logging or monitoring of client activities."
                }
            ],
            "Potential Impact": "Unauthorized disclosure, control of MQTT communication, potential data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "identity",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of an emonPi or emonBase, sending falsified data to the MQTT broker and misleading the monitoring system.",
            "Assumptions": [
                {
                    "Assumption": "EmonPi and emonBase use easily guessable or hard-coded device identifiers.",
                    "Role": "Attacker",
                    "Condition": "Identifier information is easily accessible or not sufficiently protected."
                },
                {
                    "Assumption": "MQTT broker accepts connections without stringent verification.",
                    "Role": "System Administrator",
                    "Condition": "Weak security configurations in place for broker authentication."
                },
                {
                    "Assumption": "No endpoint validation is enforced during data submission.",
                    "Role": "System Designer",
                    "Condition": "No mechanisms are in place to validate the authenticity of data sources."
                }
            ],
            "Potential Impact": "Corruption of device data, misleading energy consumption and production statistics, potential misuse of controls for home appliances.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "iot",
                "broker",
                "data integrity",
                "falsified data"
            ],
            "mitre_technique": {
                "name": "Process Doppelg\u00e4nging",
                "description": "Adversaries may inject malicious code into process via process doppelg\u00e4nging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelg\u00e4nging is a method of executing arbitrary code in the address space of a separate live process. \n\nWindows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)\n\nAlthough deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017)\n\nAdversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), process doppelg\u00e4nging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelg\u00e4nging's use of TxF also avoids the use of highly-monitored API functions such as <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, and <code>SetThreadContext</code>. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017)\n\nProcess Doppelg\u00e4nging is implemented in 4 steps (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017):\n\n* Transact \u2013 Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.\n* Load \u2013 Create a shared section of memory and load the malicious executable.\n* Rollback \u2013 Undo changes to original executable, effectively removing malicious code from the file system.\n* Animate \u2013 Create a process from the tainted section of memory and initiate execution.\n\nThis behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelg\u00e4nging may evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--7007935a-a8a7-4c0b-bd98-4e85be8ed197",
                "technique_id": "T1055.013"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could use a spoofed network address to impersonate a legitimate internal device, gaining access to the MQTT broker and issuing commands to the WiFi MQTT Relay.",
            "Assumptions": [
                {
                    "Assumption": "Network filtering and IP validation are not implemented or are insufficient.",
                    "Role": "System Administrator",
                    "Condition": "No network security measures or weak configurations in place."
                },
                {
                    "Assumption": "The setup lacks mutual TLS/SSL authentication for MQTT communication.",
                    "Role": "System Architect",
                    "Condition": "No secure channel establishment between devices and broker."
                },
                {
                    "Assumption": "Devices trust all incoming traffic from the internal network without verification.",
                    "Role": "System Administrator",
                    "Condition": "Internal traffic is not scrutinized or monitored."
                }
            ],
            "Potential Impact": "Unauthorized control over home appliances, potential physical harm or property damage, disruption of automation routines.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "mqtt",
                "control",
                "command injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampering with the emonCMS database could alter historical energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "Database security measures are weak or misconfigured.",
                    "Role": "System Administrator",
                    "Condition": "Mediocre access control and auditing mechanisms."
                },
                {
                    "Assumption": "SQL injection vulnerabilities have not been patched or addressed.",
                    "Role": "Developer",
                    "Condition": "Application is susceptible to known vulnerabilities."
                },
                {
                    "Assumption": "Backups are not regularly taken or are incomplete.",
                    "Role": "System Administrator",
                    "Condition": "Backup policies are either lacking or ineffective."
                }
            ],
            "Potential Impact": "Data integrity compromise, incorrect energy usage analysis, potential financial loss due to erroneous billing.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "sql injection",
                "unauthorized modification",
                "mysql"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters MQTT messages being transmitted between the emonTx and the emonCMS, changing the recorded data in transit.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Lack of transport layer security."
                },
                {
                    "Assumption": "No message integrity checks are enforced.",
                    "Role": "System Designer",
                    "Condition": "System does not implement HMAC or digital signatures."
                },
                {
                    "Assumption": "Network traffic is not monitored for tampering.",
                    "Role": "Security Analyst",
                    "Condition": "Absence of intrusion detection systems."
                }
            ],
            "Potential Impact": "Data integrity compromise, misleading environmental condition readings, potential for incorrect automated responses.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "message interception",
                "mqtt",
                "data alteration",
                "environmental data"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1086) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell Set-EtwTraceProvider cmdlet or by interfacing directly with the registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ",
                "id": "attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df",
                "technique_id": "T1054"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of an emonTh device to report manipulated temperature and humidity data.",
            "Assumptions": [
                {
                    "Assumption": "Devices are not updated with secure firmware versions.",
                    "Role": "System Administrator",
                    "Condition": "Lack of firmware update management."
                },
                {
                    "Assumption": "Physical access to the device is relatively easy.",
                    "Role": "Attacker",
                    "Condition": "Devices are placed in unsecured locations."
                },
                {
                    "Assumption": "Internal firmware integrity checks are weak or absent.",
                    "Role": "Device Manufacturer",
                    "Condition": "No cryptographic validations on firmware."
                }
            ],
            "Potential Impact": "Incorrect environmental condition monitoring, potential health hazards due to incorrect humidity levels, energy wastage due to improper control actions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "iot device",
                "manipulation",
                "environmental monitoring"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending certain commands to the WiFi MQTT Relay after the device exhibits unexpected behavior.",
            "Assumptions": [
                {
                    "Assumption": "System does not log all user actions securely.",
                    "Role": "System Designer",
                    "Condition": "No non-repudiation mechanisms in place."
                },
                {
                    "Assumption": "Command and control messages are sent without authentication or signature.",
                    "Role": "System Developer",
                    "Condition": "Commands do not carry digital proof of origin."
                },
                {
                    "Assumption": "The relay operates without time synchronization.",
                    "Role": "System Administrator",
                    "Condition": "Absence of secure time protocols like NTP or similar."
                }
            ],
            "Potential Impact": "Difficulty in incident resolution, potential security breaches going unaddressed, loss of trust in system reliability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command control",
                "logging",
                "authentication",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A database administrator could deny tampering with stored energy usage data due to a lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "Database operations are not securely logged.",
                    "Role": "System Administrator",
                    "Condition": "Log retention and security is weak or non-existent."
                },
                {
                    "Assumption": "Access control policies for database activities are lax.",
                    "Role": "Database Administrator",
                    "Condition": "Role-based access and logging misconfigured."
                },
                {
                    "Assumption": "No backup or version control of data modifications.",
                    "Role": "System Designer",
                    "Condition": "Lack of differential database backups."
                }
            ],
            "Potential Impact": "Challenges in forensic investigations, data manipulation without trails, potential malicious activities undetected.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "database",
                "logging",
                "administrator",
                "tampering denial"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user disputes having accessed and changed device configuration settings via the emonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "User actions through the web application are not properly logged.",
                    "Role": "Web Developer",
                    "Condition": "Inadequate or absent logging mechanisms."
                },
                {
                    "Assumption": "No verifiable audit trail for user activities.",
                    "Role": "System Administrator",
                    "Condition": "Audit logs are not enforced or tamper-proof."
                },
                {
                    "Assumption": "User authentication methods are weak or breachable.",
                    "Role": "System Architect",
                    "Condition": "Weak password policies or lack of multi-factor authentication."
                }
            ],
            "Potential Impact": "Difficulty in tracking and accountability, potential for unauthorized changes, loss of user trust in system integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "web application",
                "logging",
                "user activity",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Security Software Discovery",
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1063) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\n\n### Windows\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.\n\n### Mac\n\nIt's becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.",
                "id": "attack-pattern--241814ae-de3f-4656-b49e-f9a80764d4b7",
                "technique_id": "T1063"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data collected by emonPi is intercepted during transmission due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted.",
                    "Role": "System Administrator",
                    "Condition": "No SSL/TLS for data channels."
                },
                {
                    "Assumption": "Network is accessible to potential eavesdroppers.",
                    "Role": "Attacker",
                    "Condition": "Lack of network segmentation or security controls."
                },
                {
                    "Assumption": "Sensitive data is transmitted in plaintext.",
                    "Role": "System Developer",
                    "Condition": "No data masking or secure handling."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of personal and energy usage data, potential privacy violations, risk of targeted attacks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "encryption",
                "plaintext",
                "data transmission",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to emonCMS exposes sensitive user data due to lack of access controls.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no user access controls are implemented.",
                    "Role": "System Administrator",
                    "Condition": "Improperly configured access control lists."
                },
                {
                    "Assumption": "Application is vulnerable to known exploits.",
                    "Role": "Developer",
                    "Condition": "Lack of timely patching and updates."
                },
                {
                    "Assumption": "Sensitive data not encrypted at rest.",
                    "Role": "System Architect",
                    "Condition": "Data storage lacks encryption."
                }
            ],
            "Potential Impact": "Exposure of user information and energy metrics, potential misuse of personal data, risk of identity theft.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "access control",
                "user data",
                "encryption",
                "database"
            ],
            "mitre_technique": {
                "name": "Gather Victim Host Information",
                "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f",
                "technique_id": "T1592"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attackers exploit an open MQTT broker to intercept messages between clients and access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker is publicly accessible without proper access restrictions.",
                    "Role": "System Administrator",
                    "Condition": "Broker exposed to the internet without security controls."
                },
                {
                    "Assumption": "Messages are exchanged without encryption.",
                    "Role": "System Developer",
                    "Condition": "Lack of secure communication protocols."
                },
                {
                    "Assumption": "Network monitoring and intrusion detection are absent.",
                    "Role": "Security Analyst",
                    "Condition": "No proactive threat detection systems in place."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive communication data, potential data leakage, privacy compromises.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "mqtt",
                "broker",
                "public exposure",
                "communication interception"
            ],
            "mitre_technique": {
                "name": "Acquire Access",
                "description": "Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)(Citation: Krebs Access Brokers Fortune 500) In some cases, adversary groups may form partnerships to share compromised systems with each other.(Citation: CISA Karakurt 2022)\n\nFootholds to compromised systems may take a variety of forms, such as access to planted backdoors (e.g., [Web Shell](https://attack.mitre.org/techniques/T1505/003)) or established access via [External Remote Services](https://attack.mitre.org/techniques/T1133). In some cases, access brokers will implant compromised systems with a \u201cload\u201d that can be used to install additional malware for paying customers.(Citation: Microsoft Ransomware as a Service)\n\nBy leveraging existing access broker networks rather than developing or obtaining their own initial access capabilities, an adversary can potentially reduce the resources required to gain a foothold on a target network and focus their efforts on later stages of compromise. Adversaries may prioritize acquiring access to systems that have been determined to lack security monitoring or that have high privileges, or systems that belong to organizations in a particular sector.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)\n\nIn some cases, purchasing access to an organization in sectors such as IT contracting, software development, or telecommunications may allow an adversary to compromise additional victims via a [Trusted Relationship](https://attack.mitre.org/techniques/T1199), [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111), or even [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195).\n\n**Note:** while this technique is distinct from other behaviors such as [Purchase Technical Data](https://attack.mitre.org/techniques/T1597/002) and [Credentials](https://attack.mitre.org/techniques/T1589/001), they may often be used in conjunction (especially where the acquired foothold requires [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
                "id": "attack-pattern--d21bb61f-08ad-4dc1-b001-81ca6cb79954",
                "technique_id": "T1650"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the MQTT broker with excessive connection requests, causing service disruptions.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker lacks rate limiting and throttling mechanisms.",
                    "Role": "System Developer",
                    "Condition": "No limitations on number of connection requests."
                },
                {
                    "Assumption": "The broker is vulnerable to known DoS vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Lack of patching and updates."
                },
                {
                    "Assumption": "No redundant broker failover mechanisms are in place.",
                    "Role": "System Architect",
                    "Condition": "Single point of failure without backup."
                }
            ],
            "Potential Impact": "Service unavailability, disruption of IoT device communication, potential for broader network outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flooding",
                "mqtt",
                "broker",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits an identified vulnerability in the OpenSSL library used by the emonCMS, causing a crash.",
            "Assumptions": [
                {
                    "Assumption": "OpenSSL versions with known vulnerabilities are in use.",
                    "Role": "System Administrator",
                    "Condition": "Outdated software without patches."
                },
                {
                    "Assumption": "Exploits for these vulnerabilities are publicly available.",
                    "Role": "Attacker",
                    "Condition": "Exploit code accessible and utilizable."
                },
                {
                    "Assumption": "No mitigation controls are in place to handle known threats.",
                    "Role": "System Designer",
                    "Condition": "Absence of intrusion prevention systems."
                }
            ],
            "Potential Impact": "Service downtime, loss of user access to data and controls, potential data integrity issues due to abrupt disruptions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "openssl",
                "vulnerability exploitation",
                "crash",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious actors exploit a known MySQL vulnerability to cause repeated crashes, rendering the database inoperative.",
            "Assumptions": [
                {
                    "Assumption": "MySQL server operates with known vulnerabilities unpatched.",
                    "Role": "System Administrator",
                    "Condition": "Outdated MySQL version without critical updates."
                },
                {
                    "Assumption": "Remote access to the MySQL server is improperly restricted.",
                    "Role": "Network Administrator",
                    "Condition": "Weak network firewall rules."
                },
                {
                    "Assumption": "No failover or redundancy for the database server.",
                    "Role": "System Architect",
                    "Condition": "Database server operates without failover capabilities."
                }
            ],
            "Potential Impact": "Database unavailability, interruption in data access and storage, potential loss of historical data due to crashes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "mysql",
                "vulnerability",
                "database crash",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a weak password policy to gain administrative access to the emonCMS application.",
            "Assumptions": [
                {
                    "Assumption": "System enforces weak or default password policies.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate input validation and security policies."
                },
                {
                    "Assumption": "Administrator accounts are not properly monitored.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of activity logging and review."
                },
                {
                    "Assumption": "No multi-factor authentication mechanisms are in place.",
                    "Role": "System Architect",
                    "Condition": "Single-factor authentication practices."
                }
            ],
            "Potential Impact": "Administrative control over all application functions, manipulation of user data and settings, potential creation of backdoor for future access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "weak passwords",
                "administrative access",
                "authentication",
                "multi-factor"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the web interface to escalate privileges and perform administrative actions.",
            "Assumptions": [
                {
                    "Assumption": "Web application vulnerability exists and is unpatched.",
                    "Role": "System Developer",
                    "Condition": "Application is susceptible to code injection or similar attacks."
                },
                {
                    "Assumption": "The attacker has some level of access to the application.",
                    "Role": "User",
                    "Condition": "Initial compromise or low privilege access."
                },
                {
                    "Assumption": "No input validation or sanitization mechanisms are in place.",
                    "Role": "System Developer",
                    "Condition": "Application handles user inputs insecurely."
                }
            ],
            "Potential Impact": "Full control over web application capabilities, potential data loss or corruption, unauthorized user account changes.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "vulnerability exploitation",
                "administrative actions",
                "input validation"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with limited access leverages database misconfigurations to gain root-level control over the MySQL server.",
            "Assumptions": [
                {
                    "Assumption": "Database access controls are loosely configured.",
                    "Role": "Database Administrator",
                    "Condition": "Broad access permissions."
                },
                {
                    "Assumption": "The system does not implement strong segregation of roles.",
                    "Role": "System Designer",
                    "Condition": "Lack of role-based access controls (RBAC)."
                },
                {
                    "Assumption": "Audit and monitoring of database activities are not enforced.",
                    "Role": "Database Administrator",
                    "Condition": "No fine-grained logging of database actions."
                }
            ],
            "Potential Impact": "Complete administrative control over database, potential data manipulation or deletion, increased risk of further system exploitation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "database",
                "misconfiguration",
                "root control",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "29",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a legitimate MQTT Client to publish false data to the MQTT Broker.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker does not enforce strong authentication mechanisms",
                    "Role": "System Administrator",
                    "Condition": "MQTT broker is misconfigured or using weak authentication"
                },
                {
                    "Assumption": "Attacker has access to the network",
                    "Role": "Attacker",
                    "Condition": "Attacker has physical or remote access to the victim's network"
                },
                {
                    "Assumption": "Legitimate MQTT client is not properly secured",
                    "Role": "System Administrator",
                    "Condition": "MQTT client uses default or weak credentials"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of data, corruption of data, disruption in operations",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "IoT device",
                "network",
                "identity misrepresentation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the emonPi or emonBase base stations to collect data from other IoT devices in the network.",
            "Assumptions": [
                {
                    "Assumption": "Base stations do not enforce secure boot mechanisms",
                    "Role": "System Administrator",
                    "Condition": "Base stations are not configured for secure boot"
                },
                {
                    "Assumption": "Attacker has access to firmware or hardware of the base stations",
                    "Role": "Attacker",
                    "Condition": "Physical access or insider threat"
                },
                {
                    "Assumption": "Network traffic is not encrypted",
                    "Role": "System Administrator",
                    "Condition": "Communication within the network uses plain text"
                }
            ],
            "Potential Impact": "Unauthorized data collection, potential misinformation, breach of user privacy",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device impersonation",
                "IoT base station",
                "network compromise"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could use a fake EmonCMS web interface to phish credentials from users.",
            "Assumptions": [
                {
                    "Assumption": "Users are not trained to identify phishing attempts",
                    "Role": "User",
                    "Condition": "Lack of user training and awareness"
                },
                {
                    "Assumption": "Attacker can create a convincing replica of the EmonCMS web interface",
                    "Role": "Attacker",
                    "Condition": "Attacker has necessary skills and resources to mimic the interface"
                },
                {
                    "Assumption": "No multi-factor authentication is implemented",
                    "Role": "System Administrator",
                    "Condition": "Multi-factor authentication is not enforced or available"
                }
            ],
            "Potential Impact": "Credential theft, unauthorized access to sensitive data, potential full control of the system",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "phishing",
                "credentials",
                "web interface"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with data being transmitted between the emonTx and the emonPi base station.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted in an unencrypted form",
                    "Role": "System Administrator",
                    "Condition": "Communication protocols are not properly secured"
                },
                {
                    "Assumption": "Attacker has access to the communication channel",
                    "Role": "Attacker",
                    "Condition": "Network is not properly segregated or secured"
                },
                {
                    "Assumption": "Lack of integrity checks on transmitted data",
                    "Role": "System Administrator",
                    "Condition": "Data integrity mechanisms are not in place"
                }
            ],
            "Potential Impact": "Corruption of data, misleading analytics, potential financial impact",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "communication channel",
                "IoT device"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the firmware of the MQTT Relay to control home appliances remotely.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not signed",
                    "Role": "System Administrator",
                    "Condition": "Lack of secure firmware update mechanisms"
                },
                {
                    "Assumption": "Attacker has physical or remote access to the MQTT Relay",
                    "Role": "Attacker",
                    "Condition": "Weak physical security or remote access vulnerabilities"
                },
                {
                    "Assumption": "No validation of firmware integrity",
                    "Role": "System Administrator",
                    "Condition": "System does not validate firmware integrity before execution"
                }
            ],
            "Potential Impact": "Unauthorized control, potential physical damage, safety risks",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "IoT relay",
                "remote control"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could exploit vulnerabilities in MySQL to tamper with the data stored in the EmonCMS database.",
            "Assumptions": [
                {
                    "Assumption": "MySQL vulnerabilities are not patched",
                    "Role": "System Administrator",
                    "Condition": "Outdated MySQL server versions in use"
                },
                {
                    "Assumption": "Database does not implement robust access controls",
                    "Role": "System Administrator",
                    "Condition": "Weak or default credentials and permissions"
                },
                {
                    "Assumption": "Attacker has network access",
                    "Role": "Attacker",
                    "Condition": "Lack of proper network segmentation and firewall rules"
                }
            ],
            "Potential Impact": "Corruption of data, inaccurate analytics, potential system instability",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "MySQL",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having changed the settings on the MQTT Relay, causing operational confusion.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not comprehensive",
                    "Role": "System Administrator",
                    "Condition": "Logging mechanisms are inadequate or improperly configured"
                },
                {
                    "Assumption": "Logs are not tamper-evident",
                    "Role": "System Administrator",
                    "Condition": "Logs can be edited or deleted by users"
                },
                {
                    "Assumption": "User identity for changes is not verified",
                    "Role": "System Administrator",
                    "Condition": "Weak authentication mechanisms"
                }
            ],
            "Potential Impact": "Operational confusion, resource misuse, potential for unauthorized changes going unnoticed",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "IoT relay",
                "operations"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An administrator denies having used a certain command on the emonPi during a critical time, affecting troubleshooting efforts.",
            "Assumptions": [
                {
                    "Assumption": "Command execution is not logged",
                    "Role": "System Administrator",
                    "Condition": "Inadequate logging of administrative actions"
                },
                {
                    "Assumption": "Logs are not protected against tampering",
                    "Role": "System Administrator",
                    "Condition": "Absence of secure logging mechanisms"
                },
                {
                    "Assumption": "Multiple administrators use shared credentials",
                    "Role": "System Administrator",
                    "Condition": "Shared use of administrative accounts without individual accountability"
                }
            ],
            "Potential Impact": "Hindered troubleshooting, potential delays in issue resolution, lack of accountability",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "administration",
                "troubleshooting"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending an MQTT message that resulted in an unintended device action.",
            "Assumptions": [
                {
                    "Assumption": "MQTT message sending is not logged with user identity",
                    "Role": "System Administrator",
                    "Condition": "Insufficient logging of MQTT messages with user details"
                },
                {
                    "Assumption": "Messages are not timestamped",
                    "Role": "System Administrator",
                    "Condition": "Absence of proper timestamping of messages"
                },
                {
                    "Assumption": "Users can claim physical or network intrusion",
                    "Role": "User",
                    "Condition": "Network vulnerabilities allowing unauthorized access"
                }
            ],
            "Potential Impact": "Lack of user accountability, potentially malicious actions going unnoticed, operational inefficiencies",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "MQTT",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Linux Audit System",
                "description": "Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.\n\nOften referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.(Citation: Red Hat System Auditing)(Citation: IzyKnows auditd threat detection 2022)\n\nWith root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.(Citation: Trustwave Honeypot SkidMap 2023)(Citation: ESET Ebury Feb 2014)",
                "id": "attack-pattern--562e9b64-7239-493d-80f4-2bff900d9054",
                "technique_id": "T1562.012"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted MQTT messages between devices to steal sensitive energy usage data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT messages are not encrypted",
                    "Role": "System Administrator",
                    "Condition": "Protocols are configured without encryption"
                },
                {
                    "Assumption": "Attacker has access to the network",
                    "Role": "Attacker",
                    "Condition": "Insufficient network security measures"
                },
                {
                    "Assumption": "Sensitive data is transmitted without additional protection",
                    "Role": "System Administrator",
                    "Condition": "Lack of data masking or tokenization"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, privacy breaches, potential exploitation of energy usage patterns",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted communication",
                "MQTT",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a known vulnerability in the PHP backend of EmonCMS to access sensitive user data.",
            "Assumptions": [
                {
                    "Assumption": "EmonCMS PHP vulnerabilities are not patched",
                    "Role": "System Administrator",
                    "Condition": "Using outdated or unpatched software versions"
                },
                {
                    "Assumption": "Weak access controls on the web server",
                    "Role": "System Administrator",
                    "Condition": "Inadequate web server security configurations"
                },
                {
                    "Assumption": "Sensitive data is stored in plain text",
                    "Role": "System Administrator",
                    "Condition": "Poor data storage practices"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user information, data breaches, potential for data misuse",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "exploitation",
                "PHP",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a SQL injection vulnerability in EmonCMS to extract sensitive energy consumption data from the MySQL database.",
            "Assumptions": [
                {
                    "Assumption": "EmonCMS is vulnerable to SQL injection",
                    "Role": "Developer",
                    "Condition": "Improper input validation and sanitization"
                },
                {
                    "Assumption": "MySQL server is configured with weak security practices",
                    "Role": "System Administrator",
                    "Condition": "Insufficient database security protocols"
                },
                {
                    "Assumption": "Sensitive data is accessible via SQL queries",
                    "Role": "System Administrator",
                    "Condition": "No restrictions on data access levels"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, potential misuse of extracted information, increased risk of data breaches",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "SQL injection",
                "database exploitation",
                "MySQL"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a Denial of Service attack against the MQTT Broker, disrupting communication between IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker lacks rate limiting and DoS protection mechanisms",
                    "Role": "System Administrator",
                    "Condition": "Inadequate configuration or security controls"
                },
                {
                    "Assumption": "Attacker can send a high volume of requests to the broker",
                    "Role": "Attacker",
                    "Condition": "Network access without traffic monitoring"
                },
                {
                    "Assumption": "Lack of redundancy and failover mechanisms",
                    "Role": "System Administrator",
                    "Condition": "Single point of failure for MQTT communication"
                }
            ],
            "Potential Impact": "Disruption of communication, loss of data, potential system instability",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DoS attack",
                "MQTT broker",
                "network flood"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the MySQL server, causing it to crash repeatedly.",
            "Assumptions": [
                {
                    "Assumption": "MySQL server is not patched for known vulnerabilities",
                    "Role": "System Administrator",
                    "Condition": "Use of outdated or vulnerable MySQL versions"
                },
                {
                    "Assumption": "Weak access controls on the database",
                    "Role": "System Administrator",
                    "Condition": "Allowing lower privileged users to exploit vulnerabilities"
                },
                {
                    "Assumption": "Lack of monitoring and alert mechanisms",
                    "Role": "System Administrator",
                    "Condition": "Absence of real-time monitoring and response tools"
                }
            ],
            "Potential Impact": "Loss of database availability, potential data corruption, operational disruptions",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MySQL",
                "database crash",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends malformed MQTT messages to disrupt the WiFi MQTT Relay, causing it to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "MQTT Relay firmware does not handle malformed messages gracefully",
                    "Role": "Developer",
                    "Condition": "Ineffective input validation in firmware"
                },
                {
                    "Assumption": "Attacker has network access",
                    "Role": "Attacker",
                    "Condition": "Weak network security measures"
                },
                {
                    "Assumption": "No mitigation mechanisms to handle DoS attacks",
                    "Role": "System Administrator",
                    "Condition": "No protections like DDoS mitigation appliances or services"
                }
            ],
            "Potential Impact": "Disruption in device control, potential impact on home automation, operational inefficiencies",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT",
                "malformed message",
                "IoT relay"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a buffer overflow vulnerability in the MySQL server to gain administrative control over the database.",
            "Assumptions": [
                {
                    "Assumption": "MySQL server is not patched for buffer overflow vulnerabilities",
                    "Role": "System Administrator",
                    "Condition": "Use of outdated or vulnerable MySQL versions"
                },
                {
                    "Assumption": "Limited access controls on the database server",
                    "Role": "System Administrator",
                    "Condition": "Inadequate user permissions management"
                },
                {
                    "Assumption": "Attacker has access to the network or database server",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to the server"
                }
            ],
            "Potential Impact": "Unauthorized administrative control, full access to sensitive data, potential system manipulation",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "buffer overflow",
                "MySQL",
                "database control"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses an unpatched vulnerability in PHP to execute arbitrary code with elevated privileges on the EmonCMS server.",
            "Assumptions": [
                {
                    "Assumption": "PHP vulnerabilities are not patched",
                    "Role": "System Administrator",
                    "Condition": "Use of outdated or vulnerable PHP versions"
                },
                {
                    "Assumption": "Web server runs PHP as a privileged user",
                    "Role": "System Administrator",
                    "Condition": "Improper web server configuration"
                },
                {
                    "Assumption": "Attacker has the ability to access and exploit the web server",
                    "Role": "Attacker",
                    "Condition": "Network vulnerabilities enabling exploitation"
                }
            ],
            "Potential Impact": "Unauthorized execution of arbitrary code, potential full system compromise, uncontrolled system behavior",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "PHP",
                "arbitrary code execution",
                "web server"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits weak configurations in the MQTT Broker to elevate their privileges and control all IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "MQTT Broker uses weak or default configurations",
                    "Role": "System Administrator",
                    "Condition": "MQTT broker is configured with lax security settings"
                },
                {
                    "Assumption": "No role-based access controls are implemented",
                    "Role": "System Administrator",
                    "Condition": "Lack of granular access control for MQTT clients"
                },
                {
                    "Assumption": "Attacker has initial access to the broker",
                    "Role": "Attacker",
                    "Condition": "Network vulnerabilities or insider threat"
                }
            ],
            "Potential Impact": "Full control over IoT devices, potential misuse, operational disruption",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MQTT broker",
                "configuration exploits",
                "IoT control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "12",
    "batch_number": "30",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of an emonPi or emonBase device by injecting malicious packets into the network.",
            "Assumptions": [
                {
                    "Assumption": "Attackers can gain access to the local network.",
                    "Role": "Network Intruder",
                    "Condition": "Valid if network security is weak or compromised."
                },
                {
                    "Assumption": "Attackers have knowledge of device communication protocols (MQTT).",
                    "Role": "Network Intruder",
                    "Condition": "Valid if attackers have prior experience with the technology stack."
                },
                {
                    "Assumption": "There are no effective mechanisms for verifying the authenticity of the data sending devices.",
                    "Role": "System Designer",
                    "Condition": "Valid if the system lacks encryption or authentication protocols."
                }
            ],
            "Potential Impact": "Loss of data integrity due to injection of false data, potentially unauthorised control of home automation devices.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "MQTT",
                "iot"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a user to gain access to the EmonCMS web application using phishing techniques.",
            "Assumptions": [
                {
                    "Assumption": "Users could be targeted by phishing attacks.",
                    "Role": "User",
                    "Condition": "Valid if users are not aware of phishing risks or best practices."
                },
                {
                    "Assumption": "The web application does not use multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Valid if multi-factor authentication is not implemented."
                },
                {
                    "Assumption": "The attacker can craft convincing phishing messages.",
                    "Role": "Phishers",
                    "Condition": "Valid due to the availability and usage of phishing kits."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, unauthorized control over the energy monitoring system.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "phishing",
                "user",
                "web application"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of the MQTT broker to hijack communications between IoT devices.",
            "Assumptions": [
                {
                    "Assumption": "Attackers can intercept and modify traffic within the network.",
                    "Role": "Network Intruder",
                    "Condition": "Valid if the network traffic is unencrypted."
                },
                {
                    "Assumption": "The MQTT protocol does not implement strong authentication mechanisms.",
                    "Role": "Protocol Implementer",
                    "Condition": "Valid if the implementation allows weak or no authentication."
                },
                {
                    "Assumption": "There are no network-level protections to detect and block such spoofing attacks.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if Intrusion Detection Systems (IDS) or firewalls are not properly configured."
                }
            ],
            "Potential Impact": "Compromised data integrity, potential unauthorized access to and control of various IoT devices.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "broker",
                "MQTT",
                "iot"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data packets sent between emonTh/emonTx and emonPi/emonBase to manipulate environmental condition data.",
            "Assumptions": [
                {
                    "Assumption": "Attackers can access the network.",
                    "Role": "Network Intruder",
                    "Condition": "Valid if network security is weak."
                },
                {
                    "Assumption": "Data packets are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if communication protocols lack encryption."
                },
                {
                    "Assumption": "The system trusts incoming data without validation.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is no validation or authentication mechanism in place."
                }
            ],
            "Potential Impact": "Compromised data integrity, leading to incorrect environmental readings and potential faulty system adjustments.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "packet",
                "network",
                "environment"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker with access to the physical devices could tamper with the my.ini file on the MySQL database used by EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "Attackers have physical access to the device.",
                    "Role": "Local Attacker",
                    "Condition": "Valid if physical security is inadequate."
                },
                {
                    "Assumption": "The my.ini file is not properly secured.",
                    "Role": "System Administrator",
                    "Condition": "Valid if file permissions are weak."
                },
                {
                    "Assumption": "The MySQL service does not validate the integrity of configuration files.",
                    "Role": "DBA",
                    "Condition": "Valid if no checks are implemented for file changes."
                }
            ],
            "Potential Impact": "Unauthorized code execution, potentially leading to full system compromise.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration file",
                "MySQL",
                "local access"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a vulnerability in the EmonCMS web application to alter data in the database.",
            "Assumptions": [
                {
                    "Assumption": "The EmonCMS web application has a SQL injection vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Valid if the vulnerability exists and attackers identify it."
                },
                {
                    "Assumption": "Attackers can submit crafted requests to the web application.",
                    "Role": "Remote Attacker",
                    "Condition": "Valid if the web application is publicly accessible."
                },
                {
                    "Assumption": "Database input sanitization is insufficient.",
                    "Role": "Web Developer",
                    "Condition": "Valid if security best practices are not followed."
                }
            ],
            "Potential Impact": "Unauthorized data manipulation, loss of data integrity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "SQL injection",
                "web application",
                "database"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates logs on the emonPi/emonBase to hide traces of unauthorized activity.",
            "Assumptions": [
                {
                    "Assumption": "The system does not protect log files.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logs are not securely stored."
                },
                {
                    "Assumption": "The attacker has sufficient privileges to modify log files.",
                    "Role": "Insider Threat",
                    "Condition": "Valid if account permissions are excessively broad."
                },
                {
                    "Assumption": "Log tampering is not monitored or detected.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if SIEM solutions are not implemented or configured properly."
                }
            ],
            "Potential Impact": "Inability to trace malicious activity, compromised investigation and response efforts.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log modification",
                "audit logs",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker disrupts the communication between the emonTx and emonPi to prevent accurate logging of temperature and humidity data.",
            "Assumptions": [
                {
                    "Assumption": "Attackers can intercept and alter communications within the network.",
                    "Role": "Network Intruder",
                    "Condition": "Valid if network traffic is unencrypted."
                },
                {
                    "Assumption": "The system does not verify the integrity of incoming data.",
                    "Role": "System Designer",
                    "Condition": "Valid if no validation checks are present."
                },
                {
                    "Assumption": "There is no secondary verification for detected anomalies.",
                    "Role": "System Admin",
                    "Condition": "Valid if anomaly detection mechanisms are absent or incomplete."
                }
            ],
            "Potential Impact": "Loss of data integrity, potential mismanagement of home automation system.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data interception",
                "validation",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker removes or alters audit trails in the EmonCMS web application to prevent tracking of unauthorized changes.",
            "Assumptions": [
                {
                    "Assumption": "The web application allows modification of audit trails.",
                    "Role": "Web Developer",
                    "Condition": "Valid if the audit trail feature is poorly implemented."
                },
                {
                    "Assumption": "Attackers have sufficient privileges to modify web application records.",
                    "Role": "Insider Threat",
                    "Condition": "Valid if privilege and role-based access controls are weak."
                },
                {
                    "Assumption": "There are no measures in place to detect log modification.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if SIEM solutions are not properly configured or absent."
                }
            ],
            "Potential Impact": "Inability to trace unauthorized activities, compromised incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log wiping",
                "audit trails",
                "web application"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts communications between IoT devices and the MQTT broker to capture unencrypted sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic is unencrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if encryption is not implemented in MQTT communications."
                },
                {
                    "Assumption": "Attackers have access to the network.",
                    "Role": "Network Intruder",
                    "Condition": "Valid if network defenses are weak or compromised."
                },
                {
                    "Assumption": "MQTT protocol allows for eavesdropping.",
                    "Role": "Protocol Implementer",
                    "Condition": "Valid if no transport security is used."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, loss of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network traffic",
                "MQTT",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the EmonCMS web application to access sensitive user data.",
            "Assumptions": [
                {
                    "Assumption": "The web application contains exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if security patches are not applied."
                },
                {
                    "Assumption": "Attackers can submit crafted attacks to the web application.",
                    "Role": "Remote Attacker",
                    "Condition": "Valid if the web application is accessible publicly."
                },
                {
                    "Assumption": "Sensitive user data is stored without adequate protection.",
                    "Role": "Web Developer",
                    "Condition": "Valid if data encryption is not implemented."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user data, compromising user privacy.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "web application",
                "vulnerability",
                "exploit"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains physical access to an emonPi or emonBase device and extracts sensitive data directly from the device.",
            "Assumptions": [
                {
                    "Assumption": "Attackers have physical access to the device.",
                    "Role": "Local Attacker",
                    "Condition": "Valid if physical security measures are weak."
                },
                {
                    "Assumption": "Data stored on the device is not encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Valid if no disk encryption is used."
                },
                {
                    "Assumption": "Attackers can bypass local authentication mechanisms.",
                    "Role": "Local Attacker",
                    "Condition": "Valid if access controls are weak."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, loss of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "physical access",
                "device security",
                "data extraction"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the MQTT broker with messages, leading to resource exhaustion and denial of service for legitimate devices.",
            "Assumptions": [
                {
                    "Assumption": "Attackers can generate high volumes of traffic.",
                    "Role": "Remote Attacker",
                    "Condition": "Valid if the system is internet-facing."
                },
                {
                    "Assumption": "The MQTT broker does not throttle message rates.",
                    "Role": "System Designer",
                    "Condition": "Valid if rate-limiting is not implemented."
                },
                {
                    "Assumption": "Resource allocation is not monitored or managed.",
                    "Role": "System Administrator",
                    "Condition": "Valid if there are no controls to monitor and manage resource usage."
                }
            ],
            "Potential Impact": "Disruption of communication between devices, loss of availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MQTT broker",
                "flooding",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a MySQL vulnerability to cause a crash in the database, leading to denial of service for the EmonCMS web application.",
            "Assumptions": [
                {
                    "Assumption": "The MySQL instance has known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if security patches are not applied."
                },
                {
                    "Assumption": "Attackers can interact with the MySQL database.",
                    "Role": "Remote Attacker",
                    "Condition": "Valid if the service is exposed or accessible."
                },
                {
                    "Assumption": "There are no mechanisms to detect and mitigate such attacks.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if response measures are not in place."
                }
            ],
            "Potential Impact": "Loss of availability of the web application, impacting user access and data availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MySQL",
                "exploitation",
                "database crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial of service (DDoS) attack targets the EmonCMS web application, overwhelming the server with traffic from multiple sources.",
            "Assumptions": [
                {
                    "Assumption": "The system is internet-facing.",
                    "Role": "Remote Attacker",
                    "Condition": "Valid if the web application is publicly accessible."
                },
                {
                    "Assumption": "Attackers can control multiple sources for the attack.",
                    "Role": "Threat Actor",
                    "Condition": "Valid if botnets or coordinated attack networks are available."
                },
                {
                    "Assumption": "There are no protective measures such as web application firewalls (WAF) or DDoS mitigation services in place.",
                    "Role": "System Administrator",
                    "Condition": "Valid if such solutions are not implemented."
                }
            ],
            "Potential Impact": "Loss of availability, preventing legitimate users from accessing the web application.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "web application",
                "traffic overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the EmonCMS web application to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The web application has vulnerabilities allowing privilege escalation.",
                    "Role": "Attacker",
                    "Condition": "Valid if security patches are not applied."
                },
                {
                    "Assumption": "Attackers can interact directly with the application.",
                    "Role": "Remote Attacker",
                    "Condition": "Valid if the web application is accessible publicly."
                },
                {
                    "Assumption": "The application does not implement proper access control mechanisms.",
                    "Role": "Web Developer",
                    "Condition": "Valid if role-based access controls (RBAC) are weak."
                }
            ],
            "Potential Impact": "Unauthorized access to administrative functionalities, full control over the system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "vulnerability",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker with physical access gains elevated privileges on an emonPi or emonBase device by exploiting local vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the device.",
                    "Role": "Local Attacker",
                    "Condition": "Valid if physical security measures are weak."
                },
                {
                    "Assumption": "Local vulnerabilities exist allowing privilege elevation.",
                    "Role": "System Administrator",
                    "Condition": "Valid if security patches are not applied."
                },
                {
                    "Assumption": "Attackers can bypass local authentication mechanisms.",
                    "Role": "Local Attacker",
                    "Condition": "Valid if access controls are inadequate."
                }
            ],
            "Potential Impact": "Full control over the device, potential to disrupt or reconfigure the system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "local access",
                "device security",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a misconfigured MQTT broker to escalate their privileges and control other devices in the network.",
            "Assumptions": [
                {
                    "Assumption": "The MQTT broker is misconfigured.",
                    "Role": "System Administrator",
                    "Condition": "Valid if security configurations are weak or incorrect."
                },
                {
                    "Assumption": "Attackers can interact with the broker.",
                    "Role": "Remote Attacker",
                    "Condition": "Valid if the broker is accessible publicly."
                },
                {
                    "Assumption": "There are no monitoring mechanisms to detect unauthorized commands.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if monitoring solutions are not deployed."
                }
            ],
            "Potential Impact": "Unauthorized control over network devices, potential for significant disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MQTT broker",
                "misconfiguration",
                "device control"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
}
]