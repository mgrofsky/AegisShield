[
{
    "case_number": "14",
    "batch_number": "2",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate Ground Control Station (GCS) to communicate with UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the same communication frequency or credentials as the GCS.",
                    "Role": "Attacker",
                    "Condition": "The GCS uses predictable or duplicate credentials."
                },
                {
                    "Assumption": "The communication channels between UAVs and GCS are not sufficiently encrypted or authenticated.",
                    "Role": "System Designer",
                    "Condition": "Encryption or authentication mechanisms are weak or absent."
                },
                {
                    "Assumption": "The GCS does not verify the identity of the UAVs it communicates with.",
                    "Role": "System Designer",
                    "Condition": "Identity verification mechanisms are not implemented or are flawed."
                }
            ],
            "Potential Impact": "Unauthorized control and command over UAVs could be achieved.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity impersonation",
                "authentication weakness",
                "communication channel"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses malicious firmware updates disguised as legitimate updates to compromise UAVs.",
            "Assumptions": [
                {
                    "Assumption": "UAV firmware update process is not securely validated or authenticated.",
                    "Role": "System Designer",
                    "Condition": "The update process lacks proper validation."
                },
                {
                    "Assumption": "Attackers can gain access to the firmware distribution channels.",
                    "Role": "Attacker",
                    "Condition": "Distribution channels have weak security."
                },
                {
                    "Assumption": "Operators do not verify the authenticity of firmware updates.",
                    "Role": "Operator",
                    "Condition": "Operators lack training or tools to verify updates."
                }
            ],
            "Potential Impact": "Malicious control and data exfiltration from UAVs could be enabled.",
            "MITRE ATT&CK Keywords": [
                "malware injection",
                "firmware compromise",
                "update mechanism",
                "embedded systems"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises as a legitimate user to gain access to cloud services storing UAV data.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service authentication mechanism is weak or susceptible to attacks.",
                    "Role": "System Designer",
                    "Condition": "Authentication mechanisms like passwords are weak or predictable."
                },
                {
                    "Assumption": "Users are not using multi-factor authentication.",
                    "Role": "System Designer / User",
                    "Condition": "Multi-factor authentication is not enforced or used."
                },
                {
                    "Assumption": "Credential theft or phishing attacks are successful.",
                    "Role": "Attacker",
                    "Condition": "Phishing or credential stealing methods are effective."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data stored in the cloud could be achieved.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "cloud service",
                "data exfiltration",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Keychain",
                "description": "Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple\u2019s iCloud service. \n\nKeychains can be viewed and edited through the Keychain Access application or using the command-line utility <code>security</code>. Keychain files are located in <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.(Citation: Keychain Services Apple)(Citation: Keychain Decryption Passware)(Citation: OSX Keychain Schaumann)\n\nAdversaries may gather user credentials from Keychain storage/memory. For example, the command <code>security dump-keychain \u2013d</code> will dump all Login Keychain credentials from <code>~/Library/Keychains/login.keychain-db</code>. Adversaries may also directly read Login Keychain credentials from the <code>~/Library/Keychains/login.keychain</code> file. Both methods require a password, where the default password for the Login Keychain is the current user\u2019s password to login to the macOS host.(Citation: External to DA, the OS X Way)(Citation: Empire Keychain Decrypt)  ",
                "id": "attack-pattern--1eaebf46-e361-4437-bc23-d5d65a3b92e3",
                "technique_id": "T1555.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data transmissions between UAVs and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted or are using weak encryption.",
                    "Role": "System Designer",
                    "Condition": "Encryption protocols are outdated or improperly implemented."
                },
                {
                    "Assumption": "The attacker has access to the communication network.",
                    "Role": "Attacker",
                    "Condition": "Attacker can physically or logically access the network."
                },
                {
                    "Assumption": "No integrity checks are performed on received data.",
                    "Role": "System Designer",
                    "Condition": "Data integrity mechanisms are not enforced."
                }
            ],
            "Potential Impact": "Command alteration or misinformation could disrupt mission-critical operations.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "data tampering",
                "communication channel",
                "network interception"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider with privileged access modifies critical firmware of UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Privileged access management controls are weak.",
                    "Role": "System Administrator",
                    "Condition": "Access control mechanisms are poorly enforced."
                },
                {
                    "Assumption": "There is no monitoring of changes to the firmware.",
                    "Role": "System Administrator",
                    "Condition": "Firmware changes are not logged or audited."
                },
                {
                    "Assumption": "Access to firmware is not segmented or restricted.",
                    "Role": "System Designer",
                    "Condition": "Segmentation and access restrictions are not implemented."
                }
            ],
            "Potential Impact": "Compromised firmware could lead to unauthorized missions and data loss.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "firmware tampering",
                "access control",
                "privilege abuse"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a known CVE vulnerability to execute code on the UAV's firmware.",
            "Assumptions": [
                {
                    "Assumption": "Firmware contains unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Patches and updates are not regularly applied."
                },
                {
                    "Assumption": "Attacker has knowledge and tools to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Exploit kits or knowledge are readily available."
                },
                {
                    "Assumption": "Security measures do not mitigate known exploitation techniques.",
                    "Role": "System Designer",
                    "Condition": "Mitigation strategies for known vulnerabilities are missing."
                }
            ],
            "Potential Impact": "Full control over UAV operations could be obtained.",
            "MITRE ATT&CK Keywords": [
                "CVE exploitation",
                "remote code execution",
                "firmware vulnerability",
                "malware injection"
            ],
            "mitre_technique": {
                "name": "Software Deployment Tools",
                "description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.  \n\nAccess to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nSaaS-based configuration management services may allow for broad [Cloud Administration Command](https://attack.mitre.org/techniques/T1651) on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Azure AD.(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020) Such services may also utilize [Web Protocols](https://attack.mitre.org/techniques/T1071/001) to communicate back to adversary owned infrastructure.(Citation: Mitiga Security Advisory: SSM Agent as Remote Access Trojan)\n\nNetwork infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
                "id": "attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414",
                "technique_id": "T1072"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny issuing specific commands due to lack of non-repudiation mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Command issuance and logging mechanisms lack proper authentication.",
                    "Role": "System Designer",
                    "Condition": "Logging does not include signer identity."
                },
                {
                    "Assumption": "There are no digital signatures for commands.",
                    "Role": "System Designer",
                    "Condition": "Digital signatures are not embedded in commands."
                },
                {
                    "Assumption": "Logs can be tampered with or are incomplete.",
                    "Role": "System Administrator",
                    "Condition": "Log integrity is not protected."
                }
            ],
            "Potential Impact": "Disputes over the authenticity of commands could occur, impacting mission accountability.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "logging mechanisms",
                "command authentication",
                "audit trails"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud service activities lack proper audit logs, leading to data tampering without trace.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not enable detailed audit logging.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Audit logging features are not enabled or used."
                },
                {
                    "Assumption": "Audit logs are not immutable or easily modifiable.",
                    "Role": "System Designer",
                    "Condition": "Audit logs lack immutability protections."
                },
                {
                    "Assumption": "Access to audit logs is not tightly controlled.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Access controls for logs are weak."
                }
            ],
            "Potential Impact": "Unauthorized activities on cloud services could go undetected.",
            "MITRE ATT&CK Keywords": [
                "cloud service",
                "audit logging",
                "data tampering",
                "log integrity"
            ],
            "mitre_technique": {
                "name": "Cloud Service Dashboard",
                "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",
                "id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
                "technique_id": "T1538"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators cannot verify or deny past commands issued during UAV operations.",
            "Assumptions": [
                {
                    "Assumption": "Command history is not logged or accessible to legitimate users.",
                    "Role": "System Designer",
                    "Condition": "Command logging mechanisms are absent."
                },
                {
                    "Assumption": "There are no mechanisms to verify the integrity of command logs.",
                    "Role": "System Designer",
                    "Condition": "Integrity verification is not implemented."
                },
                {
                    "Assumption": "Operators lack secure ways to access operational history.",
                    "Role": "Operator",
                    "Condition": "Secure access methods are missing."
                }
            ],
            "Potential Impact": "Historical command fidelity could be disputed, affecting accountability.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "command history",
                "logging mechanisms",
                "audit trails"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data transmitted by UAVs is intercepted by unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted or uses weak encryption.",
                    "Role": "System Designer",
                    "Condition": "Encryption standards are not rigorously enforced."
                },
                {
                    "Assumption": "Unauthorized entities can access communication channels.",
                    "Role": "Attacker",
                    "Condition": "Communication channels are publicly accessible or poorly secured."
                },
                {
                    "Assumption": "Operators are unaware of best practices for securing data transmission.",
                    "Role": "Operator",
                    "Condition": "Lack of security training and awareness."
                }
            ],
            "Potential Impact": "Confidential and sensitive information could be disclosed to unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "communication security",
                "encryption weakness",
                "confidentiality breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored on cloud services is accessed by unauthorized users.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage access controls are insufficient or misconfigured.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Access control policies are weak or misconfigured."
                },
                {
                    "Assumption": "Multi-factor authentication is not enforced.",
                    "Role": "System Designer / User",
                    "Condition": "Multi-factor authentication is not used or enforced."
                },
                {
                    "Assumption": "Users access cloud services from compromised or insecure devices.",
                    "Role": "User",
                    "Condition": "Devices lack adequate security protections."
                }
            ],
            "Potential Impact": "Sensitive data could be exposed to individuals without the appropriate clearance.",
            "MITRE ATT&CK Keywords": [
                "cloud storage",
                "access control",
                "multi-factor authentication",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider with legitimate access leaks classified mission data.",
            "Assumptions": [
                {
                    "Assumption": "Insider has legitimate access to classified information.",
                    "Role": "Insider",
                    "Condition": "Participant is granted access in the course of their role."
                },
                {
                    "Assumption": "Monitoring for data exfiltration is insufficient.",
                    "Role": "System Designer",
                    "Condition": "Data exfiltration detection mechanisms are weak or absent."
                },
                {
                    "Assumption": "No effective deterrents for data leakage are in place.",
                    "Role": "System Administrator",
                    "Condition": "Policies or consequences for data leakage are weak."
                }
            ],
            "Potential Impact": "Classified and sensitive mission data could be exposed, potentially compromising operations.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "classified data",
                "data leakage",
                "exfiltration monitoring"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DoS attack on the Ground Control Station, disrupting drone operations.",
            "Assumptions": [
                {
                    "Assumption": "GCS has exposed services or ports susceptible to DoS attacks.",
                    "Role": "System Designer",
                    "Condition": "Services are not adequately protected or monitored."
                },
                {
                    "Assumption": "There are insufficient rate-limiting or anomaly detection mechanisms.",
                    "Role": "System Designer",
                    "Condition": "No rate-limiting or anomaly detection is in place."
                },
                {
                    "Assumption": "Attackers have the capability to generate sufficient traffic to overwhelm the GCS.",
                    "Role": "Attacker",
                    "Condition": "Attackers have access to powerful botnets or resources."
                }
            ],
            "Potential Impact": "Disruption of drone operations leading to mission failure or delays.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "GCS disruption",
                "rate limiting",
                "service availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack targeting cloud-based data services critical for UAV operation coordination.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services lack sufficient DDoS mitigation.",
                    "Role": "Cloud Service Provider",
                    "Condition": "DDoS mitigation services are not enabled or properly configured."
                },
                {
                    "Assumption": "Attack vectors on cloud infrastructure are exposed or insufficiently protected.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Attack vectors are unmitigated or inadequately protected."
                },
                {
                    "Assumption": "Attackers have knowledge and capability to launch DDoS attacks on cloud infrastructure.",
                    "Role": "Attacker",
                    "Condition": "Attackers can mobilize sufficient resources."
                }
            ],
            "Potential Impact": "Inability to access critical data services, resulting in operational disruption.",
            "MITRE ATT&CK Keywords": [
                "DDoS attack",
                "cloud infrastructure",
                "service disruption",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection on UAVs could lead to operational disruptions and thwarted missions.",
            "Assumptions": [
                {
                    "Assumption": "UAVs lack robust malware protection mechanisms.",
                    "Role": "System Designer",
                    "Condition": "No or insufficient malware detection and prevention is implemented."
                },
                {
                    "Assumption": "Firmware and embedded systems are vulnerable to malware exploitation.",
                    "Role": "System Designer",
                    "Condition": "Systems are not kept up to date or are inherently vulnerable."
                },
                {
                    "Assumption": "UAVs connect to networks or systems that are compromised.",
                    "Role": "System Administrator",
                    "Condition": "Connected networks lack adequate security measures."
                }
            ],
            "Potential Impact": "Operational disruption, mission failure, and potential loss of UAV assets.",
            "MITRE ATT&CK Keywords": [
                "malware infection",
                "UAV disruption",
                "embedded systems",
                "firmware vulnerability"
            ],
            "mitre_technique": {
                "name": "RC Scripts",
                "description": "Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system\u2019s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.\n\nAdversaries can establish persistence by adding a malicious binary path or shell commands to <code>rc.local</code>, <code>rc.common</code>, and other RC scripts specific to the Unix-like distribution.(Citation: IranThreats Kittens Dec 2017)(Citation: Intezer HiddenWasp Map 2019) Upon reboot, the system executes the script's contents as root, resulting in persistence.\n\nAdversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as IoT or embedded systems.(Citation: intezer-kaiji-malware)\n\nSeveral Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor of [Launchd](https://attack.mitre.org/techniques/T1053/004). (Citation: Apple Developer Doco Archive Launchd)(Citation: Startup Items) This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts.(Citation: Methods of Mac Malware Persistence) To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.(Citation: Ubuntu Manpage systemd rc)",
                "id": "attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211",
                "technique_id": "T1037.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of vulnerabilities in UAV firmware to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "Firmware vulnerabilities are not patched timely.",
                    "Role": "System Administrator",
                    "Condition": "Patching processes are delayed or neglected."
                },
                {
                    "Assumption": "Attacker has knowledge of the vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities are disclosed or known to the attacker."
                },
                {
                    "Assumption": "No proper segmentation of privileges within the firmware.",
                    "Role": "System Designer",
                    "Condition": "Privilege segmentation is not properly implemented."
                }
            ],
            "Potential Impact": "Full control over UAVs, leading to unauthorized missions and data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "firmware vulnerabilities",
                "UAV control",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Insufficient access control policies in cloud services allow unauthorized privilege escalation.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service access control policies are weak or misconfigured.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Access policies are not properly configured or enforced."
                },
                {
                    "Assumption": "Attackers have the ability to manipulate or exploit access controls.",
                    "Role": "Attacker",
                    "Condition": "Attackers can identify and exploit policy weaknesses."
                },
                {
                    "Assumption": "Insufficient monitoring and alerting for access control violations.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Monitoring of policy violations is not rigorous."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and mission-critical functions.",
            "MITRE ATT&CK Keywords": [
                "access control",
                "cloud service",
                "privilege escalation",
                "policy misconfiguration"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious actors leverage zero-day vulnerabilities to gain administrative access on the Ground Control Station.",
            "Assumptions": [
                {
                    "Assumption": "Zero-day vulnerabilities exist and are exploitable.",
                    "Role": "System Designer",
                    "Condition": "Vulnerabilities are unknown and unpatched."
                },
                {
                    "Assumption": "Attackers have the tools and knowledge to exploit these zero-day vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Attackers possess necessary exploit tools."
                },
                {
                    "Assumption": "Security measures do not adequately mitigate zero-day exploitation.",
                    "Role": "System Administrator",
                    "Condition": "Mitigation strategies for zero-days are weak."
                }
            ],
            "Potential Impact": "Full administrative control over the GCS, leading to potential system-wide disruptions.",
            "MITRE ATT&CK Keywords": [
                "zero-day vulnerabilities",
                "GCS control",
                "administrative access",
                "system takeover"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "3",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a drone to gain unauthorized access to the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Drones use weak or poorly implemented authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Authentication mechanism is not rigorously tested and protected."
                },
                {
                    "Assumption": "The attacker has knowledge of drone communication protocols.",
                    "Role": "Attacker",
                    "Condition": "Attacker is capable of reverse-engineering drone firmware."
                },
                {
                    "Assumption": "The attacker has access to the network used by the drones.",
                    "Role": "Attacker",
                    "Condition": "Network is insufficiently monitored or lacks security controls."
                }
            ],
            "Potential Impact": "Unauthorized control of drone operations, leading to potential data breaches and mission disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "identity fraud"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs GPS signals to redirect drones.",
            "Assumptions": [
                {
                    "Assumption": "Drones rely primarily on GPS signals for navigation.",
                    "Role": "Attacker",
                    "Condition": "Drones lack redundant navigation systems."
                },
                {
                    "Assumption": "The attacker can generate strong GPS signals to overshadow genuine ones.",
                    "Role": "Attacker",
                    "Condition": "Attacker possesses GPS jamming equipment."
                },
                {
                    "Assumption": "The attacker's equipment is within range of the target drones.",
                    "Role": "Attacker",
                    "Condition": "Drones operate in a close proximity to the attacker."
                }
            ],
            "Potential Impact": "Drones navigate to incorrect locations, risking mission failure and potential loss of UAVs.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "device",
                "navigation interference"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user to access cloud services holding sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid user credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are compromised or exposed through phishing or data breaches."
                },
                {
                    "Assumption": "Cloud services do not enforce multi-factor authentication.",
                    "Role": "Attacker",
                    "Condition": "Only single-factor authentication is in place."
                },
                {
                    "Assumption": "User behavior monitoring is insufficient to detect anomalies.",
                    "Role": "Attacker",
                    "Condition": "Cloud services lack effective behavioral analytics."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and potential leak of confidential information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "cloud services",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Application Access Token",
                "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\n",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "technique_id": "T1527"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Firmware of drones is altered to include malicious code.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update process is not securely managed.",
                    "Role": "Attacker",
                    "Condition": "Updates are not signed or verified."
                },
                {
                    "Assumption": "The attacker can access the update distribution point.",
                    "Role": "Attacker",
                    "Condition": "Distribution infrastructure is compromised."
                },
                {
                    "Assumption": "Firmware files are stored in an unprotected repository.",
                    "Role": "Attacker",
                    "Condition": "Repository lacks access control and integrity checks."
                }
            ],
            "Potential Impact": "Drones execute unauthorized actions, leading to system compromise and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device",
                "code injection"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies in-transit data between drones and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Data communications are not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Communications use plain text protocols."
                },
                {
                    "Assumption": "The attacker has access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Communication channels are inadequately protected or monitored."
                },
                {
                    "Assumption": "Integrity checks on data are absent or weak.",
                    "Role": "Attacker",
                    "Condition": "Data lacks robust hashing or signing mechanisms."
                }
            ],
            "Potential Impact": "Critical mission data is altered, leading to incorrect decisions and actions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "man-in-the-middle",
                "encrypted data",
                "communication channels"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious payloads into sensor data being sent to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Sensor data is not validated or sanitized.",
                    "Role": "Attacker",
                    "Condition": "Data collection lacks strict validation rules."
                },
                {
                    "Assumption": "Cloud services process data without thorough inspection.",
                    "Role": "Attacker",
                    "Condition": "Cloud services prioritize speed over security checks."
                },
                {
                    "Assumption": "The attacker has access to intermediate data relay points.",
                    "Role": "Attacker",
                    "Condition": "Relay points lack appropriate security controls."
                }
            ],
            "Potential Impact": "Cloud services process corrupted data, affecting analytics and potentially leading to misinformation.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data injection",
                "sensor",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Cloud Account",
                "description": "Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)\n\nIn addition to user accounts, cloud accounts may be associated with services. Cloud providers handle the concept of service accounts in different ways. In Azure, service accounts include service principals and managed identities, which can be linked to various resources such as OAuth applications, serverless functions, and virtual machines in order to grant those resources permissions to perform various activities in the environment.(Citation: Microsoft Entra ID Service Principals) In GCP, service accounts can also be linked to specific resources, as well as be impersonated by other accounts for [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005).(Citation: GCP Service Accounts) While AWS has no specific concept of service accounts, resources can be directly granted permission to assume roles.(Citation: AWS Instance Profiles)(Citation: AWS Lambda Execution Role)\n\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.\n\nOnce an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by adding [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) or assigning [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--a009cb25-4801-4116-9105-80a91cf15c1b",
                "technique_id": "T1136.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker claims plausible deniability after issuing commands to drones.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are weak or non-existent.",
                    "Role": "Attacker",
                    "Condition": "System does not enforce comprehensive logging."
                },
                {
                    "Assumption": "Log integrity is not maintained.",
                    "Role": "Attacker",
                    "Condition": "Logs can be modified or deleted by unauthorized users."
                },
                {
                    "Assumption": "Authentication logs do not capture sufficient detail.",
                    "Role": "Attacker",
                    "Condition": "Logs lack necessary granularity or metadata."
                }
            ],
            "Potential Impact": "Inability to trace malicious activities back to the attacker, complicating forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "audit trail",
                "forensic analysis"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies logs to erase traces of unauthorized access to sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Log data is accessible without rigorous access controls.",
                    "Role": "Attacker",
                    "Condition": "Logs are stored in unprotected locations."
                },
                {
                    "Assumption": "Log modifications are not detected.",
                    "Role": "Attacker",
                    "Condition": "No integrity checks are enforced on log data."
                },
                {
                    "Assumption": "Logging system does not employ encryption.",
                    "Role": "Attacker",
                    "Condition": "Logs are stored in plaintext format."
                }
            ],
            "Potential Impact": "Loss of audit trail, hindering incident response and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "audit trail",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operator actions are falsely denied by attackers due to lack of proper non-repudiation measures.",
            "Assumptions": [
                {
                    "Assumption": "Operator actions are not securely logged.",
                    "Role": "Attacker",
                    "Condition": "Logs do not use verifiable identities."
                },
                {
                    "Assumption": "Operators are not required to authenticate for all critical actions.",
                    "Role": "Attacker",
                    "Condition": "Authentication policies are lax for certain operations."
                },
                {
                    "Assumption": "No tamper-evident mechanisms for logs.",
                    "Role": "Attacker",
                    "Condition": "Logs can be altered without detection."
                }
            ],
            "Potential Impact": "Operators face false allegations or denial of actions leading to accountability issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "operator actions",
                "authentication",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted during communication between drones and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "Attacker",
                    "Condition": "Use of plain text protocols."
                },
                {
                    "Assumption": "Communication channels are accessible by attackers.",
                    "Role": "Attacker",
                    "Condition": "Network lacks sufficient protective measures."
                },
                {
                    "Assumption": "No robust end-to-end encryption.",
                    "Role": "Attacker",
                    "Condition": "Encryption is only applied at specific segments."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "unencrypted communication",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to data stored in cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud access controls are weak or misconfigured.",
                    "Role": "Attacker",
                    "Condition": "Permissions are overly permissive or incorrect."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest.",
                    "Role": "Attacker",
                    "Condition": "Data is stored in plaintext."
                },
                {
                    "Assumption": "Attackers have valid credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are compromised or weak."
                }
            ],
            "Potential Impact": "Leakage of confidential information and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud services",
                "data access",
                "misconfiguration"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data collected by drones is exfiltrated by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Drones store data locally before transmission.",
                    "Role": "Attacker",
                    "Condition": "Data storage is vulnerable to access or attack."
                },
                {
                    "Assumption": "Data is not encrypted while stored on the drone.",
                    "Role": "Attacker",
                    "Condition": "Drones use unencrypted storage solutions."
                },
                {
                    "Assumption": "The attacker gains physical access to the drone.",
                    "Role": "Attacker",
                    "Condition": "Drones are left unattended."
                }
            ],
            "Potential Impact": "Compromise of sensitive data collected by the drone.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data exfiltration",
                "local storage",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Local Data Staging",
                "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
                "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
                "technique_id": "T1074.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial-of-service (DDoS) attack targets the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The GCS is publicly accessible over the internet.",
                    "Role": "Attacker",
                    "Condition": "GCS endpoints are exposed to public networks."
                },
                {
                    "Assumption": "No effective DDoS mitigation mechanisms are in place.",
                    "Role": "Attacker",
                    "Condition": "System lacks DDoS protection services."
                },
                {
                    "Assumption": "Attackers have access to botnets.",
                    "Role": "Attacker",
                    "Condition": "Botnets are available to overwhelm the target."
                }
            ],
            "Potential Impact": "Disruption of command and control functions, impacting all connected drones.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "public internet",
                "botnet"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Firmware or software update for drones is corrupted, causing operational failures.",
            "Assumptions": [
                {
                    "Assumption": "Update files are not validated for integrity.",
                    "Role": "Attacker",
                    "Condition": "Updates lack cryptographic signatures or validation."
                },
                {
                    "Assumption": "Update distribution channel can be tampered with.",
                    "Role": "Attacker",
                    "Condition": "Distribution lacks secure transport mechanisms."
                },
                {
                    "Assumption": "No rollback mechanisms for updates.",
                    "Role": "Attacker",
                    "Condition": "Firmware lacks the ability to revert to a known good state."
                }
            ],
            "Potential Impact": "Drone operational failures and potential system-wide outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "firmware update",
                "operation failure",
                "integrity validation"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An adversary floods the communication channels between drones and the GCS, causing interruption.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels do not have adequate bandwidth or redundancy.",
                    "Role": "Attacker",
                    "Condition": "Channels are easily saturated or interrupted."
                },
                {
                    "Assumption": "Attackers can send high volumes of traffic to the channels.",
                    "Role": "Attacker",
                    "Condition": "Attackers understand the protocols and endpoints."
                },
                {
                    "Assumption": "Channels are not effectively monitored for traffic anomalies.",
                    "Role": "Attacker",
                    "Condition": "Monitoring tools are insufficient or ineffective."
                }
            ],
            "Potential Impact": "Temporary loss of control and data communication with drones.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "communication flood",
                "interruption",
                "channel saturation"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the drone firmware to gain higher permissions.",
            "Assumptions": [
                {
                    "Assumption": "Firmware contains exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Firmware vulnerabilities are undiscovered or unpatched."
                },
                {
                    "Assumption": "Attackers gain physical or remote access to the drone.",
                    "Role": "Attacker",
                    "Condition": "Drones are inadequately secured."
                },
                {
                    "Assumption": "Security patches are not promptly applied.",
                    "Role": "System admin",
                    "Condition": "Patch management processes are delayed or irregular."
                }
            ],
            "Potential Impact": "Unauthorized access and control of drone functions, potentially compromising missions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware vulnerability",
                "remote access",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses privilege escalation techniques to gain administrative rights on the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The GCS runs services with outdated software components.",
                    "Role": "Attacker",
                    "Condition": "System critical updates are delayed or neglected."
                },
                {
                    "Assumption": "Privilege escalation vulnerabilities exist in the GCS software.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities are not identified or mitigated."
                },
                {
                    "Assumption": "The attacker has initial access to a low-privilege account.",
                    "Role": "Attacker",
                    "Condition": "System access control are inadequately enforced."
                }
            ],
            "Potential Impact": "Complete system takeover, unauthorized actions, and critical data exposure.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "software vulnerability",
                "administrative rights",
                "system takeover"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits cloud service configuration flaws to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are misconfigured to allow overly permissive access.",
                    "Role": "Attacker",
                    "Condition": "Access controls are poorly defined or scheduled assessments are missed."
                },
                {
                    "Assumption": "The attacker has valid low-level credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are compromised or stolen."
                },
                {
                    "Assumption": "Cloud environments lack real-time monitoring.",
                    "Role": "System admin",
                    "Condition": "Security monitoring mechanisms are not in place or ineffective."
                }
            ],
            "Potential Impact": "Unauthorized administrative control over cloud resources and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud services",
                "misconfiguration",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "1",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake Ground Control Station (GCS) to issue commands to UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of the GCS communication protocols",
                    "Role": "Attacker",
                    "Condition": "The GCS communication protocols are not sufficiently secure or encrypted"
                },
                {
                    "Assumption": "The drones do not strongly authenticate GCS commands",
                    "Role": "Drone System",
                    "Condition": "The authentication mechanisms are weak or non-existent"
                },
                {
                    "Assumption": "The network does not have sufficient monitoring",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient network monitoring setup"
                }
            ],
            "Potential Impact": "Compromise of UAV command integrity and unauthorized drone control",
            "MITRE ATT&CK Keywords": [
                "Network Spoofing",
                "Command Injection",
                "Communication Layer"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a stolen operator's credentials to gain access to the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to stolen credentials",
                    "Role": "Attacker",
                    "Condition": "Credential theft via phishing or other means"
                },
                {
                    "Assumption": "The system does not employ multi-factor authentication",
                    "Role": "System Administrator",
                    "Condition": "Single-factor authentication is used"
                },
                {
                    "Assumption": "Credential management policies are weak",
                    "Role": "IT Security",
                    "Condition": "Lack of robust credential management"
                }
            ],
            "Potential Impact": "Confidentiality breaches and loss of drone operational control",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Phishing",
                "Identity Theft"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legit drone maintenance service to update UAV firmware with malicious code.",
            "Assumptions": [
                {
                    "Assumption": "No strong verification of the maintenance service identity",
                    "Role": "System Admin",
                    "Condition": "Weak vendor verification processes"
                },
                {
                    "Assumption": "The attacker has access to the UAV firmware distribution process",
                    "Role": "Attacker",
                    "Condition": "The supply chain is compromised"
                },
                {
                    "Assumption": "Lack of firmware integrity checks on the UAV",
                    "Role": "Drone System",
                    "Condition": "Firmware uploaded without verification"
                }
            ],
            "Potential Impact": "Data tampering and elevated control over UAV systems",
            "MITRE ATT&CK Keywords": [
                "Firmware Modification",
                "Supply Chain Attack",
                "Identity Spoofing"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actor injects harmful code into the cloud-based data analytics service.",
            "Assumptions": [
                {
                    "Assumption": "Loopholes exist in cloud service input validation",
                    "Role": "Cloud Service Developer",
                    "Condition": "Insufficient input validation and sanitization"
                },
                {
                    "Assumption": "The attacker can access cloud service endpoints",
                    "Role": "Attacker",
                    "Condition": "Endpoints are unsecured or poorly monitored"
                },
                {
                    "Assumption": "Error logging does not reveal injected code",
                    "Role": "System Monitor",
                    "Condition": "Error logging is improperly configured"
                }
            ],
            "Potential Impact": "Corruption of analytics data and misleading conclusions",
            "MITRE ATT&CK Keywords": [
                "Code Injection",
                "Cloud Service",
                "Data Tampering"
            ],
            "mitre_technique": {
                "name": "Reflective Code Loading",
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).\n\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",
                "id": "attack-pattern--4933e63b-9b77-476e-ab29-761bc5b7d15a",
                "technique_id": "T1620"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Firmware on UAVs is modified to bypass security checks.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update mechanisms are insecure",
                    "Role": "System Developer",
                    "Condition": "Lack of secure update protocols"
                },
                {
                    "Assumption": "UAV physical security is compromised",
                    "Role": "Attacker",
                    "Condition": "Direct physical access to UAVs"
                },
                {
                    "Assumption": "Firmware versions are not verified",
                    "Role": "System Administrator",
                    "Condition": "Update processes lack verification steps"
                }
            ],
            "Potential Impact": "Compromised drone operation and potential hijack",
            "MITRE ATT&CK Keywords": [
                "Firmware Tampering",
                "Secure Update Failure",
                "Physical Access Attacks"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies transmitted data between UAV and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted",
                    "Role": "System Developer",
                    "Condition": "Absence of end-to-end encryption"
                },
                {
                    "Assumption": "No integrity verification of transmitted data",
                    "Role": "Network Administrator",
                    "Condition": "Checksum verification not implemented"
                },
                {
                    "Assumption": "Poor network security measures",
                    "Role": "Network Security",
                    "Condition": "Insufficient network access controls"
                }
            ],
            "Potential Impact": "Data integrity loss and unreliable drone operations",
            "MITRE ATT&CK Keywords": [
                "Man-in-the-Middle",
                "Data Interception",
                "Communication Tampering"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies issuing a particular command to a UAV.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient audit trails for commands",
                    "Role": "System Designer",
                    "Condition": "Logging mechanisms are weak or nonexistent"
                },
                {
                    "Assumption": "Commands can be issued anonymously",
                    "Role": "System Developer",
                    "Condition": "Lack of user identification and authentication"
                },
                {
                    "Assumption": "Lack of digital signatures for commands",
                    "Role": "System Developer",
                    "Condition": "Unimplemented or ignored digital signature requirements"
                }
            ],
            "Potential Impact": "Accountability issues and difficulty in incident investigation",
            "MITRE ATT&CK Keywords": [
                "Audit Evasion",
                "Command Repudiation",
                "Log Manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Data logs on the cloud service are tampered with to hide unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Weak log management practices",
                    "Role": "IT Security",
                    "Condition": "Logs are not properly secured or monitored"
                },
                {
                    "Assumption": "No hash verification for logs",
                    "Role": "System Admin",
                    "Condition": "Logs are stored without integrity checks"
                },
                {
                    "Assumption": "The cloud service is vulnerable to admin account compromise",
                    "Role": "Attacker",
                    "Condition": "Administrator accounts are poorly secured"
                }
            ],
            "Potential Impact": "Compromised non-repudiation and forensic evidence",
            "MITRE ATT&CK Keywords": [
                "Log Evasion",
                "Cloud Log Tampering",
                "Security Evasion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A GCS operator denies collecting sensitive data during a mission.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive data collection is not logged distinctly",
                    "Role": "System Developer",
                    "Condition": "Lack of detailed audit logs"
                },
                {
                    "Assumption": "Weak user role management",
                    "Role": "System Administrator",
                    "Condition": "Roles and permissions are poorly defined"
                },
                {
                    "Assumption": "No dual control processes",
                    "Role": "System Designer",
                    "Condition": "Absence of verification mechanisms for critical actions"
                }
            ],
            "Potential Impact": "Discrepancies in data collection accountability",
            "MITRE ATT&CK Keywords": [
                "Audit Evasion",
                "Role Manipulation",
                "Data Collection Denial"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted during transmission between UAVs and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted",
                    "Role": "Network Security",
                    "Condition": "Lack of encryption in data transmission"
                },
                {
                    "Assumption": "Weak network monitoring",
                    "Role": "Network Administrator",
                    "Condition": "Limited or no network monitoring in place"
                },
                {
                    "Assumption": "No use of secure communication protocols",
                    "Role": "System Developer",
                    "Condition": "Outdated or insecure communication protocols"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive mission data",
            "MITRE ATT&CK Keywords": [
                "Data Interception",
                "Eavesdropping",
                "Network Sniffing"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud storage breach exposing mission-critical data.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls for cloud storage",
                    "Role": "Cloud Administrator",
                    "Condition": "Inadequate access control policies"
                },
                {
                    "Assumption": "Unpatched cloud service vulnerabilities",
                    "Role": "Service Provider",
                    "Condition": "Outdated or unpatched security vulnerabilities"
                },
                {
                    "Assumption": "Improperly configured cloud storage permissions",
                    "Role": "System Administrator",
                    "Condition": "Misconfigured access permissions"
                }
            ],
            "Potential Impact": "Exposure of sensitive information stored on the cloud",
            "MITRE ATT&CK Keywords": [
                "Cloud Service Compromise",
                "Data Breach",
                "Access Control Failure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "UAV sensors data being intercepted during data upload to cloud service.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted data transfer channels",
                    "Role": "System Developer",
                    "Condition": "Data transfer without encryption"
                },
                {
                    "Assumption": "Invalid certificate management",
                    "Role": "IT Security",
                    "Condition": "Certificates are improperly managed or invalid"
                },
                {
                    "Assumption": "Weak endpoint protection",
                    "Role": "System Administrator",
                    "Condition": "Endpoints lack appropriate protection mechanisms"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensor-collected data",
            "MITRE ATT&CK Keywords": [
                "Data Interception",
                "Upload Sniffing",
                "Endpoint Vulnerability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the GCS causing communication disruption with UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The GCS has limited capacity to handle high traffic",
                    "Role": "System Administrator",
                    "Condition": "Insufficient resources to manage high traffic volumes"
                },
                {
                    "Assumption": "No traffic filtering mechanisms in place",
                    "Role": "Network Security",
                    "Condition": "Lack of proper traffic filtering controls"
                },
                {
                    "Assumption": "The attacker has enough botnet resources",
                    "Role": "Attacker",
                    "Condition": "Availability of sufficient botnet resources"
                }
            ],
            "Potential Impact": "Disruption of UAV operations and mission aborts",
            "MITRE ATT&CK Keywords": [
                "DDoS Attack",
                "Network Flooding",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A vulnerability in the UAV firmware allows an attacker to crash the drone.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities exist in the UAV firmware",
                    "Role": "System Developer",
                    "Condition": "Unpatched or legacy firmware versions"
                },
                {
                    "Assumption": "Attackers have knowledge of the vulnerability",
                    "Role": "Attacker",
                    "Condition": "Publicly disclosed vulnerabilities"
                },
                {
                    "Assumption": "Lack of redundancy in UAV control systems",
                    "Role": "System Designer",
                    "Condition": "No failover mechanisms in place"
                }
            ],
            "Potential Impact": "Loss of UAV functionality and possible physical damage",
            "MITRE ATT&CK Keywords": [
                "Firmware Exploitation",
                "Resource Exhaustion",
                "Service Crash"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Bot attacks on cloud service causing data processing delays.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are not designed for high traffic",
                    "Role": "Cloud Administrator",
                    "Condition": "Poor scalability of cloud resources"
                },
                {
                    "Assumption": "Lack of anti-DDoS measures",
                    "Role": "Cloud Service Provider",
                    "Condition": "Absence of DDoS protection services"
                },
                {
                    "Assumption": "Attackers have access to significant bot resources",
                    "Role": "Attacker",
                    "Condition": "Control over a large number of bots"
                }
            ],
            "Potential Impact": "Reduction in data processing efficiency and availability",
            "MITRE ATT&CK Keywords": [
                "Cloud Service Attack",
                "Traffic Flooding",
                "Processing Delay"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the drone's embedded system to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Embedded system has exploitable vulnerabilities",
                    "Role": "System Developer",
                    "Condition": "Outdated or unpatched firmware"
                },
                {
                    "Assumption": "The attacker has access to detailed system knowledge",
                    "Role": "Attacker",
                    "Condition": "Possession of technical specifications"
                },
                {
                    "Assumption": "No advanced privilege control mechanisms",
                    "Role": "System Designer",
                    "Condition": "Lack of robust privilege control"
                }
            ],
            "Potential Impact": "Full control over drone operations and potential data breaches",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "System Vulnerability",
                "Embedded System Exploit"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on GCS to access critical drone control functions.",
            "Assumptions": [
                {
                    "Assumption": "Weak privilege segmentation in the GCS",
                    "Role": "IT Security",
                    "Condition": "Poor role and privilege management"
                },
                {
                    "Assumption": "Exploitable software vulnerabilities in the GCS",
                    "Role": "System Developer",
                    "Condition": "Unpatched software vulnerabilities"
                },
                {
                    "Assumption": "The attacker can gain initial access to the GCS",
                    "Role": "Attacker",
                    "Condition": "Initial access through phishing or other means"
                }
            ],
            "Potential Impact": "Unauthorized access to critical GCS functions jeopardizing mission control",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Critical Access",
                "GCS Vulnerability Exploit"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a cloud service misconfiguration to gain admin privileges.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigurations present in cloud service setup",
                    "Role": "Cloud Administrator",
                    "Condition": "Improper setup of access controls"
                },
                {
                    "Assumption": "The attacker can identify and exploit misconfigurations",
                    "Role": "Attacker",
                    "Condition": "Skilled knowledge of cloud infrastructures"
                },
                {
                    "Assumption": "No regular review of cloud configurations",
                    "Role": "IT Security",
                    "Condition": "Lack of configuration audits"
                }
            ],
            "Potential Impact": "Full administrative control over the DaaS infrastructure for malicious use",
            "MITRE ATT&CK Keywords": [
                "Cloud Misconfiguration",
                "Privilege Escalation",
                "Admin Access"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "4",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a legitimate drone operator's identity to gain control of UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access or mimic control protocols used by the GCS.",
                    "Role": "Attacker",
                    "Condition": "Access to communication channels or exploiting weak authentication mechanisms."
                },
                {
                    "Assumption": "The communication between UAVs and the GCS is not sufficiently encrypted or verified.",
                    "Role": "System Design",
                    "Condition": "Weak or missing encryption and authentication protocols."
                },
                {
                    "Assumption": "The UAVs rely on the GCS without additional internal identity verification processes.",
                    "Role": "UAV Firmware",
                    "Condition": "Firmware lacks internal identity checks."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, potential disruption of drone missions.",
            "MITRE ATT&CK Keywords": [
                "identity spoofing",
                "communication protocols",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary creates a fake control station and tricks drones into connecting to it.",
            "Assumptions": [
                {
                    "Assumption": "Drones can be persuaded to connect to any control station without verifying its authenticity.",
                    "Role": "UAV Systems",
                    "Condition": "Lack of stringent verification of control station credentials."
                },
                {
                    "Assumption": "Attackers can broadcast stronger signals to override legitimate GCS signals.",
                    "Role": "Attacker",
                    "Condition": "Attacker\u2019s capacity to overpower legitimate signals."
                },
                {
                    "Assumption": "The UAV communication protocols are susceptible to spoofing.",
                    "Role": "Communication Protocols",
                    "Condition": "Weakness in spoof prevention mechanisms within protocols."
                }
            ],
            "Potential Impact": "Interruption and redirection of drone missions, unauthorized data collection.",
            "MITRE ATT&CK Keywords": [
                "control station spoofing",
                "signal hijacking",
                "UAV communication"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses counterfeit GPS signals to misguide UAV navigation.",
            "Assumptions": [
                {
                    "Assumption": "UAVs rely solely on GPS signals for navigation without cross-checking other data.",
                    "Role": "UAV Navigation Systems",
                    "Condition": "Navigation systems use unverified GPS data."
                },
                {
                    "Assumption": "Attackers have the capability to generate counterfeit GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Access to technology for GPS signal generation."
                },
                {
                    "Assumption": "The system does not have robust validation mechanisms for GPS signals.",
                    "Role": "System Design",
                    "Condition": "Lack of multi-source verification for GPS data."
                }
            ],
            "Potential Impact": "Loss of drone control, unauthorized actions, potential data loss.",
            "MITRE ATT&CK Keywords": [
                "GPS spoofing",
                "navigation hijacking",
                "signal interference"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to UAVs and installs malicious firmware.",
            "Assumptions": [
                {
                    "Assumption": "UAVs are not physically secured when not in operation.",
                    "Role": "Operational Security",
                    "Condition": "Insufficient physical security measures."
                },
                {
                    "Assumption": "Firmware update process lacks robust authentication and verification.",
                    "Role": "Firmware Update System",
                    "Condition": "Weakness in the firmware update authentication process."
                },
                {
                    "Assumption": "Attackers have the necessary tools to flash new firmware onto UAVs.",
                    "Role": "Attacker",
                    "Condition": "Access to necessary hardware and software tools for firmware modification."
                }
            ],
            "Potential Impact": "Corruption of onboard systems, loss of data integrity, potential UAV hijack.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "physical access",
                "unauthorized firmware"
            ],
            "mitre_technique": {
                "name": "ROMMONkit",
                "description": "Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect. (Citation: Cisco Synful Knock Evolution)(Citation: Cisco Blog Legacy Device Attacks)\n\n\nROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar to [TFTP Boot](https://attack.mitre.org/techniques/T1542/005), an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect.",
                "id": "attack-pattern--a6557c75-798f-42e4-be70-ab4502e0a3bc",
                "technique_id": "T1542.004"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies communication between UAVs and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels between UAVs and GCS are not end-to-end encrypted.",
                    "Role": "System Design",
                    "Condition": "Lack of encryption on communication channels."
                },
                {
                    "Assumption": "Attacker has access to the network used for UAV-GCS communication.",
                    "Role": "Attacker",
                    "Condition": "Proximity to the communication network or network infiltration."
                },
                {
                    "Assumption": "Integrity checks on communicated data are weak or non-existent.",
                    "Role": "Communication Protocols",
                    "Condition": "Absence of robust data integrity verification."
                }
            ],
            "Potential Impact": "Modified data leading to incorrect UAV behavior, potential data leaks.",
            "MITRE ATT&CK Keywords": [
                "network tampering",
                "data interception",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the cloud-stored data of drone missions.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services lack robust access controls and data integrity verification.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Weak access management and data integrity protocols."
                },
                {
                    "Assumption": "Attacker can gain credentials to access cloud-based data stores.",
                    "Role": "Attacker",
                    "Condition": "Successful phishing or exploitation of weak credential management."
                },
                {
                    "Assumption": "No audit log or monitoring for unusual data modification activities.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of real-time monitoring and anomaly detection."
                }
            ],
            "Potential Impact": "Compromised mission data integrity, potentially leading to incorrect strategic decisions.",
            "MITRE ATT&CK Keywords": [
                "cloud tampering",
                "data integrity",
                "credential access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs unauthorized actions and denies responsibility due to lack of logging.",
            "Assumptions": [
                {
                    "Assumption": "The system does not employ comprehensive logging of all user actions.",
                    "Role": "System Design",
                    "Condition": "Missing or insufficient logging mechanisms."
                },
                {
                    "Assumption": "Logs that do exist can be modified or deleted to hide unauthorized actions.",
                    "Role": "Attacker",
                    "Condition": "Access to log files without tamper-evident controls."
                },
                {
                    "Assumption": "System audits are infrequent or do not thoroughly check log integrity.",
                    "Role": "System Auditors",
                    "Condition": "Inadequate or infrequent auditing procedures."
                }
            ],
            "Potential Impact": "Difficulties in tracking and responding to unauthorized activities, potential undetected breaches.",
            "MITRE ATT&CK Keywords": [
                "log evasion",
                "unauthorized actions",
                "audit failures"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A drone operator disclaims responsibility for a mission failure blaming an alleged system glitch.",
            "Assumptions": [
                {
                    "Assumption": "System logs are insufficient to clarify operator actions and system states during missions.",
                    "Role": "System Design",
                    "Condition": "Lack of detailed and tamper-evident logging."
                },
                {
                    "Assumption": "The system's audit trails are not cross-verified with independent data sources.",
                    "Role": "System Design",
                    "Condition": "Non-existent independent verification mechanisms."
                },
                {
                    "Assumption": "Operators can manipulate recorded data or create false logs.",
                    "Role": "Drone Operator",
                    "Condition": "Access to log creation or modification tools."
                }
            ],
            "Potential Impact": "Unresolved accountability issues, potential for recurring system misuse.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "operator repudiation",
                "system glitch blame"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny sending or receiving sensitive communications due to lack of cryptographic mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Communications are not digitally signed or properly encrypted.",
                    "Role": "System Design",
                    "Condition": "Lack of use of encryption and digital signatures."
                },
                {
                    "Assumption": "The system lacks mechanisms to verify the integrity and origin of communications.",
                    "Role": "System Design",
                    "Condition": "No cryptographic verification mechanisms in place."
                },
                {
                    "Assumption": "Attacker intercepts and modifies communications to cause confusion and misattribution.",
                    "Role": "Attacker",
                    "Condition": "Capability to intercept communications."
                }
            ],
            "Potential Impact": "Disputes over the authenticity of communications, potential unauthorized disclosure.",
            "MITRE ATT&CK Keywords": [
                "communication repudiation",
                "encryption failure",
                "message manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted during UAV-GCS communication due to weak encryption.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted or uses weak encryption protocols.",
                    "Role": "System Design",
                    "Condition": "Lack of strong encryption mechanisms."
                },
                {
                    "Assumption": "Attacker can access the communication channels used by UAVs and GCS.",
                    "Role": "Attacker",
                    "Condition": "Physical or network proximity to communication channels."
                },
                {
                    "Assumption": "System does not employ additional layers of security for sensitive data.",
                    "Role": "System Design",
                    "Condition": "Lack of multi-layered security controls."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data, potential compromise of missions.",
            "MITRE ATT&CK Keywords": [
                "data encryption",
                "network interception",
                "communication security"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to cloud-stored data due to weak access controls.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage does not enforce robust access control policies.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Weak access control mechanisms in place."
                },
                {
                    "Assumption": "Attackers exploit stolen credentials or privilege escalation vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Phishing or exploiting vulnerabilities."
                },
                {
                    "Assumption": "There is no encryption for data at rest on cloud storage.",
                    "Role": "System Design",
                    "Condition": "Unencrypted data storage."
                }
            ],
            "Potential Impact": "Unauthorized data access, potential data leaks.",
            "MITRE ATT&CK Keywords": [
                "cloud access control",
                "data leakage",
                "stolen credentials"
            ],
            "mitre_technique": {
                "name": "Cloud Service Dashboard",
                "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",
                "id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
                "technique_id": "T1538"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider with legitimate access leaks sensitive operational data to unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have access to sensitive data without sufficient monitoring.",
                    "Role": "System Design",
                    "Condition": "Lack of monitoring and audits."
                },
                {
                    "Assumption": "No robust mechanisms to detect and prevent data exfiltration.",
                    "Role": "Data Security Policies",
                    "Condition": "Weak data loss prevention mechanisms."
                },
                {
                    "Assumption": "Motivated insider has access to data and can exploit it for personal gain.",
                    "Role": "Insider",
                    "Condition": "Access privileges and malicious intent."
                }
            ],
            "Potential Impact": "Potential leak of confidential data, loss of competitive or strategic advantage.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data exfiltration",
                "leaked information"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker performs a DoS attack on the GCS, disrupting drone operations.",
            "Assumptions": [
                {
                    "Assumption": "GCS has network vulnerabilities that can be exploited for DoS attacks.",
                    "Role": "System Design",
                    "Condition": "Unpatched vulnerabilities or insufficient protections."
                },
                {
                    "Assumption": "GCS lacks redundancy and failsafes to handle network unavailability.",
                    "Role": "System Design",
                    "Condition": "Single points of failure in the system."
                },
                {
                    "Assumption": "Attacker has the capability to generate substantial traffic or exploit DoS vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Access to resources for generating DoS attacks."
                }
            ],
            "Potential Impact": "Disruption of drone control, interruption of missions, potential data loss.",
            "MITRE ATT&CK Keywords": [
                "DoS attack",
                "network disruption",
                "service unavailability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious firmware installed on UAVs causes them to operate in unintended ways, disrupting service.",
            "Assumptions": [
                {
                    "Assumption": "Attackers can install malicious firmware on UAVs possibly via weak update mechanisms.",
                    "Role": "System Design",
                    "Condition": "Weak firmware update authentication."
                },
                {
                    "Assumption": "UAVs do not have safeguards against unintended or malicious firmware operations.",
                    "Role": "UAV Firmware",
                    "Condition": "Lack of safeguards and integrity checks."
                },
                {
                    "Assumption": "Attackers have access to the tools required to develop and propagate malicious firmware.",
                    "Role": "Attacker",
                    "Condition": "Control over development and installation tools."
                }
            ],
            "Potential Impact": "UAV functionality disruption, potential mission failures.",
            "MITRE ATT&CK Keywords": [
                "malicious firmware",
                "UAV disruption",
                "service interruption"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud service disruption from a DDoS attack affecting drone data processing and storage.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not have adequate protections against DDoS attacks.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Insufficient DDoS protections."
                },
                {
                    "Assumption": "System relies heavily on cloud infrastructure without local backups or redundancy.",
                    "Role": "System Design",
                    "Condition": "Dependence on cloud services."
                },
                {
                    "Assumption": "Attacker has the capability to launch a large-scale DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Access to devices for distributed attack generation."
                }
            ],
            "Potential Impact": "Disruption in data processing, storage and mission planning.",
            "MITRE ATT&CK Keywords": [
                "DDoS attack",
                "cloud disruption",
                "service availability"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a Linux kernel vulnerability to execute code with elevated privileges on the GCS.",
            "Assumptions": [
                {
                    "Assumption": "GCS is running a version of Linux with known vulnerabilities.",
                    "Role": "System Design",
                    "Condition": "Use of vulnerable Linux versions."
                },
                {
                    "Assumption": "Attackers can exploit the vulnerability to gain elevated privileges.",
                    "Role": "Attacker",
                    "Condition": "Access to exploit tools and knowledge."
                },
                {
                    "Assumption": "There are no additional protections in place to prevent privilege escalation.",
                    "Role": "System Design",
                    "Condition": "Lack of sufficient containment and access control mechanisms."
                }
            ],
            "Potential Impact": "Complete system control by an attacker, potential data compromise and system corruption.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "kernel exploit",
                "code execution"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft DLL Search) Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence. \n\nAdversaries may perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft 2269637) Adversaries may use this behavior to cause the program to load a malicious DLL. \n\nAdversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL to maintain persistence or privilege escalation. (Citation: Microsoft DLL Redirection) (Citation: Microsoft Manifests) (Citation: Mandiant Search Order)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.\n\nPrograms that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--46944654-fcc1-4f63-9dad-628102376586",
                "technique_id": "T1038"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses social engineering to obtain administrative credentials for the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud account security is primarily reliant on user credentials.",
                    "Role": "System Design",
                    "Condition": "Lack of multi-factor authentication."
                },
                {
                    "Assumption": "Attackers are skilled in social engineering techniques.",
                    "Role": "Attacker",
                    "Condition": "Possessing social engineering skills and tools."
                },
                {
                    "Assumption": "Insufficient training and awareness among cloud service administrators regarding social engineering threats.",
                    "Role": "Cloud Service Administrators",
                    "Condition": "Limited security awareness and training."
                }
            ],
            "Potential Impact": "Full access to cloud data, potential data alteration or deletion, significant service disruption.",
            "MITRE ATT&CK Keywords": [
                "social engineering",
                "credential theft",
                "cloud administration"
            ],
            "mitre_technique": {
                "name": "Compromise Accounts",
                "description": "Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts](https://attack.mitre.org/techniques/T1585)), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.(Citation: AnonHBGary)(Citation: Microsoft DEV-0537) Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries may directly leverage compromised email accounts for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).",
                "id": "attack-pattern--81033c3b-16a4-46e4-8fed-9b030dd03c4a",
                "technique_id": "T1586"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits an outdated or misconfigured API to gain elevated access within the drone management system.",
            "Assumptions": [
                {
                    "Assumption": "APIs are not regularly updated or audited for security weaknesses.",
                    "Role": "System Design",
                    "Condition": "Neglecting API security updates."
                },
                {
                    "Assumption": "Attackers have the tools and knowledge to find and exploit API vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Understanding of API exploitation techniques."
                },
                {
                    "Assumption": "The system does not have robust monitoring and alerting for API abuse.",
                    "Role": "System Monitoring",
                    "Condition": "Weak or absent API monitoring mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized elevation of privileges, capability to change critical system settings.",
            "MITRE ATT&CK Keywords": [
                "API exploitation",
                "misconfiguration",
                "privileged access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "5",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs GPS signals to the UAVs to manipulate their flight paths.",
            "Assumptions": [
                {
                    "Assumption": "The UAVs rely on GPS signals for navigation.",
                    "Role": "UAV Operator",
                    "Condition": "During operational flights."
                },
                {
                    "Assumption": "The attacker has access to highly specialized equipment.",
                    "Role": "Attacker",
                    "Condition": "Near the operational area."
                },
                {
                    "Assumption": "The GPS signal can be overridden or jammed locally.",
                    "Role": "Attacker",
                    "Condition": "During UAV missions."
                }
            ],
            "Potential Impact": "Unauthorized manipulation of UAV paths could result in mission failure or physical damage.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "navigation systems",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the authentication mechanism to impersonate a legitimate user and gain access to the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and replay communication data.",
                    "Role": "Attacker",
                    "Condition": "During legitimate operations."
                },
                {
                    "Assumption": "Weak or absent authentication methods are used.",
                    "Role": "System Administrator",
                    "Condition": "During initial setup and configuration."
                },
                {
                    "Assumption": "The attacker is within communication range.",
                    "Role": "Attacker",
                    "Condition": "Near the GCS or close to communication links."
                }
            ],
            "Potential Impact": "Unauthorized command executions and data access, leading to loss of control over the UAVs.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "authentication bypass",
                "network",
                "GCS"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses spoofed cloud service login credentials to access stored data.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service uses username-password-based authentication.",
                    "Role": "Cloud Service Admin",
                    "Condition": "During user access provision."
                },
                {
                    "Assumption": "Credentials are reused across multiple services.",
                    "Role": "User",
                    "Condition": "During regular login activity."
                },
                {
                    "Assumption": "No multifactor authentication is enforced.",
                    "Role": "System Administrator",
                    "Condition": "During account security configuration."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive stored data, leading to potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential theft",
                "cloud services",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the drone's firmware and injects malicious code.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the drone hardware.",
                    "Role": "Attacker",
                    "Condition": "During maintenance or storage."
                },
                {
                    "Assumption": "Firmware updates are not authenticated or validated.",
                    "Role": "System Administrator",
                    "Condition": "During firmware update process."
                },
                {
                    "Assumption": "Firmware has known vulnerabilities.",
                    "Role": "Software Developer",
                    "Condition": "During firmware development and deployment."
                }
            ],
            "Potential Impact": "Compromised drone operations leading to potential crashes, unauthorized data collection or remote hijacking.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "malicious code",
                "drone security"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware inserted into the Ground Control Station causes incorrect commands to be sent to UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The GCS does not have adequate malware detection mechanisms.",
                    "Role": "IT Security Team",
                    "Condition": "During system security assessments."
                },
                {
                    "Assumption": "Communications between GCS and UAVs are not encrypted.",
                    "Role": "Network Administrator",
                    "Condition": "During communications setup."
                },
                {
                    "Assumption": "The attacker has network access to the GCS.",
                    "Role": "Attacker",
                    "Condition": "During GCS operation via network vulnerabilities."
                }
            ],
            "Potential Impact": "Mission disruption, complete loss of UAV control, or altered UAV activities.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "GCS",
                "malware",
                "command injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data being transmitted between UAVs and the cloud service.",
            "Assumptions": [
                {
                    "Assumption": "Data channels between UAVs and cloud are not adequately encrypted.",
                    "Role": "System Architect",
                    "Condition": "During design and implementation."
                },
                {
                    "Assumption": "The attacker has access to the communication network.",
                    "Role": "Attacker",
                    "Condition": "During active UAV cloud communication."
                },
                {
                    "Assumption": "In-route data integrity checks are not robust.",
                    "Role": "System Developer",
                    "Condition": "During software development."
                }
            ],
            "Potential Impact": "Altered data analytics, disrupted decisions, potential leak/injection of false data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data communication",
                "cloud",
                "interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny issuing critical commands to the drones due to lack of proper event logging.",
            "Assumptions": [
                {
                    "Assumption": "No user activity logging is present.",
                    "Role": "System Administrator",
                    "Condition": "During configuration."
                },
                {
                    "Assumption": "Audit logs are poorly maintained or non-existent.",
                    "Role": "Compliance Officer",
                    "Condition": "During operations."
                },
                {
                    "Assumption": "Command authentication verification is missing.",
                    "Role": "System Developer",
                    "Condition": "During command processing."
                }
            ],
            "Potential Impact": "Difficulty in tracking actions and responses during security incident investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "event logging",
                "audit logs",
                "command denial"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user claims they did not access sensitive data due to absent access logs.",
            "Assumptions": [
                {
                    "Assumption": "Access controls and logging are not enforced.",
                    "Role": "System Administrator",
                    "Condition": "During access management setup."
                },
                {
                    "Assumption": "Sensitive data access is not monitored.",
                    "Role": "Security Auditor",
                    "Condition": "During regular audits."
                },
                {
                    "Assumption": "Shared user accounts are used.",
                    "Role": "Users",
                    "Condition": "During login and data access."
                }
            ],
            "Potential Impact": "Inability to hold users accountable for unauthorized data operations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "access control",
                "data logging",
                "user accountability"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A UAV operator denies involvement in unauthorized UAV missions.",
            "Assumptions": [
                {
                    "Assumption": "Operator actions are not logged or time-stamped.",
                    "Role": "System Administrator",
                    "Condition": "During operations logging setup."
                },
                {
                    "Assumption": "UAV command execution details are not stored.",
                    "Role": "System Developer",
                    "Condition": "During software implementation."
                },
                {
                    "Assumption": "No verification of operator commands exists.",
                    "Role": "Security Architect",
                    "Condition": "During system security design."
                }
            ],
            "Potential Impact": "Challenges in verifying legitimate operations and investigating security incidents.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command logs",
                "UAV operation",
                "mission denial"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted and leaked during transmission between drones and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted in plaintext.",
                    "Role": "Network Administrator",
                    "Condition": "During network configuration."
                },
                {
                    "Assumption": "Network traffic is not monitored.",
                    "Role": "Security Team",
                    "Condition": "During security oversight."
                },
                {
                    "Assumption": "The attacker has access to the network.",
                    "Role": "Attacker",
                    "Condition": "During data transmission."
                }
            ],
            "Potential Impact": "Unauthorized parties gain access to sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data transmission",
                "GCS",
                "network interception"
            ],
            "mitre_technique": {
                "name": "Network Address Translation Traversal",
                "description": "Adversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",
                "id": "attack-pattern--4ffc1794-ec3b-45be-9e52-42dbcb2af2de",
                "technique_id": "T1599.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud service vulnerability exploited to access stored sensitive drone data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage lacks appropriate access control mechanisms.",
                    "Role": "Cloud Administrator",
                    "Condition": "During storage setup."
                },
                {
                    "Assumption": "Vulnerable software versions are in use.",
                    "Role": "IT Maintenance Team",
                    "Condition": "During software updates."
                },
                {
                    "Assumption": "Strong data encryption policies are not followed.",
                    "Role": "Policy Maker",
                    "Condition": "During policy creation."
                }
            ],
            "Potential Impact": "Sensitive data exposure leading to potential leakage of operational insights.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "data breach",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insider threat with access to the GCS downloads sensitive mission data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient internal access restrictions.",
                    "Role": "Security Officer",
                    "Condition": "During access control approval."
                },
                {
                    "Assumption": "High-level privileges are not monitored.",
                    "Role": "System Administrator",
                    "Condition": "During user activity monitoring."
                },
                {
                    "Assumption": "Sensitive data access is not logged.",
                    "Role": "IT Team",
                    "Condition": "During logging and auditing procedures."
                }
            ],
            "Potential Impact": "Unauthorized dissemination of proprietary or mission-critical information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "GCS",
                "access control"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial of service (DDoS) attack targets the GCS, overloading it and causing a service outage.",
            "Assumptions": [
                {
                    "Assumption": "The GCS is accessible via the internet.",
                    "Role": "Network Architect",
                    "Condition": "During network design."
                },
                {
                    "Assumption": "Adequate DDoS protection is not in place.",
                    "Role": "Security Administrator",
                    "Condition": "During protective measure deployment."
                },
                {
                    "Assumption": "The attacker can generate large amounts of traffic.",
                    "Role": "Attacker",
                    "Condition": "During attack execution."
                }
            ],
            "Potential Impact": "GCS becomes unavailable, hindering UAV control and mission execution.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "GCS",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A DoS attack against UAV communication links disrupts data transmission to and from the drones.",
            "Assumptions": [
                {
                    "Assumption": "Communication links are not resilient.",
                    "Role": "Network Architect",
                    "Condition": "During communications setup."
                },
                {
                    "Assumption": "No alternate communication paths are available.",
                    "Role": "System Designer",
                    "Condition": "During system design."
                },
                {
                    "Assumption": "The attacker can interfere with communication frequencies.",
                    "Role": "Attacker",
                    "Condition": "During communication link operations."
                }
            ],
            "Potential Impact": "Disrupted UAV operations potentially leading to loss of control or mission failure.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "communication links",
                "UAV",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of firmware vulnerabilities leads to firmware crashes, rendering the UAVs inoperative.",
            "Assumptions": [
                {
                    "Assumption": "The firmware contains exploitable vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "During firmware development and deployment."
                },
                {
                    "Assumption": "Exploitation mitigation techniques are not implemented.",
                    "Role": "Security Team",
                    "Condition": "During security assessment and updates."
                },
                {
                    "Assumption": "The attacker has knowledge of the firmware vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "During reconnaissance and exploitation."
                }
            ],
            "Potential Impact": "UAVs become non-functional, halting operations and potentially leading to crashes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "firmware",
                "vulnerabilities",
                "UAV operations"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of vulnerabilities in UAV firmware allows the attacker to gain administrative privileges over the UAV.",
            "Assumptions": [
                {
                    "Assumption": "Firmware vulnerabilities are known and unpatched.",
                    "Role": "System Administrator",
                    "Condition": "During regular updates."
                },
                {
                    "Assumption": "The attacker has physical or remote access.",
                    "Role": "Attacker",
                    "Condition": "During operational or maintenance periods."
                },
                {
                    "Assumption": "Administrative functionalities are poorly secured.",
                    "Role": "System Developer",
                    "Condition": "During firmware design."
                }
            ],
            "Potential Impact": "Full control over UAV operations and the ability to execute arbitrary code.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware vulnerabilities",
                "UAV",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a GCS vulnerability to gain higher privileges and execute arbitrary commands.",
            "Assumptions": [
                {
                    "Assumption": "Known vulnerabilities in the GCS software exist.",
                    "Role": "Software Developer",
                    "Condition": "During GCS software updates."
                },
                {
                    "Assumption": "No privilege separation is implemented.",
                    "Role": "System Architect",
                    "Condition": "During system design."
                },
                {
                    "Assumption": "The attacker has network access to the GCS.",
                    "Role": "Attacker",
                    "Condition": "During GCS operational periods."
                }
            ],
            "Potential Impact": "Complete compromise of GCS operations and unauthorized command execution.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "GCS vulnerabilities",
                "command execution",
                "network"
            ],
            "mitre_technique": {
                "name": "Socket Filters",
                "description": "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
                "id": "attack-pattern--005cc321-08ce-4d17-b1ea-cb5275926520",
                "technique_id": "T1205.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting cloud service misconfigurations to escalate privileges and gain access to restricted drone mission data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are misconfigured with over-permissive access controls.",
                    "Role": "Cloud Administrator",
                    "Condition": "During cloud setup and configuration."
                },
                {
                    "Assumption": "Lack of monitoring and alerting on privilege changes.",
                    "Role": "Security Team",
                    "Condition": "During continuous monitoring."
                },
                {
                    "Assumption": "The attacker has valid credentials or exploits user privileges.",
                    "Role": "Attacker",
                    "Condition": "During cloud service access."
                }
            ],
            "Potential Impact": "Unauthorized data exfiltration and potential tampering with sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud service",
                "misconfiguration",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "6",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate Ground Control Station (GCS) to hijack communication with UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network used by the GCS and UAVs.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "The attacker has sufficient technical knowledge to mimic the GCS protocol.",
                    "Role": "Attacker",
                    "Condition": "Technical expertise"
                },
                {
                    "Assumption": "The communication protocol lacks strong authentication mechanisms.",
                    "Role": "System",
                    "Condition": "Weak authentication"
                }
            ],
            "Potential Impact": "Loss of command and control over UAVs, leading to mission failure or malicious activities.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network",
                "Impersonation",
                "Command and Control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake drone to interact with the GCS and gain unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can physically or remotely control a drone that can appear legitimate to the GCS.",
                    "Role": "Attacker",
                    "Condition": "Drone access"
                },
                {
                    "Assumption": "The attacker knows or can guess the credentials or communication parameters used by legitimate drones.",
                    "Role": "Attacker",
                    "Condition": "Credential discovery"
                },
                {
                    "Assumption": "GCS does not perform thorough verification of drone identities.",
                    "Role": "System",
                    "Condition": "Weak identity verification"
                }
            ],
            "Potential Impact": "Unauthorized drone could collect sensitive data or disrupt legitimate drone operations.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Device",
                "Authentication",
                "Drone"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker fakes a legitimate user\u2019s credentials to access cloud services and retrieve sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can steal or guess user credentials.",
                    "Role": "Attacker",
                    "Condition": "Credential theft"
                },
                {
                    "Assumption": "There are no multi-factor authentication mechanisms in place.",
                    "Role": "System",
                    "Condition": "Lack of MFA"
                },
                {
                    "Assumption": "Cloud service access logs are not monitored for unusual activity.",
                    "Role": "System",
                    "Condition": "Inadequate monitoring"
                }
            ],
            "Potential Impact": "Unauthorized access to and potential exfiltration of sensitive data from cloud services.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credentials",
                "Cloud Service",
                "Access"
            ],
            "mitre_technique": {
                "name": "Direct Volume Access",
                "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\n\nUtilities, such as `NinjaCopy`, exist to perform these actions in PowerShell.(Citation: Github PowerSploit Ninjacopy) Adversaries may also use built-in or third-party utilities (such as `vssadmin`, `wbadmin`, and [esentutl](https://attack.mitre.org/software/S0404)) to create shadow copies or backups of data from system volumes.(Citation: LOLBAS Esentutl)",
                "id": "attack-pattern--0c8ab3eb-df48-4b9c-ace7-beacaac81cc5",
                "technique_id": "T1006"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of UAVs to alter their behavior or functionality.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains access to the UAVs' firmware update process.",
                    "Role": "Attacker",
                    "Condition": "Firmware access"
                },
                {
                    "Assumption": "The firmware update mechanism lacks integrity checks.",
                    "Role": "System",
                    "Condition": "Weak integrity controls"
                },
                {
                    "Assumption": "The attacker has the technical expertise to modify embedded system code.",
                    "Role": "Attacker",
                    "Condition": "Technical expertise"
                }
            ],
            "Potential Impact": "Altered drone functionality can lead to mission compromise, data corruption, or UAV destruction.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware",
                "Data Integrity",
                "Embedded System"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data packets transmitted between UAVs and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the ability to capture and alter network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network interception"
                },
                {
                    "Assumption": "Data packets are not encrypted, or encryption is weak.",
                    "Role": "System",
                    "Condition": "Weak encryption"
                },
                {
                    "Assumption": "There is no end-to-end integrity checking for transmitted data.",
                    "Role": "System",
                    "Condition": "Lack of integrity checks"
                }
            ],
            "Potential Impact": "Altered data could lead to incorrect drone behavior or misleading information being processed.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Network Traffic",
                "Data Integrity",
                "Interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies configuration files in cloud services to reroute data or disrupt operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains access to cloud service configuration management.",
                    "Role": "Attacker",
                    "Condition": "Configuration access"
                },
                {
                    "Assumption": "Proper access controls and monitoring are not in place.",
                    "Role": "System",
                    "Condition": "Weak access controls"
                },
                {
                    "Assumption": "Configuration changes are not audit-logged and verified.",
                    "Role": "System",
                    "Condition": "Lack of auditing"
                }
            ],
            "Potential Impact": "Data redirection could lead to data breaches, and misconfigured services could cause operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Cloud Service",
                "Configuration",
                "Access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending malicious commands to a UAV leading to unauthorized actions.",
            "Assumptions": [
                {
                    "Assumption": "Logs of commands sent to UAVs are incomplete or tamperable.",
                    "Role": "System",
                    "Condition": "Weak logging"
                },
                {
                    "Assumption": "Command authentication and verification mechanisms are insufficient.",
                    "Role": "System",
                    "Condition": "Weak authentication"
                },
                {
                    "Assumption": "Attacker has legitimate access to the command system.",
                    "Role": "Attacker",
                    "Condition": "Access"
                }
            ],
            "Potential Impact": "Difficulty in attributing malicious actions may hinder response and accountability.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Authentication",
                "Command"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies accessing sensitive data stored on the cloud, claiming it was another party.",
            "Assumptions": [
                {
                    "Assumption": "Cloud access logs do not have proper integrity checks.",
                    "Role": "System",
                    "Condition": "Weak log integrity"
                },
                {
                    "Assumption": "Lack of multi-factor authentication for accessing data.",
                    "Role": "System",
                    "Condition": "Lack of MFA"
                },
                {
                    "Assumption": "Access to sensitive data is not strictly controlled and monitored.",
                    "Role": "System",
                    "Condition": "Weak access controls"
                }
            ],
            "Potential Impact": "Increased difficulty in tracking unauthorized access and taking remedial actions.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Cloud Access",
                "Data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker alters flight logs to hide unauthorized UAV activities.",
            "Assumptions": [
                {
                    "Assumption": "Access to flight logs is not properly controlled or monitored.",
                    "Role": "System",
                    "Condition": "Weak access control"
                },
                {
                    "Assumption": "Flight log data is not stored or transmitted with integrity guarantees.",
                    "Role": "System",
                    "Condition": "Weak data integrity"
                },
                {
                    "Assumption": "Attacker has access to the GCS or associated logs.",
                    "Role": "Attacker",
                    "Condition": "Access"
                }
            ],
            "Potential Impact": "Hiding unauthorized activities can prevent timely detection and response to security incidents.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "UAV",
                "Flight Log"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted communication between the UAV and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels lack encryption.",
                    "Role": "System",
                    "Condition": "Weak encryption"
                },
                {
                    "Assumption": "The attacker has the capability to intercept communication.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "Sensitive data is transmitted over these channels.",
                    "Role": "System",
                    "Condition": "Data transmission"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of mission-sensitive information.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Network Interception",
                "Communication",
                "Data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored on cloud services is accessed by unauthorized personnel due to insufficient access controls.",
            "Assumptions": [
                {
                    "Assumption": "Access controls to cloud services are not properly configured.",
                    "Role": "System",
                    "Condition": "Weak access controls"
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest.",
                    "Role": "System",
                    "Condition": "Unencrypted data"
                },
                {
                    "Assumption": "The attacker manages to bypass or exploit access control weaknesses.",
                    "Role": "Attacker",
                    "Condition": "Access control exploitation"
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data and personal information.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Cloud Service",
                "Access Control",
                "Data"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker uses malware to exfiltrate sensitive data from the GCS to a command and control server.",
            "Assumptions": [
                {
                    "Assumption": "The GCS lacks adequate malware protection.",
                    "Role": "System",
                    "Condition": "Weak malware defense"
                },
                {
                    "Assumption": "There are no effective network monitoring mechanisms in place to detect data exfiltration.",
                    "Role": "System",
                    "Condition": "Weak network monitoring"
                },
                {
                    "Assumption": "The attacker has deployed malware successfully on the GCS.",
                    "Role": "Attacker",
                    "Condition": "Malware deployment"
                }
            ],
            "Potential Impact": "Compromise and exfiltration of sensitive mission data.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Malware",
                "Exfiltration",
                "GCS"
            ],
            "mitre_technique": {
                "name": "Archive via Utility",
                "description": "Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.\n\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems. \n\nOn Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).(Citation: diantz.exe_lolbas) <code>xcopy</code> on Windows can copy files and directories with a variety of options. Additionally, adversaries may use [certutil](https://attack.mitre.org/software/S0160) to Base64 encode collected data before exfiltration. \n\nAdversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.(Citation: 7zip Homepage)(Citation: WinRAR Homepage)(Citation: WinZip Homepage)",
                "id": "attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662",
                "technique_id": "T1560.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the GCS with traffic, causing disruption in communication with UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the capability to generate high volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Resource availability"
                },
                {
                    "Assumption": "The GCS does not have adequate DDoS protection mechanisms.",
                    "Role": "System",
                    "Condition": "Weak DDoS defenses"
                },
                {
                    "Assumption": "The network infrastructure is unable to properly filter and mitigate large traffic volumes.",
                    "Role": "System",
                    "Condition": "Weak traffic filtering"
                }
            ],
            "Potential Impact": "Disruption of UAV control and potential mission failures.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Flooding",
                "Traffic",
                "Communication"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker utilizes a known firmware vulnerability to crash UAV systems.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is aware of and can exploit the firmware vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability knowledge"
                },
                {
                    "Assumption": "Firmware updates for UAVs are infrequent or not applied.",
                    "Role": "System",
                    "Condition": "Outdated firmware"
                },
                {
                    "Assumption": "The UAV firmware does not include protections against such exploits.",
                    "Role": "System",
                    "Condition": "Weak firmware defenses"
                }
            ],
            "Potential Impact": "UAVs become non-operational, leading to mission failures.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Firmware",
                "Vulnerability",
                "Exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the cloud service to disrupt critical data processing functions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has identified and can exploit a cloud service vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability knowledge"
                },
                {
                    "Assumption": "Data processing functions are critical for operational continuity.",
                    "Role": "System",
                    "Condition": "Critical dependence"
                },
                {
                    "Assumption": "There are no failover mechanisms to handle such disruptions.",
                    "Role": "System",
                    "Condition": "Lack of failover"
                }
            ],
            "Potential Impact": "Disruption of data processing services, affecting operational decisions and coordination.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Cloud Service",
                "Vulnerability",
                "Exploitation"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a kernel vulnerability in the UAV\u2019s operating system to execute code with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "The UAV operating system contains an exploitable kernel vulnerability.",
                    "Role": "System",
                    "Condition": "Vulnerability presence"
                },
                {
                    "Assumption": "The attacker has sufficient access to attempt exploitation.",
                    "Role": "Attacker",
                    "Condition": "Access"
                },
                {
                    "Assumption": "There are no adequate security patches applied to the operating system.",
                    "Role": "System",
                    "Condition": "Unpatched system"
                }
            ],
            "Potential Impact": "Attacker may gain control over the UAV\u2019s core functions, potentially leading to unauthorized data access or operational misuse.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Kernel",
                "Exploitation",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a local file read vulnerability to access system files and escalate privileges on a Ground Control Station.",
            "Assumptions": [
                {
                    "Assumption": "The GCS has a local file read vulnerability present.",
                    "Role": "System",
                    "Condition": "Vulnerability presence"
                },
                {
                    "Assumption": "The attacker can access the GCS under less privileged credentials.",
                    "Role": "Attacker",
                    "Condition": "Credential access"
                },
                {
                    "Assumption": "Critical system files rely on standard access controls that can be bypassed through this vulnerability.",
                    "Role": "System",
                    "Condition": "Bypassable access controls"
                }
            ],
            "Potential Impact": "Attacker escalates privileges on the GCS leading to unauthorized system control and data compromise.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Local File Read",
                "Access Control",
                "GCS"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a deserialization vulnerability in the DaaS platform to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "The DaaS platform has an unresolved deserialization vulnerability.",
                    "Role": "System",
                    "Condition": "Vulnerability presence"
                },
                {
                    "Assumption": "The attacker can pass crafted serialized objects to the vulnerable service.",
                    "Role": "Attacker",
                    "Condition": "Attack surface access"
                },
                {
                    "Assumption": "The vulnerable service runs with higher privileges that can be elevated upon exploitation.",
                    "Role": "System",
                    "Condition": "High privilege service"
                }
            ],
            "Potential Impact": "Attacker achieves higher privileges on the platform, potentially compromising critical system components and data.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Deserialization",
                "Privilege Escalation",
                "Platform"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files.(Citation: Adversaries Hijack DLLs) They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "technique_id": "T1574.001"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "7",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker obtains access credentials to the Ground Control Station (GCS) and masquerades as a legitimate operator.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to stolen or phished credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are improperly managed or protected."
                },
                {
                    "Assumption": "The GCS does not have strong multi-factor authentication (MFA) in place.",
                    "Role": "System Administrator",
                    "Condition": "MFA is not implemented or enforced."
                },
                {
                    "Assumption": "The attacker can access the network where the GCS is located.",
                    "Role": "Attacker",
                    "Condition": "Network access controls are not stringent."
                }
            ],
            "Potential Impact": "Unauthorized command issuance, potential hijacking of UAVs, disruption of critical drone operations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "credentials",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends fake data packets to the drones, making them believe they are communicating with the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication protocol details.",
                    "Role": "Attacker",
                    "Condition": "Insufficient encryption of communication channels."
                },
                {
                    "Assumption": "The attacker can intercept and analyze legitimate data packets.",
                    "Role": "Attacker",
                    "Condition": "Weak or missing encryption mechanisms."
                },
                {
                    "Assumption": "The attacker has the necessary equipment to send spoofed data packets.",
                    "Role": "Attacker",
                    "Condition": "Availability of requisite hardware and software."
                }
            ],
            "Potential Impact": "Confusion within the drone fleet, potential collision or mission failure, unauthorized data manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "communication protocol",
                "network",
                "injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake cloud service endpoint to intercept and manipulate data traffic between the drones and the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of the cloud endpoint and API traffic patterns.",
                    "Role": "Attacker",
                    "Condition": "Endpoints are publicly accessible and insufficiently protected."
                },
                {
                    "Assumption": "The drone's firmware does not properly validate the cloud service certificates.",
                    "Role": "Developer",
                    "Condition": "Firmware lacks comprehensive validation mechanisms."
                },
                {
                    "Assumption": "The attacker can perform a man-in-the-middle (MitM) attack.",
                    "Role": "Attacker",
                    "Condition": "Unsecured communication channels."
                }
            ],
            "Potential Impact": "Data interception and tampering, diversion of drone data, disruption of cloud-based coordination.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud services",
                "man-in-the-middle",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits firmware vulnerabilities to inject malicious code into the UAVs' firmware.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of existing firmware vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Disclosure of vulnerabilities without timely patches."
                },
                {
                    "Assumption": "The firmware update process is not secure.",
                    "Role": "System Administrator",
                    "Condition": "Lack of secure firmware updating mechanism."
                },
                {
                    "Assumption": "The attacker can physically or remotely access the UAVs to upload the firmware.",
                    "Role": "Attacker",
                    "Condition": "Insufficient physical and network security for UAVs."
                }
            ],
            "Potential Impact": "Corruption of drone operations, potential hijacking, persistent backdoor for future exploits.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "code injection",
                "remote execution"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the data stored in the cloud by exploiting vulnerabilities in cloud-based services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has identified a cloud service vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Outdated or unpatched cloud service applications."
                },
                {
                    "Assumption": "The attacker has network access to perform the exploit.",
                    "Role": "Attacker",
                    "Condition": "Weak network security posture."
                },
                {
                    "Assumption": "Data integrity checks are not enforced.",
                    "Role": "Developer",
                    "Condition": "Lack of redundant integrity verification processes."
                }
            ],
            "Potential Impact": "Alteration of critical data, potential misinformation, and loss of data reliability.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud services",
                "data integrity",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters communications between the GCS and the drones using a man-in-the-middle attack.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the communication channels using specialized equipment.",
                    "Role": "Attacker",
                    "Condition": "Insufficient encryption and authentication mechanisms."
                },
                {
                    "Assumption": "The communication protocol is not sufficiently secure.",
                    "Role": "Developer",
                    "Condition": "Lack of strong cryptographic protocols."
                },
                {
                    "Assumption": "The GCS and drones do not perform end-to-end security verification.",
                    "Role": "Developer",
                    "Condition": "Incomplete security implementations in communication protocol."
                }
            ],
            "Potential Impact": "Manipulation of drone commands, potential mission deviation, and data distortion.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "man-in-the-middle",
                "communication protocol",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies issuing a critical command, leading to operational discrepancies and potential security incidents.",
            "Assumptions": [
                {
                    "Assumption": "No comprehensive logging or audit trails are in place.",
                    "Role": "System Administrator",
                    "Condition": "Logging mechanisms are weak or non-existent."
                },
                {
                    "Assumption": "The system does not implement non-repudiation controls.",
                    "Role": "Developer",
                    "Condition": "Lack of cryptographic signatures for critical actions."
                },
                {
                    "Assumption": "Users have shared access to sensitive operation commands.",
                    "Role": "User",
                    "Condition": "Absence of strict role-based access controls."
                }
            ],
            "Potential Impact": "Inability to track accountability, potential for insider threats or fraud, operational vulnerabilities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trails",
                "logging",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Data logged by the drones about their missions is found to be incomplete or missing, possibly altered by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms on drones are not tamper-proof.",
                    "Role": "Developer",
                    "Condition": "Weak or no log protection."
                },
                {
                    "Assumption": "The attacker has access to the drone or its communication channels.",
                    "Role": "Attacker",
                    "Condition": "Insufficient physical or network security."
                },
                {
                    "Assumption": "There is a lack of redundancy in logging.",
                    "Role": "System Administrator",
                    "Condition": "Absence of secondary logging or backup systems."
                }
            ],
            "Potential Impact": "Loss of mission history, compromised mission integrity, challenges in forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "data integrity",
                "forensics"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud service logs indicating data access and modifications are altered to hide evidence of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Logs stored in the cloud are not immutable.",
                    "Role": "Developer",
                    "Condition": "Lack of write-once-read-many (WORM) policies in place."
                },
                {
                    "Assumption": "The attacker can gain sufficient privileges to alter logs.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation vulnerabilities exist."
                },
                {
                    "Assumption": "No external or third-party log monitoring is implemented.",
                    "Role": "System Administrator",
                    "Condition": "Single point of logging without independent monitoring."
                }
            ],
            "Potential Impact": "Concealment of previous data breaches, inability to detect or analyze security incidents, lack of accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud services",
                "log manipulation",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data collected by UAVs is intercepted during transmission to the GCS or cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not fully encrypted end-to-end.",
                    "Role": "Developer",
                    "Condition": "Incomplete or weak encryption protocols."
                },
                {
                    "Assumption": "The attacker can intercept these communications.",
                    "Role": "Attacker",
                    "Condition": "Access to communication paths and necessary interception tools."
                },
                {
                    "Assumption": "Sensitive data is transmitted without additional protection.",
                    "Role": "System Administrator",
                    "Condition": "Lack of layered security for sensitive transmissions."
                }
            ],
            "Potential Impact": "Unauthorized exposure of sensitive data, potential misuse of collected information, privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "communication interception",
                "data encryption",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An unauthorized user gains access to the drone data stored in cloud services due to weak access controls.",
            "Assumptions": [
                {
                    "Assumption": "Cloud access controls are not sufficiently robust.",
                    "Role": "System Administrator",
                    "Condition": "Weak or default access policies."
                },
                {
                    "Assumption": "User roles and permissions are not properly managed.",
                    "Role": "Administrator",
                    "Condition": "Misconfigured user roles and insufficient monitoring."
                },
                {
                    "Assumption": "The attacker can exploit cloud service vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Existing known vulnerabilities."
                }
            ],
            "Potential Impact": "Unauthorized data access, data breach, and potential data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud services",
                "data breach",
                "access control"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker uses a document publishing site to phish credentials from operators, leading to unauthorized data access.",
            "Assumptions": [
                {
                    "Assumption": "Operators are not adequately trained to recognize phishing attempts.",
                    "Role": "Operator",
                    "Condition": "Lack of sufficient security awareness training."
                },
                {
                    "Assumption": "Phishing protections are not up-to-date or enforced.",
                    "Role": "Administrator",
                    "Condition": "Outdated or missing anti-phishing measures."
                },
                {
                    "Assumption": "The attacker can craft convincing phishing lures.",
                    "Role": "Attacker",
                    "Condition": "The availability of information about target users."
                }
            ],
            "Potential Impact": "Credential theft, unauthorized access to sensitive data, potential exploitation of gained access.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "phishing",
                "credential theft",
                "social engineering"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
                "id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
                "technique_id": "T1598.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the communication channels between the drones and the GCS, disrupting the control signals.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate a high volume of traffic for the communication channels involved.",
                    "Role": "Attacker",
                    "Condition": "Availability of resources to launch a DDoS attack."
                },
                {
                    "Assumption": "The communication channels do not have adequate protection against high traffic volumes.",
                    "Role": "System Administrator",
                    "Condition": "Lack of DDoS protection mechanisms."
                },
                {
                    "Assumption": "There are no compensatory controls in place for service disruptions.",
                    "Role": "Developer",
                    "Condition": "Lack of redundancy and failover mechanisms."
                }
            ],
            "Potential Impact": "Disruption in drone control, potential mission failure, and operational delays.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network",
                "ddos",
                "communication channels"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in Linux firmware to cause the UAVs to crash or become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "The UAV firmware is based on a vulnerable version of Linux.",
                    "Role": "Developer",
                    "Condition": "Use of outdated or vulnerable firmware versions."
                },
                {
                    "Assumption": "The attacker has detailed knowledge of the firmware vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Access to vulnerability disclosures or reverse-engineered firmware."
                },
                {
                    "Assumption": "Adequate patching or mitigation strategies are not implemented.",
                    "Role": "System Administrator",
                    "Condition": "Lack of timely patch management processes."
                }
            ],
            "Potential Impact": "Operational unavailability of UAVs, mission failures, and potential loss of drones.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "firmware",
                "vulnerability exploitation",
                "patch management"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overloads cloud services with excessive requests, causing degradation or unavailability of service.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can automate and send numerous requests to the cloud APIs.",
                    "Role": "Attacker",
                    "Condition": "Presence of exploitable APIs lacking rate limiting."
                },
                {
                    "Assumption": "There are no robust rate-limiting or throttling mechanisms in place.",
                    "Role": "Developer",
                    "Condition": "APIs designed without rate limiting."
                },
                {
                    "Assumption": "Cloud service does not have effective load balancing or failover capabilities.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient cloud architecture resiliency."
                }
            ],
            "Potential Impact": "Cloud service disruptions, delayed data processing and analysis, impaired drone coordination efforts.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud services",
                "api exploitation",
                "load balancing"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the Ground Control Station software to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "A vulnerability in the GCS software is known or exploitable.",
                    "Role": "Attacker",
                    "Condition": "Unpatched software or zero-day exploits."
                },
                {
                    "Assumption": "The attacker has network access to the GCS.",
                    "Role": "Attacker",
                    "Condition": "Accessibility of the GCS over the network."
                },
                {
                    "Assumption": "There are insufficient access controls preventing privilege escalation.",
                    "Role": "Administrator",
                    "Condition": "Weak or inadequate access control policies."
                }
            ],
            "Potential Impact": "Complete takeover of GCS operations, unauthorized control over drones, excessive command execution.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "gcs",
                "credential theft"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses exploited credentials to gain access to higher-level functions in the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has phished or stolen credentials.",
                    "Role": "Attacker",
                    "Condition": "Weak user credential management and training."
                },
                {
                    "Assumption": "Low-privilege accounts can escalate privileges due to vulnerabilities.",
                    "Role": "Admin",
                    "Condition": "Improper privilege checks or configurations."
                },
                {
                    "Assumption": "Adequate monitoring and alerts are not established for privilege use.",
                    "Role": "System Security",
                    "Condition": "Lack of real-time monitoring for privilege escalation activities."
                }
            ],
            "Potential Impact": "Unauthorized data access, administrative actions on cloud resources, alteration or deletion of critical data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "phishing",
                "credential theft",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Application Access Token",
                "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\n",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "technique_id": "T1527"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A lower-privilege operator finds a method to escalate privileges to access restricted functions and data in the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The software contains privilege escalation vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "Unpatched or poorly coded software with privilege escalation vectors."
                },
                {
                    "Assumption": "Operators do not adhere to the principle of least privilege.",
                    "Role": "System Administrator",
                    "Condition": "Over-permissioned user roles."
                },
                {
                    "Assumption": "No effective audit trails or security logs are in place to detect such behavior.",
                    "Role": "Security Admin",
                    "Condition": "Lack of comprehensive logging and monitoring."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive functions, potential misuse or abuse of GCS functionalities, compromised drone control and data integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "gcs",
                "privilege escalation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Image File Execution Options Injection",
                "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application\u2019s IFEO will be prepended to the application\u2019s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nSimilar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",
                "id": "attack-pattern--6d4a7fb3-5a24-42be-ae61-6728a2b581f6",
                "technique_id": "T1546.012"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "8",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker impersonates a legitimate command and control channel to issue unauthorized commands to the UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to the communication channel between the GCS and UAVs",
                    "Role": "Attacker",
                    "Condition": "Communication channel is not fully secured"
                },
                {
                    "Assumption": "Attacker has knowledge of command protocols",
                    "Role": "Attacker",
                    "Condition": "Protocol specifications or similar documentation is leaked or accessible"
                },
                {
                    "Assumption": "Lack of strong authentication mechanisms",
                    "Role": "System Designers",
                    "Condition": "Authentication mechanism is weak or non-existent"
                }
            ],
            "Potential Impact": "Unauthorized control of UAVs leading to mission compromise",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Spoofing",
                "Command and Control",
                "Man-in-the-Middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Phishing attack to capture UAV operators' credentials to gain unauthorized access to the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Operators can be targeted via email or other communication methods",
                    "Role": "Attacker",
                    "Condition": "Lack of awareness or training in phishing prevention"
                },
                {
                    "Assumption": "Lack of multi-factor authentication",
                    "Role": "System Designers",
                    "Condition": "Single-factor authentication mechanisms in place"
                },
                {
                    "Assumption": "Access to operator personal information",
                    "Role": "Attacker",
                    "Condition": "Information disclosure or previous breaches"
                }
            ],
            "Potential Impact": "Unauthorized access to control systems leading to data compromise",
            "MITRE ATT&CK Keywords": [
                "Credential Harvesting",
                "Phishing",
                "Social Engineering",
                "User Device"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
                "id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
                "technique_id": "T1598.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor sets up a fake cloud service mimicking the actual cloud service used by the platform to intercept data transmissions.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can intercept and redirect communications to their server",
                    "Role": "Attacker",
                    "Condition": "DNS or route hijacking is possible"
                },
                {
                    "Assumption": "Lack of certificate pinning or other secure methods",
                    "Role": "System Designers",
                    "Condition": "Exploiting weak or missing validation protocols"
                },
                {
                    "Assumption": "Users/Systems can't validate authenticity of cloud service",
                    "Role": "Users/System",
                    "Condition": "Inefficient certificate validation"
                }
            ],
            "Potential Impact": "Data interception leading to information disclosure or data manipulation",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Impersonation",
                "Data Interception",
                "Man-in-the-Middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious firmware update distributed to UAVs leading to compromised drone operations.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not securely transmitted or verified",
                    "Role": "System Designers",
                    "Condition": "Insecure update mechanisms"
                },
                {
                    "Assumption": "Access to distribution network",
                    "Role": "Attacker",
                    "Condition": "Network can be compromised or accessed"
                },
                {
                    "Assumption": "Lack of decentralized update verification",
                    "Role": "System Designers",
                    "Condition": "Relying on a single point of failure"
                }
            ],
            "Potential Impact": "Altered drone behavior leading to mission failure or safety risks",
            "MITRE ATT&CK Keywords": [
                "Supply Chain Compromise",
                "Tampering",
                "Firmware Manipulation",
                "Software"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to a UAV and tampers with its sensors or hardware.",
            "Assumptions": [
                {
                    "Assumption": "Physical security of UAVs is weak",
                    "Role": "System Designers",
                    "Condition": "UAVs are left unsecured in public or semi-public areas"
                },
                {
                    "Assumption": "Vulnerable or easily accessible hardware components",
                    "Role": "Attacker",
                    "Condition": "Components are not protected or encrypted"
                },
                {
                    "Assumption": "No tamper-evident measures",
                    "Role": "System Designers",
                    "Condition": "No alerts or logs of invasive activities"
                }
            ],
            "Potential Impact": "Inaccurate data collection or mission failure",
            "MITRE ATT&CK Keywords": [
                "Physical Access",
                "Tampering",
                "Sensor Manipulation",
                "Hardware"
            ],
            "mitre_technique": {
                "name": "Hardware",
                "description": "Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",
                "id": "attack-pattern--24286c33-d4a4-4419-85c2-1d094a896c26",
                "technique_id": "T1592.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Unauthorized alterations of data communication protocols leading to incorrect data processing.",
            "Assumptions": [
                {
                    "Assumption": "Lack of secure communication protocols",
                    "Role": "System Designers",
                    "Condition": "No encryption or poorly implemented encryption"
                },
                {
                    "Assumption": "Access to data endpoints",
                    "Role": "Attacker",
                    "Condition": "Endpoints are not secured or monitored"
                },
                {
                    "Assumption": "Poor validation of data integrity",
                    "Role": "System Designers",
                    "Condition": "Data is not verified or checked upon reception"
                }
            ],
            "Potential Impact": "Operational disruption due to incorrect data leading to potential safety risks",
            "MITRE ATT&CK Keywords": [
                "Protocol Manipulation",
                "Tampering",
                "Communication Disruption",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Lack of sufficient logging leads to an inability to verify legitimate or malicious actions taken on the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no logging mechanisms",
                    "Role": "System Designers",
                    "Condition": "Logging is not adequately implemented"
                },
                {
                    "Assumption": "Logs are not tamper-proof",
                    "Role": "System Designers",
                    "Condition": "Logs can be altered or deleted without detection"
                },
                {
                    "Assumption": "Access control to logs is too permissive",
                    "Role": "System Administrators",
                    "Condition": "Multiple users have log access with insufficient controls"
                }
            ],
            "Potential Impact": "Inability to trace malicious actions leading to undetected system abuse",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Repudiation",
                "Logging",
                "Event Logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny issuing certain commands due to lack of non-repudiation mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "No non-repudiation controls in place",
                    "Role": "System Designers",
                    "Condition": "Absence of signed command mechanisms"
                },
                {
                    "Assumption": "Operator authenticity is not verifiable post-action",
                    "Role": "System Designers",
                    "Condition": "Commands are not logged with unique identifiers"
                },
                {
                    "Assumption": "Audit trails are incomplete or non-existent",
                    "Role": "System Designers",
                    "Condition": "Inadequate system logging architecture"
                }
            ],
            "Potential Impact": "Discrepancies in command history leading to potential internal conflicts or security investigations",
            "MITRE ATT&CK Keywords": [
                "Command Logging",
                "Non-repudiation",
                "System Auditing",
                "User Activity"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users unable to prove that data in the cloud services was tampered with because of insufficient logging.",
            "Assumptions": [
                {
                    "Assumption": "Weak audit logging for cloud services",
                    "Role": "Cloud Provider",
                    "Condition": "Logging not robust or enabled adequately"
                },
                {
                    "Assumption": "Audit logs are not immutable",
                    "Role": "Cloud Provider",
                    "Condition": "Logs can be easily manipulated or deleted"
                },
                {
                    "Assumption": "Unauthorized access to log storage",
                    "Role": "Attacker",
                    "Condition": "Insufficient protection around the storage system"
                }
            ],
            "Potential Impact": "Challenges in verifying data integrity leading to potential data loss or corruption",
            "MITRE ATT&CK Keywords": [
                "Cloud",
                "Audit Logging",
                "Repudiation",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of communication between UAVs and GCS resulting in the exposure of sensitive mission data.",
            "Assumptions": [
                {
                    "Assumption": "Communication is not encrypted",
                    "Role": "System Designers",
                    "Condition": "Plaintext communication channels"
                },
                {
                    "Assumption": "Attacker has access to the network",
                    "Role": "Attacker",
                    "Condition": "Network access via internal or external compromise"
                },
                {
                    "Assumption": "No detection for man-in-the-middle attacks",
                    "Role": "System Designers",
                    "Condition": "No robust monitoring or detection systems in place"
                }
            ],
            "Potential Impact": "Unauthorised parties gaining access to sensitive information compromising mission confidentiality",
            "MITRE ATT&CK Keywords": [
                "Interception",
                "Communication",
                "Sensitive Data",
                "Surveillance"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data stored in cloud services is improperly configured, allowing public access to sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigured cloud storage settings",
                    "Role": "System Administrators",
                    "Condition": "Default or incorrect configurations exposing data"
                },
                {
                    "Assumption": "Lack of regular security audits",
                    "Role": "System Administrators",
                    "Condition": "No or infrequent audits of cloud configurations"
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest",
                    "Role": "System Designers",
                    "Condition": "Data stored in plaintext"
                }
            ],
            "Potential Impact": "Exposure of confidential data to unauthorized users leading to data breaches",
            "MITRE ATT&CK Keywords": [
                "Cloud Storage",
                "Data Exposure",
                "Misconfiguration",
                "Public Access"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "UAVs capturing sensitive data which is then intercepted during transmission to the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without adequate encryption",
                    "Role": "System Designers",
                    "Condition": "Insecure transmission protocols"
                },
                {
                    "Assumption": "Attackers can access the transmission path",
                    "Role": "Attacker",
                    "Condition": "Network is not adequately secured"
                },
                {
                    "Assumption": "Lack of intrusion detection on transmission paths",
                    "Role": "System Designers",
                    "Condition": "No monitoring or alert systems in place"
                }
            ],
            "Potential Impact": "Sensitive data intercepted compromising mission intelligence and privacy",
            "MITRE ATT&CK Keywords": [
                "Data Capture",
                "Transmission Interception",
                "Data Interception",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the communication link between the UAVs and GCS, rendering them unable to communicate.",
            "Assumptions": [
                {
                    "Assumption": "Communication protocols are not resilient to flooding attacks",
                    "Role": "System Designers",
                    "Condition": "Protocols lack anti-flood mechanisms"
                },
                {
                    "Assumption": "Attacker can generate high traffic volumes",
                    "Role": "Attacker",
                    "Condition": "Attacker possesses necessary resources or botnets"
                },
                {
                    "Assumption": "Insufficient network monitoring",
                    "Role": "System Administrators",
                    "Condition": "Lack of monitoring or threat detection mechanisms"
                }
            ],
            "Potential Impact": "Disruption of operations leading to mission failures and operational delays",
            "MITRE ATT&CK Keywords": [
                "Network Flooding",
                "Denial of Service",
                "Communication Disruption",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overloading the cloud service with high volumes of requests to cause downtime.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not have adequate rate limiting",
                    "Role": "Cloud Provider",
                    "Condition": "Lack of proper rate limiting configurations"
                },
                {
                    "Assumption": "Attacker can send large numbers of requests",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to a powerful botnet or similar resources"
                },
                {
                    "Assumption": "No redundancy or failover mechanisms",
                    "Role": "System Designers",
                    "Condition": "Single points of failure without backup services"
                }
            ],
            "Potential Impact": "Disruption in data processing and accessibility affecting mission coordination",
            "MITRE ATT&CK Keywords": [
                "Resource Exhaustion",
                "Cloud Services",
                "Denial of Service",
                "Request Flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Physically jamming GPS signals to disrupt UAV navigation.",
            "Assumptions": [
                {
                    "Assumption": "GPS signals are susceptible to jamming",
                    "Role": "System Designers",
                    "Condition": "Lack of alternative navigation systems"
                },
                {
                    "Assumption": "Attacker has access to GPS jamming equipment",
                    "Role": "Attacker",
                    "Condition": "Availability of jammers in the vicinity of operation"
                },
                {
                    "Assumption": "No fallback navigation methods",
                    "Role": "System Designers",
                    "Condition": "No inertial navigation or ground-based solutions"
                }
            ],
            "Potential Impact": "Loss of UAV navigation capabilities leading to mission failure or UAV crashes",
            "MITRE ATT&CK Keywords": [
                "GPS Jamming",
                "Navigation Disruption",
                "Denial of Service",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of firmware vulnerabilities on UAVs to gain control of UAV functions.",
            "Assumptions": [
                {
                    "Assumption": "Firmware has known vulnerabilities",
                    "Role": "System Designers",
                    "Condition": "Vulnerabilities are not patched or mitigated"
                },
                {
                    "Assumption": "Attackers can remotely access UAVs",
                    "Role": "Attacker",
                    "Condition": "Network allows unauthorized access"
                },
                {
                    "Assumption": "No mechanisms for privilege restriction",
                    "Role": "System Designers",
                    "Condition": "No user privilege segregation implemented"
                }
            ],
            "Potential Impact": "Control of UAV functionalities leading to potential hijacking",
            "MITRE ATT&CK Keywords": [
                "Firmware Exploitation",
                "Privilege Escalation",
                "UAV Control",
                "Software Vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious insider uses administrative credentials to escalate privileges within the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have access to critical systems",
                    "Role": "System Administrators",
                    "Condition": "Administrative credentials not adequately protected"
                },
                {
                    "Assumption": "No separation of duties",
                    "Role": "System Designers",
                    "Condition": "Single point of failure in privilege management"
                },
                {
                    "Assumption": "Insufficient monitoring of insider activities",
                    "Role": "System Administrators",
                    "Condition": "Lack of real-time monitoring and alerting"
                }
            ],
            "Potential Impact": "Unauthorized changes to system configurations and potential sabotage",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Privilege Escalation",
                "Administrative Access",
                "System Tampering"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of cloud service vulnerabilities to gain higher-level permissions.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have exploitable vulnerabilities",
                    "Role": "System Designers",
                    "Condition": "Known vulnerabilities are not patched"
                },
                {
                    "Assumption": "Attackers can initiate actions from compromised accounts",
                    "Role": "Attacker",
                    "Condition": "Initial access obtained through other means"
                },
                {
                    "Assumption": "Access controls are not adequately enforced",
                    "Role": "Cloud Provider",
                    "Condition": "Weak or default access configurations"
                }
            ],
            "Potential Impact": "Elevated access to sensitive data and mission-critical services",
            "MITRE ATT&CK Keywords": [
                "Cloud Service Exploitation",
                "Privilege Escalation",
                "Access Control",
                "Software Vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "9",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker spoofs drone communication signals to take control of a UAV.",
            "Assumptions": [
                {
                    "Assumption": "Communication protocols are not fully secured",
                    "Role": "System Designer",
                    "Condition": "Outdated or weak protocols"
                },
                {
                    "Assumption": "Attacker has some knowledge of the communication standards used",
                    "Role": "Attacker",
                    "Condition": "Prior reconnaissance"
                },
                {
                    "Assumption": "Physical proximity to the drone's communication range",
                    "Role": "Attacker",
                    "Condition": "Within range"
                }
            ],
            "Potential Impact": "Loss of control over the drone, unauthorized access to sensitive data",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "UAV control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Impersonation of a Ground Control Station (GCS) to issue fake commands to drones.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient authentication mechanisms between GCS and drones",
                    "Role": "System Architect",
                    "Condition": "No mutual authentication"
                },
                {
                    "Assumption": "Attacker can intercept communication between drones and GCS",
                    "Role": "Attacker",
                    "Condition": "Man-in-the-Middle (MitM) capability"
                },
                {
                    "Assumption": "GCS communication logs are not monitored in real-time",
                    "Role": "Security Analyst",
                    "Condition": "Lack of real-time monitoring"
                }
            ],
            "Potential Impact": "Unauthorized command execution, disruption of drone operations",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "command",
                "GCS",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--05cc321-08ce-4d17-b1ea-cb5275926520",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker spoofs GPS signals to mislead UAV navigation.",
            "Assumptions": [
                {
                    "Assumption": "UAVs are relying solely on GPS for navigation",
                    "Role": "Embedded Systems Engineer",
                    "Condition": "No alternative navigation systems"
                },
                {
                    "Assumption": "GPS signals are not encrypted",
                    "Role": "System Administrator",
                    "Condition": "Unencrypted GPS protocols"
                },
                {
                    "Assumption": "Attacker has equipment capable of GPS spoofing",
                    "Role": "Attacker",
                    "Condition": "Possession of GPS spoofer"
                }
            ],
            "Potential Impact": "Loss of navigation accuracy, potential for collision or mission failure",
            "MITRE ATT&CK Keywords": [
                "GPS spoofing",
                "navigation",
                "signal",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Traffic Signaling",
                "description": "Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. [Port Knocking](https://attack.mitre.org/techniques/T1205/001)), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.\n\nAdversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.\n\nOn network devices, adversaries may use crafted packets to enable [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004) for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.  Adversaries may use crafted packets to attempt to connect to one or more (open or closed) ports, but may also attempt to connect to a router interface, broadcast, and network address IP on the same port in order to achieve their goals and objectives.(Citation: Cisco Synful Knock Evolution)(Citation: Mandiant - Synful Knock)(Citation: Cisco Blog Legacy Device Attacks)  To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage [Patch System Image](https://attack.mitre.org/techniques/T1601/001) due to the monolithic nature of the architecture.\n\nAdversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.(Citation: Bleeping Computer - Ryuk WoL)(Citation: AMD Magic Packet)",
                "id": "attack-pattern--451a9977-d255-43c9-b431-66de80130c8c",
                "technique_id": "T1205"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker modifies UAV firmware to introduce backdoors.",
            "Assumptions": [
                {
                    "Assumption": "Firmware is not securely signed and verified",
                    "Role": "Firmware Developer",
                    "Condition": "Unsigned or weakly signed firmware"
                },
                {
                    "Assumption": "Attacker has access to the firmware upload interface",
                    "Role": "Attacker",
                    "Condition": "Compromised firmware distribution"
                },
                {
                    "Assumption": "No integrity checks are performed on the firmware",
                    "Role": "System Administrator",
                    "Condition": "Lack of integrity verification"
                }
            ],
            "Potential Impact": "Backdoor access, long-term control of UAV functionality",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "backdoor",
                "integrity"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Unauthorized modification of data packets transmitted between GCS and drones.",
            "Assumptions": [
                {
                    "Assumption": "Data packets are transmitted in plain text or weakly encrypted",
                    "Role": "Network Engineer",
                    "Condition": "Lack of encryption or weak encryption"
                },
                {
                    "Assumption": "Attacker can intercept and alter in-transit data",
                    "Role": "Attacker",
                    "Condition": "Man-in-the-Middle (MitM) capability"
                },
                {
                    "Assumption": "No authenticity checks for received data packets",
                    "Role": "System Architect",
                    "Condition": "Lack of data integrity checks"
                }
            ],
            "Potential Impact": "Altered commands or data sent to UAVs, potentially dangerous behaviors",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "packet alteration",
                "MitM",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actor modifies cloud-stored data used by the DaaS platform.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage lacks adequate access controls",
                    "Role": "Cloud Administrator",
                    "Condition": "Weak or missing access controls"
                },
                {
                    "Assumption": "Attacker has credentials or exploits a cloud vulnerability",
                    "Role": "Attacker",
                    "Condition": "Credential access or vulnerability"
                },
                {
                    "Assumption": "No regular audits of cloud-stored data integrity",
                    "Role": "Security Analyst",
                    "Condition": "Lack of audit processes"
                }
            ],
            "Potential Impact": "Corrupted mission data, misleading analytics and insights",
            "MITRE ATT&CK Keywords": [
                "cloud",
                "tampering",
                "data integrity",
                "storage"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "User denies sending commands to a UAV that led to a malfunction.",
            "Assumptions": [
                {
                    "Assumption": "No logging of command execution or operator actions",
                    "Role": "System Architect",
                    "Condition": "Lack of logging"
                },
                {
                    "Assumption": "Insufficient non-repudiation controls in place",
                    "Role": "Security Analyst",
                    "Condition": "Weak or missing controls"
                },
                {
                    "Assumption": "Multi-operator environment without operator accountability",
                    "Role": "System Designer",
                    "Condition": "Lack of accountability features"
                }
            ],
            "Potential Impact": "Untraceable actions, difficulty in investigation and accountability",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "UAV commands",
                "non-repudiation",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operator of the GCS denies receiving critical data from a UAV during a mission.",
            "Assumptions": [
                {
                    "Assumption": "No logging of data transmission events",
                    "Role": "Network Engineer",
                    "Condition": "Missing transmission logs"
                },
                {
                    "Assumption": "Data transmissions are not acknowledged by both sender and receiver",
                    "Role": "System Architect",
                    "Condition": "No transmission acknowledgments"
                },
                {
                    "Assumption": "No timestamping on data packets",
                    "Role": "Firmware Developer",
                    "Condition": "Lack of timestamping"
                }
            ],
            "Potential Impact": "Discrepancies in mission records, potential mission failure",
            "MITRE ATT&CK Keywords": [
                "data transmission",
                "repudiation",
                "logging",
                "acknowledgment"
            ],
            "mitre_technique": {
                "name": "Log Enumeration",
                "description": "Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records ([Account Discovery](https://attack.mitre.org/techniques/T1087)), security or vulnerable software ([Software Discovery](https://attack.mitre.org/techniques/T1518)), or hosts within a compromised network ([Remote System Discovery](https://attack.mitre.org/techniques/T1018)).\n\nHost binaries may be leveraged to collect system logs. Examples include using `wevtutil.exe` or [PowerShell](https://attack.mitre.org/techniques/T1059/001) on Windows to access and/or export security event information.(Citation: WithSecure Lazarus-NoPineapple Threat Intel Report 2023)(Citation: Cadet Blizzard emerges as novel threat actor) In cloud environments, adversaries may leverage utilities such as the Azure VM Agent\u2019s `CollectGuestLogs.exe` to collect security logs from cloud hosted infrastructure.(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console)\n\nAdversaries may also target centralized logging infrastructure such as SIEMs. Logs may also be bulk exported and sent to adversary-controlled infrastructure for offline analysis.",
                "id": "attack-pattern--866d0d6d-02c6-42bd-aa2f-02907fdc0969",
                "technique_id": "T1654"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A third-party service provider denies accessing the cloud-stored data post-mission.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service lacks monitoring and logging of access events",
                    "Role": "Cloud Administrator",
                    "Condition": "No monitoring or logging"
                },
                {
                    "Assumption": "Access controls are not linked to specific users",
                    "Role": "System Architect",
                    "Condition": "Weak or generic access controls"
                },
                {
                    "Assumption": "Cloud infrastructure does not enforce non-repudiation policies",
                    "Role": "Cloud Administrator",
                    "Condition": "No enforcement of non-repudiation"
                }
            ],
            "Potential Impact": "Difficulty in tracing unauthorized accesses, loss of data confidentiality",
            "MITRE ATT&CK Keywords": [
                "cloud access",
                "repudiation",
                "non-repudiation",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted during transmission between UAVs and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted unencrypted or with weak encryption",
                    "Role": "Network Engineer",
                    "Condition": "Weak or lack of encryption"
                },
                {
                    "Assumption": "Attacker has the capability to intercept transmissions",
                    "Role": "Attacker",
                    "Condition": "Signal interception capability"
                },
                {
                    "Assumption": "No secondary authentication for data access",
                    "Role": "System Designer",
                    "Condition": "Single authentication factor"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive mission data, compromised confidentiality",
            "MITRE ATT&CK Keywords": [
                "interception",
                "transmission",
                "UAV data",
                "confidentiality"
            ],
            "mitre_technique": {
                "name": "Weaken Encryption",
                "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
                "technique_id": "T1600"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud storage breach exposing archived mission data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage lacks strong access controls and encryption",
                    "Role": "Cloud Administrator",
                    "Condition": "Weak access controls and encryption"
                },
                {
                    "Assumption": "Attacker has valid credentials or exploits a vulnerability",
                    "Role": "Attacker",
                    "Condition": "Credential access or vulnerability exploitation"
                },
                {
                    "Assumption": "No regular audits or anomaly detection in place",
                    "Role": "Security Analyst",
                    "Condition": "Lack of monitoring and auditing"
                }
            ],
            "Potential Impact": "Exposure of past mission data, loss of data confidentiality",
            "MITRE ATT&CK Keywords": [
                "cloud breach",
                "data exposure",
                "archive",
                "confidentiality"
            ],
            "mitre_technique": {
                "name": "Archive Collected Data",
                "description": "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network.(Citation: DOJ GRU Indictment Jul 2018) Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",
                "id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a",
                "technique_id": "T1560"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to surveillance footage captured by UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Surveillance data is not encrypted",
                    "Role": "Firmware Developer",
                    "Condition": "Unencrypted data"
                },
                {
                    "Assumption": "Attacker can intercept or access data streams",
                    "Role": "Attacker",
                    "Condition": "Interception or access capability"
                },
                {
                    "Assumption": "No real-time monitoring of data access",
                    "Role": "Security Analyst",
                    "Condition": "Lack of real-time monitoring"
                }
            ],
            "Potential Impact": "Unauthorized viewing of sensitive footage, compromised confidentiality",
            "MITRE ATT&CK Keywords": [
                "surveillance",
                "data access",
                "confidentiality",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Weaken Encryption",
                "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
                "technique_id": "T1600"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DoS attack on GCS rendering it unable to control UAVs.",
            "Assumptions": [
                {
                    "Assumption": "GCS has no redundancy or failover systems",
                    "Role": "System Architect",
                    "Condition": "Single point of failure"
                },
                {
                    "Assumption": "Attack can generate sufficient traffic to overwhelm the GCS",
                    "Role": "Attacker",
                    "Condition": "Ability to generate traffic"
                },
                {
                    "Assumption": "No traffic filtering mechanisms in place",
                    "Role": "Network Engineer",
                    "Condition": "Lack of filtering"
                }
            ],
            "Potential Impact": "Loss of UAV control, potential mission failure",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "GCS",
                "availability",
                "traffic overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploiting firmware vulnerability causing drones to crash.",
            "Assumptions": [
                {
                    "Assumption": "Firmware contains exploitable vulnerabilities",
                    "Role": "Firmware Developer",
                    "Condition": "Known or unknown vulnerabilities"
                },
                {
                    "Assumption": "No regular firmware updates",
                    "Role": "System Administrator",
                    "Condition": "Lack of updates"
                },
                {
                    "Assumption": "Attacker has the means to deploy exploit",
                    "Role": "Attacker",
                    "Condition": "Exploit deployment capability"
                }
            ],
            "Potential Impact": "Drone crashes, disruption of services, loss of availability",
            "MITRE ATT&CK Keywords": [
                "firmware vulnerability",
                "DoS",
                "UAV crash",
                "availability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding cloud service with requests, affecting data storage and processing.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service does not have rate limiting or filtering",
                    "Role": "Cloud Administrator",
                    "Condition": "Lack of rate limiting"
                },
                {
                    "Assumption": "Attack can generate a high volume of requests",
                    "Role": "Attacker",
                    "Condition": "Sufficient resources"
                },
                {
                    "Assumption": "No mitigation strategies for high traffic volumes",
                    "Role": "System Architect",
                    "Condition": "No DDoS protection"
                }
            ],
            "Potential Impact": "Disruption of data storage and processing, loss of availability",
            "MITRE ATT&CK Keywords": [
                "cloud service",
                "DoS",
                "availability",
                "data processing"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker escalates privileges through firmware vulnerabilities to gain control of UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Firmware vulnerabilities are exploitable",
                    "Role": "Firmware Developer",
                    "Condition": "Vulnerabilities present"
                },
                {
                    "Assumption": "Attacker has initial access to UAV system",
                    "Role": "Attacker",
                    "Condition": "Initial compromise"
                },
                {
                    "Assumption": "No robust privilege separation in firmware",
                    "Role": "System Architect",
                    "Condition": "Weak segregation mechanisms"
                }
            ],
            "Potential Impact": "Complete control of UAVs, unauthorized actions",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "firmware",
                "UAV control",
                "elevation of privilege"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting vulnerabilities in GCS software to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "GCS software contains exploitable vulnerabilities",
                    "Role": "Software Developer",
                    "Condition": "Known or unknown bugs"
                },
                {
                    "Assumption": "Attacker has some level of access to GCS",
                    "Role": "Attacker",
                    "Condition": "Partial access"
                },
                {
                    "Assumption": "No proper security patches applied",
                    "Role": "System Administrator",
                    "Condition": "Missing updates"
                }
            ],
            "Potential Impact": "Administrative control over GCS, potential for issuing harmful commands",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "GCS",
                "software vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Gaining higher privileges on cloud services hosting DaaS infrastructure.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service vulnerabilities exist",
                    "Role": "Cloud Administrator",
                    "Condition": "Present vulnerabilities"
                },
                {
                    "Assumption": "Existing lower privilege access to cloud services",
                    "Role": "Attacker",
                    "Condition": "Initial low-privilege access"
                },
                {
                    "Assumption": "No multi-factor authentication (MFA) for administrative tasks",
                    "Role": "System Architect",
                    "Condition": "Lack of MFA"
                }
            ],
            "Potential Impact": "Full control over cloud services, potential data breach",
            "MITRE ATT&CK Keywords": [
                "cloud service",
                "privilege escalation",
                "elevation",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "11",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the communication protocol between the Ground Control Station (GCS) and the drone to issue unauthorized commands.",
            "Assumptions": [
                {
                    "Assumption": "Weak or insecure communication protocols used between GCS and drones",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to communication channels"
                },
                {
                    "Assumption": "Lack of proper authentication methods for command issuance",
                    "Role": "System Designer",
                    "Condition": "System design does not enforce strong authentication"
                },
                {
                    "Assumption": "Insufficient logging and monitoring of command authentication processes",
                    "Role": "System Administrator",
                    "Condition": "Monitoring systems are not adequately configured"
                }
            ],
            "Potential Impact": "Unauthorized command execution and potential damage to drones.",
            "MITRE ATT&CK Keywords": [
                "network communication",
                "impersonation",
                "command injection"
            ],
            "mitre_technique": {
                "name": "Protocol Impersonation",
                "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",
                "id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
                "technique_id": "T1001.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses phishing techniques to steal credentials of authorized users managing the DaaS platform.",
            "Assumptions": [
                {
                    "Assumption": "Users are not trained to recognize phishing attempts",
                    "Role": "End User",
                    "Condition": "Lack of security awareness training"
                },
                {
                    "Assumption": "The system lacks multi-factor authentication (MFA)",
                    "Role": "Security Architect",
                    "Condition": "MFA is not implemented"
                },
                {
                    "Assumption": "Attackers have access to legitimate-looking phishing platforms",
                    "Role": "Attacker",
                    "Condition": "Use of sophisticated phishing tools"
                }
            ],
            "Potential Impact": "Unauthorized access to the DaaS platform and potential control over drones.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credential theft",
                "user impersonation"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Fake drone signals sent to confuse the Ground Control Station (GCS) regarding the actual location of drones.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate validation of drone signals at GCS",
                    "Role": "System Designer",
                    "Condition": "Signal validation mechanisms are weak"
                },
                {
                    "Assumption": "Access to signal transmission equipment",
                    "Role": "Attacker",
                    "Condition": "Proximity to operational area"
                },
                {
                    "Assumption": "Dependency on GPS and other satellite-based signals",
                    "Role": "System Operator",
                    "Condition": "Reliance on external sensors without redundancy"
                }
            ],
            "Potential Impact": "Misleading information about drone location compromising mission performance.",
            "MITRE ATT&CK Keywords": [
                "GPS spoofing",
                "signal jamming",
                "location spoofing"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An exploit in UAV firmware allows an attacker to modify drone's operational parameters.",
            "Assumptions": [
                {
                    "Assumption": "Firmware is not signed or validated before installation",
                    "Role": "System Developer",
                    "Condition": "Lack of secure firmware validation process"
                },
                {
                    "Assumption": "Exploitation of known vulnerabilities in UAV firmware",
                    "Role": "Attacker",
                    "Condition": "Use of exploit kits targeting vulnerable firmware"
                },
                {
                    "Assumption": "Attacker has access to the communication channel for firmware updates",
                    "Role": "Attacker",
                    "Condition": "Interception or access to update mechanisms"
                }
            ],
            "Potential Impact": "Compromise of operational integrity and safety of UAV missions.",
            "MITRE ATT&CK Keywords": [
                "firmware modification",
                "system tampering",
                "code injection"
            ],
            "mitre_technique": {
                "name": "Dynamic-link Library Injection",
                "description": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) \n\nAnother variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--f4599aa0-4f85-4a32-80ea-fc39dc965945",
                "technique_id": "T1055.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Cloud service data repositories are compromised to alter logs of drone activities.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls on cloud-based data storage",
                    "Role": "Cloud Service Engineer",
                    "Condition": "Low security posture of cloud storage"
                },
                {
                    "Assumption": "Exploitation of cloud service vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Use of vulnerabilities to gain unauthorized access"
                },
                {
                    "Assumption": "Lack of integrity checks for drone activity data",
                    "Role": "System Administrator",
                    "Condition": "Absence of data integrity maintenance mechanisms"
                }
            ],
            "Potential Impact": "Erosion of trust in log data, leading to incorrect decisions based on falsified records.",
            "MITRE ATT&CK Keywords": [
                "cloud service tampering",
                "log manipulation",
                "data integrity attack"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with communication protocols to inject false data into drone control commands.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate encryption of command and control data",
                    "Role": "System Architect",
                    "Condition": "Data is transmitted in plain text"
                },
                {
                    "Assumption": "Exploitation of protocol vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Use of known protocol weaknesses"
                },
                {
                    "Assumption": "Access to the communication stream",
                    "Role": "Attacker",
                    "Condition": "Physical or logical access to network"
                }
            ],
            "Potential Impact": "Execution of arbitrary or harmful commands by the drone.",
            "MITRE ATT&CK Keywords": [
                "protocol tampering",
                "command injection",
                "network manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Administrators deny having authorized certain drone operations due to lack of proper logging and non-repudiation measures.",
            "Assumptions": [
                {
                    "Assumption": "Absence of non-repudiation mechanisms in the system",
                    "Role": "System Architect",
                    "Condition": "Non-repudiation features are not implemented"
                },
                {
                    "Assumption": "Logs are not securely stored or protected",
                    "Role": "System Administrator",
                    "Condition": "Log files are easily manipulated"
                },
                {
                    "Assumption": "System does not enforce proper access controls to logging mechanisms",
                    "Role": "System Administrator",
                    "Condition": "Access control policies are weak"
                }
            ],
            "Potential Impact": "Inability to trace actions back to administrators, leading to accountability issues.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "non-repudiation failure",
                "administrative actions"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Drone operators deny unauthorized changes to drone routes despite logs indicating otherwise.",
            "Assumptions": [
                {
                    "Assumption": "Logs can be altered or forged without detection",
                    "Role": "System Administrator",
                    "Condition": "Log integrity is not enforced"
                },
                {
                    "Assumption": "Operators have the ability to alter logs without detection",
                    "Role": "Drone Operator",
                    "Condition": "Insufficient separation of duties"
                },
                {
                    "Assumption": "Lack of secure log mechanisms to verify authenticity",
                    "Role": "System Designer",
                    "Condition": "Weak log security policies"
                }
            ],
            "Potential Impact": "Difficulty in establishing the authenticity of route changes and determining responsibility.",
            "MITRE ATT&CK Keywords": [
                "log repudiation",
                "route alteration",
                "log forensics"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud service providers deny any responsibility for data tampering within their infrastructure.",
            "Assumptions": [
                {
                    "Assumption": "Shared responsibility model is not well-defined",
                    "Role": "Cloud Service Provider",
                    "Condition": "Unclear responsibility between provider and user"
                },
                {
                    "Assumption": "Lack of SLAs to enforce data integrity",
                    "Role": "Cloud Service Consumer",
                    "Condition": "Absence of contractual clauses for data management"
                },
                {
                    "Assumption": "Logs are not immutably stored",
                    "Role": "Cloud Service Provider",
                    "Condition": "Logs can be altered by administrators with sufficient privileges"
                }
            ],
            "Potential Impact": "Legal and operational challenges in attributing fault for data compromises.",
            "MITRE ATT&CK Keywords": [
                "cloud service repudiation",
                "data integrity",
                "log manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of unencrypted communication between drones and the GCS reveals sensitive mission data.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption",
                    "Role": "System Engineer",
                    "Condition": "Encryption is not enforced during data transmission"
                },
                {
                    "Assumption": "Threat actors have the ability to intercept communication channels",
                    "Role": "Attacker",
                    "Condition": "Physical or logical access to data communication paths"
                },
                {
                    "Assumption": "Lacks proper network monitoring and anomaly detection",
                    "Role": "System Administrator",
                    "Condition": "Network traffic is not continuously monitored"
                }
            ],
            "Potential Impact": "Disclosure of sensitive operational information compromising mission security.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "unencrypted communication",
                "network eavesdropping"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exploitation of vulnerabilities in cloud services leads to unauthorized access and data breaches.",
            "Assumptions": [
                {
                    "Assumption": "Presence of exploitable vulnerabilities in cloud infrastructure",
                    "Role": "Cloud Service Provider",
                    "Condition": "Vulnerabilities are not patched promptly"
                },
                {
                    "Assumption": "Cloud services have inadequate access control measures",
                    "Role": "Cloud Service Administrator",
                    "Condition": "Weak access policies"
                },
                {
                    "Assumption": "Lack of network segmentation within cloud services",
                    "Role": "System Architect",
                    "Condition": "Flat network architecture without isolation controls"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data stored and processed in the cloud.",
            "MITRE ATT&CK Keywords": [
                "cloud service breach",
                "data exfiltration",
                "vulnerability exploit"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Misconfigured drone sensors transmit data to unauthorized recipients, leading to data leakage.",
            "Assumptions": [
                {
                    "Assumption": "Sensors are not properly configured to restrict data broadcast",
                    "Role": "System Technician",
                    "Condition": "Misconfiguration of sensor settings"
                },
                {
                    "Assumption": "Access controls to sensor data are weak or non-existent",
                    "Role": "System Administrator",
                    "Condition": "Lack of fine-grained access control policies"
                },
                {
                    "Assumption": "Data is transmitted over insecure channels",
                    "Role": "Network Engineer",
                    "Condition": "Use of insecure transmission protocols"
                }
            ],
            "Potential Impact": "Unintentional leakage of sensitive data to unauthorized third parties.",
            "MITRE ATT&CK Keywords": [
                "sensor data leakage",
                "misconfiguration",
                "unauthorized data access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker leverages a network vulnerability to overload the Ground Control Station (GCS) with traffic, making it unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Network defenses do not adequately filter traffic",
                    "Role": "Network Administrator",
                    "Condition": "Lack of traffic filtering rules"
                },
                {
                    "Assumption": "System lacks rate limiting and traffic management",
                    "Role": "System Designer",
                    "Condition": "Design does not include rate limiting"
                },
                {
                    "Assumption": "Attacker has sufficient resources to generate high traffic volumes",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or similar resources"
                }
            ],
            "Potential Impact": "Disruption in communication and control operations resulting in failure of drone missions.",
            "MITRE ATT&CK Keywords": [
                "network flooding",
                "DoS attack",
                "traffic overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Firmware vulnerabilities are exploited to crash UAV systems, rendering them non-operational.",
            "Assumptions": [
                {
                    "Assumption": "Firmware has known vulnerabilities that have not been patched",
                    "Role": "Firmware Developer",
                    "Condition": "Vulnerability patches are delayed"
                },
                {
                    "Assumption": "Attackers can deliver payloads to exploit the firmware vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Access to delivery mechanisms"
                },
                {
                    "Assumption": "Lack of secure boot procedures to prevent tampered firmware from running",
                    "Role": "System Architect",
                    "Condition": "Absence of secure boot features"
                }
            ],
            "Potential Impact": "Complete operational shutdown of drones, impacting mission critical operations.",
            "MITRE ATT&CK Keywords": [
                "firmware exploit",
                "system crash",
                "UAV shutdown"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers target cloud services to render data and storage systems unavailable.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service providers lack redundancy measures",
                    "Role": "Cloud Service Provider",
                    "Condition": "Redundancy is not built into architecture"
                },
                {
                    "Assumption": "Insufficient DDoS protection in cloud infrastructure",
                    "Role": "Cloud Service Administrator",
                    "Condition": "DDoS protection measures are weak or absent"
                },
                {
                    "Assumption": "Attackers have scalable resources to initiate DDoS attacks",
                    "Role": "Attacker",
                    "Condition": "Access to DDoS tools and botnets"
                }
            ],
            "Potential Impact": "Inaccessibility to critical cloud-based services and data, hindering drone operations.",
            "MITRE ATT&CK Keywords": [
                "cloud service disruption",
                "storage unavailability",
                "DDoS attack"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of vulnerabilities in drone firmware allows attackers to gain root access to UAV systems.",
            "Assumptions": [
                {
                    "Assumption": "Known vulnerabilities in drone firmware are not patched",
                    "Role": "Firmware Developer",
                    "Condition": "Delay in applying security patches"
                },
                {
                    "Assumption": "Attackers can deploy exploits effectively",
                    "Role": "Attacker",
                    "Condition": "Access to exploitation tools"
                },
                {
                    "Assumption": "Lack of security mechanisms to prevent unauthorized root access",
                    "Role": "System Architect",
                    "Condition": "Weak security design"
                }
            ],
            "Potential Impact": "Unauthorized control over drone operations, compromising mission security.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "root access",
                "firmware exploitation"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware introduced through the Ground Control Station allows attackers to escalate privileges to system admin level.",
            "Assumptions": [
                {
                    "Assumption": "GCS software lacks sufficient malware protection",
                    "Role": "System Security Engineer",
                    "Condition": "Antimalware tools are ineffective or absent"
                },
                {
                    "Assumption": "Download and deployment procedures do not validate software integrity",
                    "Role": "System Administrator",
                    "Condition": "Software integrity checks are weak"
                },
                {
                    "Assumption": "Attack vectors exist to introduce malware",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to GCS"
                }
            ],
            "Potential Impact": "Unauthorized execution of privileged commands impacting GCS and drone communications.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "malware introduction",
                "system admin access"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Vulnerabilities in cloud-based APIs are exploited to gain administrative privileges on servers.",
            "Assumptions": [
                {
                    "Assumption": "APIs contain flaws that can be exploited",
                    "Role": "API Developer",
                    "Condition": "APIs are not rigorously tested for security"
                },
                {
                    "Assumption": "Access controls around APIs are weak",
                    "Role": "System Administrator",
                    "Condition": "Weak access policies"
                },
                {
                    "Assumption": "Attackers can interact with the API endpoints",
                    "Role": "Attacker",
                    "Condition": "Network access to API endpoints"
                }
            ],
            "Potential Impact": "Complete control over cloud resources, potentially leading to data breaches and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "API exploitation",
                "cloud privilege escalation",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Cloud API",
                "description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",
                "id": "attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf",
                "technique_id": "T1059.009"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "10",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a legitimate drone operator to gain control over one or more drones.",
            "Assumptions": [
                {
                    "Assumption": "The attacker knows or can guess the credentials used by the legitimate operator.",
                    "Role": "Attacker",
                    "Condition": "Valid if weak password policies are in place or credentials are leaked."
                },
                {
                    "Assumption": "The communication channel between the GCS and drones does not have proper mutual authentication.",
                    "Role": "System",
                    "Condition": "Valid if mutual authentication mechanisms are not robust."
                },
                {
                    "Assumption": "The attacker has access to the communication link or the login portal.",
                    "Role": "Attacker",
                    "Condition": "Valid if access control measures are weak."
                }
            ],
            "Potential Impact": "Unauthorized control over drones, leading to potential misuse of drones' capabilities.",
            "MITRE ATT&CK Keywords": [
                "Identity Impersonation",
                "Credentials Theft",
                "Network Spoofing",
                "Device Control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a trusted GCS to the drones, making them follow malicious commands.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the ability to intercept and analyze traffic between GCS and drones.",
                    "Role": "Attacker",
                    "Condition": "Valid if network encryption is weak or compromised."
                },
                {
                    "Assumption": "The attacker can replicate the GCS's digital certificate or authentication token.",
                    "Role": "Attacker",
                    "Condition": "Valid if certificate management is poor or tokens are reused."
                },
                {
                    "Assumption": "The drones are not configured to verify the authenticity of the GCS rigorously.",
                    "Role": "System",
                    "Condition": "Valid if the drones' security protocols are improperly established."
                }
            ],
            "Potential Impact": "Drones executing malicious commands, possible data theft, or unauthorized missions.",
            "MITRE ATT&CK Keywords": [
                "Network Impersonation",
                "Device Spoofing",
                "Command Spoofing"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a drone to the GCS, enabling them to inject fake data or collect legitimate commands.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate a signal that appears to originate from a legitimate drone.",
                    "Role": "Attacker",
                    "Condition": "Valid if wireless communication is not properly secured."
                },
                {
                    "Assumption": "The GCS lacks a robust method to authenticate each drone individually.",
                    "Role": "System",
                    "Condition": "Valid if per-device authentication is not enforced."
                },
                {
                    "Assumption": "The attacker has the technical capability to create a convincing payload.",
                    "Role": "Attacker",
                    "Condition": "Valid if technical expertise is available."
                }
            ],
            "Potential Impact": "Injection of false data into the system or interception of commands, leading to potential data breaches or mission failures.",
            "MITRE ATT&CK Keywords": [
                "Device Impersonation",
                "Data Injection",
                "Command Interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of the drones to introduce vulnerabilities or malicious functionality.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain physical or remote access to the drones.",
                    "Role": "Attacker",
                    "Condition": "Valid if access permissions are inadequate or bugs allow remote takeover."
                },
                {
                    "Assumption": "The firmware update process lacks proper verification or is not encrypted.",
                    "Role": "System",
                    "Condition": "Valid if secure update mechanisms are not implemented."
                },
                {
                    "Assumption": "The drones do not have mechanisms to detect and respond to firmware tampering.",
                    "Role": "System",
                    "Condition": "Valid if runtime integrity checks are missing."
                }
            ],
            "Potential Impact": "Potential control by malicious actors, data corruption, or unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "Firmware Modification",
                "Remote Code Execution",
                "Integrity Violation"
            ],
            "mitre_technique": {
                "name": "Software Deployment Tools",
                "description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.  \n\nAccess to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nSaaS-based configuration management services may allow for broad [Cloud Administration Command](https://attack.mitre.org/techniques/T1651) on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Azure AD.(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020) Such services may also utilize [Web Protocols](https://attack.mitre.org/techniques/T1071/001) to communicate back to adversary owned infrastructure.(Citation: Mitiga Security Advisory: SSM Agent as Remote Access Trojan)\n\nNetwork infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
                "id": "attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414",
                "technique_id": "T1072"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the communication protocols to inject false information into the command and control channel.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and alter communications between drones and the GCS.",
                    "Role": "Attacker",
                    "Condition": "Valid if communication channels are not encrypted or have weak encryption."
                },
                {
                    "Assumption": "The system does not validate message authenticity and integrity properly.",
                    "Role": "System",
                    "Condition": "Valid if message authentication codes (MACs) or similar mechanisms are not used."
                },
                {
                    "Assumption": "The attacker has the means and knowledge to alter the data format correctly.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has sufficient technical capability and access to protocol documentation."
                }
            ],
            "Potential Impact": "Incorrect data displayed or acted upon, potentially leading to system failures or misuse.",
            "MITRE ATT&CK Keywords": [
                "Protocol Manipulation",
                "Data Injection",
                "Message Alteration"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the cloud service(s) handling drone data storage and analytics to alter or delete critical data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to cloud storage credentials or can bypass authentication.",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials are leaked or cloud APIs have vulnerabilities."
                },
                {
                    "Assumption": "The cloud service does not implement adequate logging and integrity checks.",
                    "Role": "System",
                    "Condition": "Valid if logging and monitoring tools are not in place or insufficient."
                },
                {
                    "Assumption": "Proper access controls and segregation of duties are not enforced in the cloud services.",
                    "Role": "System",
                    "Condition": "Valid if user role management is weak."
                }
            ],
            "Potential Impact": "Loss, alteration, or unauthorized access to critical data, affecting missions and analytics accuracy.",
            "MITRE ATT&CK Keywords": [
                "Cloud Service Manipulation",
                "Data Tampering",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An authorized user denies having sent commands to the drones, leading to disputes and potential security gaps.",
            "Assumptions": [
                {
                    "Assumption": "The system does not have non-repudiation mechanisms like logging and digital signatures.",
                    "Role": "System",
                    "Condition": "Valid if action logging and verification are not robust."
                },
                {
                    "Assumption": "User actions are not timestamped accurately with synchronized clocks.",
                    "Role": "System",
                    "Condition": "Valid if time synchronization across components is poor."
                },
                {
                    "Assumption": "The logs can be modified without detection.",
                    "Role": "Attacker/User",
                    "Condition": "Valid if logs are not protected against tampering."
                }
            ],
            "Potential Impact": "Inability to verify actions performed, leading to disputes and decreased trust in the system.",
            "MITRE ATT&CK Keywords": [
                "Action Denial",
                "Command Repudiation",
                "Log Alteration"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies uploading or modifying data in the cloud service used by the drones, causing confusion and potential security audits.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not maintain immutable logs of user actions.",
                    "Role": "System",
                    "Condition": "Valid if logging is not properly implemented or protected."
                },
                {
                    "Assumption": "User authentication information is not captured at the time of actions.",
                    "Role": "System",
                    "Condition": "Valid if user actions are not associated with their credentials."
                },
                {
                    "Assumption": "There are no mechanisms to detect and alert on abnormal data modifications.",
                    "Role": "System",
                    "Condition": "Valid if anomaly detection is not in place."
                }
            ],
            "Potential Impact": "Confusion in audit trails, potentially leading to security reviews and undermined trust.",
            "MITRE ATT&CK Keywords": [
                "Data Modification Repudiation",
                "Cloud Service Audit",
                "User Action Denial"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies having received critical data from a drone, leading to accountability concerns.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log data transmission events between drones and operators accurately.",
                    "Role": "System",
                    "Condition": "Valid if logs are incomplete or tamperable."
                },
                {
                    "Assumption": "The communication channel lacks safeguards against data loss or tampering.",
                    "Role": "System",
                    "Condition": "Valid if transmission security is weak."
                },
                {
                    "Assumption": "Drones do not verify successful data receipt acknowledgments from the GCS.",
                    "Role": "System",
                    "Condition": "Valid if acknowledgment mechanisms are missing."
                }
            ],
            "Potential Impact": "Unclear data transmission accountability, leading to possible mission failures or miscommunications.",
            "MITRE ATT&CK Keywords": [
                "Data Transmission Denial",
                "Communication Integrity",
                "Accountability Gap"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data collected by the drones is intercepted during transmission to the ground control station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "Data transmission between drones and the GCS is not encrypted adequately.",
                    "Role": "System",
                    "Condition": "Valid if encryption protocols are weak or not used."
                },
                {
                    "Assumption": "The attacker has the ability to eavesdrop on network communications.",
                    "Role": "Attacker",
                    "Condition": "Valid if network is insecure or improperly segmented."
                },
                {
                    "Assumption": "The interception occurs in an area with high threat actor activity.",
                    "Role": "Environment",
                    "Condition": "Valid if in hostile regions or insecure locations."
                }
            ],
            "Potential Impact": "Unauthorized access and potential misuse of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "Network Eavesdropping",
                "Sensitive Data Interception",
                "Confidentiality Breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses logs stored on the cloud service, exposing sensitive mission data.",
            "Assumptions": [
                {
                    "Assumption": "Access controls to cloud-stored logs are weak or misconfigured.",
                    "Role": "System",
                    "Condition": "Valid if role-based access control is not enforced."
                },
                {
                    "Assumption": "The cloud service does not encrypt logs containing sensitive data.",
                    "Role": "System",
                    "Condition": "Valid if encryption is not applied to data at rest."
                },
                {
                    "Assumption": "Compliance with data access policies is not adequately enforced or monitored.",
                    "Role": "System",
                    "Condition": "Valid if policy enforcement is weak or audit trails are not checked."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data, leading to potential exploitation.",
            "MITRE ATT&CK Keywords": [
                "Cloud Data Exposure",
                "Log Access Exploitation",
                "Sensitive Data Disclosure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to the drone's onboard systems and extracts sensitive sensor data.",
            "Assumptions": [
                {
                    "Assumption": "The drones' onboard systems do not have adequate physical security or access controls.",
                    "Role": "System",
                    "Condition": "Valid if anti-tampering features are absent."
                },
                {
                    "Assumption": "Data on the drone is stored unencrypted or with weak encryption.",
                    "Role": "System",
                    "Condition": "Valid if encryption policies for stored data are lacking."
                },
                {
                    "Assumption": "The attacker has physical access to the drone or can utilize a vulnerability to access it remotely.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical security is compromised or remote vulnerabilities exist."
                }
            ],
            "Potential Impact": "Unauthorized retrieval and potential misuse of sensitive data collected by the drone.",
            "MITRE ATT&CK Keywords": [
                "Physical Access Exploitation",
                "Remote Data Extraction",
                "Sensor Data Exposure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the communication channel with junk data, disrupting the control and data transmission between drones and GCS.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels do not have mechanisms to filter or manage high volumes of traffic.",
                    "Role": "System",
                    "Condition": "Valid if lack of traffic management protocols."
                },
                {
                    "Assumption": "The attacker can generate high volumes of traffic directed at the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has sufficient resources or network access."
                },
                {
                    "Assumption": "There are inadequate monitoring and alerting mechanisms for unusual traffic patterns.",
                    "Role": "System",
                    "Condition": "Valid if network monitoring is not implemented fully."
                }
            ],
            "Potential Impact": "Disruption of drone operations, leading to mission failures and operational delays.",
            "MITRE ATT&CK Keywords": [
                "Communication Flooding",
                "Traffic Injection",
                "Network Disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a known vulnerability in the drone firmware to cause the drones to crash or become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "The drones are running firmware versions with known vulnerabilities.",
                    "Role": "System",
                    "Condition": "Valid if firmware updates are not regularly applied."
                },
                {
                    "Assumption": "The attacker is aware of these vulnerabilities and can exploit them.",
                    "Role": "Attacker",
                    "Condition": "Valid if the vulnerabilities are publicly known and documented."
                },
                {
                    "Assumption": "The drone systems do not have protective measures against such exploits.",
                    "Role": "System",
                    "Condition": "Valid if security patches and exploit mitigations are absent."
                }
            ],
            "Potential Impact": "Loss of drone availability and interruption of ongoing missions or operations.",
            "MITRE ATT&CK Keywords": [
                "Firmware Exploitation",
                "Remote Denial of Service",
                "System Crash"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms the cloud service with a high volume of requests, affecting the DaaS platform's ability to process legitimate data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not have adequate rate limiting or denial-of-service protection mechanisms.",
                    "Role": "System",
                    "Condition": "Valid if application-layer DDoS protections are not in place."
                },
                {
                    "Assumption": "The attacker can generate a significant number of requests to the cloud service.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has access to botnets or similar resources."
                },
                {
                    "Assumption": "Incident response and mitigation strategies are not fully developed or implemented.",
                    "Role": "System",
                    "Condition": "Valid if incident handling procedures are weak or incomplete."
                }
            ],
            "Potential Impact": "Service disruptions and inability to carry out mission-critical tasks due to cloud service unavailability.",
            "MITRE ATT&CK Keywords": [
                "Cloud Service Overload",
                "High Volume Requests",
                "Service Unavailability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the GCS software to gain higher privileges and control the system.",
            "Assumptions": [
                {
                    "Assumption": "The GCS software has exploitable vulnerabilities.",
                    "Role": "System",
                    "Condition": "Valid if security patches are not up-to-date or software is inherently insecure."
                },
                {
                    "Assumption": "The attacker can interact with the GCS application to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attack surface allows interaction or remote access."
                },
                {
                    "Assumption": "No effective intrusion detection and prevention systems are in place to detect the exploitation.",
                    "Role": "System",
                    "Condition": "Valid if monitoring and alert systems are lacking."
                }
            ],
            "Potential Impact": "Compromise of the GCS, leading to unauthorized control and potential further exploits.",
            "MITRE ATT&CK Keywords": [
                "GCS Exploitation",
                "Privilege Escalation",
                "System Control"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a privilege escalation vulnerability in the Linux OS used by drones or the GCS to gain root-level access.",
            "Assumptions": [
                {
                    "Assumption": "The Linux OS has known vulnerabilities that can be exploited.",
                    "Role": "System",
                    "Condition": "Valid if security patches are missing or delayed."
                },
                {
                    "Assumption": "The attacker has basic access to the system which can be leveraged for privilege escalation.",
                    "Role": "Attacker",
                    "Condition": "Valid if initial access is obtained through phishing or other means."
                },
                {
                    "Assumption": "No effective hardening or mitigations are applied to the Linux OS.",
                    "Role": "System",
                    "Condition": "Valid if security configurations are weak or default settings are used."
                }
            ],
            "Potential Impact": "Root access to critical systems, leading to complete control and potential malicious activities.",
            "MITRE ATT&CK Keywords": [
                "Root Access Exploitation",
                "Linux Privilege Escalation",
                "System Compromise"
            ],
            "mitre_technique": {
                "name": "Compromise Software Supply Chain",
                "description": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ",
                "id": "attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00",
                "technique_id": "T1195.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a deserialization vulnerability in the cloud service's API to execute arbitrary code with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service uses serialized objects that can be manipulated.",
                    "Role": "System",
                    "Condition": "Valid if secure coding practices for serialization are not followed."
                },
                {
                    "Assumption": "The attacker can send crafted objects to the API to trigger the deserialization flaw.",
                    "Role": "Attacker",
                    "Condition": "Valid if API input validation is weak or missing."
                },
                {
                    "Assumption": "No runtime protection mechanisms exist to prevent or detect such exploits.",
                    "Role": "System",
                    "Condition": "Valid if runtime protections like WAFs or EDR are not used."
                }
            ],
            "Potential Impact": "Execution of malicious code with elevated privileges, compromising the cloud service and potentially all stored data.",
            "MITRE ATT&CK Keywords": [
                "Deserialization Vulnerability",
                "API Compromise",
                "Code Execution"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "12",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate Ground Control Station (GCS) to take control of UAVs.",
            "Assumptions": [
                {
                    "Assumption": "No mutual authentication between UAVs and GCS",
                    "Role": "Developer",
                    "Condition": "Valid if mutual authentication is not implemented."
                },
                {
                    "Assumption": "Attacker has access to the network",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network is not sufficiently secured."
                },
                {
                    "Assumption": "Weak or no encryption",
                    "Role": "Cybersecurity Specialist",
                    "Condition": "Valid if inadequate encryption is used in communication."
                }
            ],
            "Potential Impact": "Loss of control and potential misuse of UAVs.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GCS",
                "UAV",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses phishing tactics to gain access to operator credentials for the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Operators are susceptible to phishing",
                    "Role": "Security Awareness Trainer",
                    "Condition": "Valid if no phishing training is provided."
                },
                {
                    "Assumption": "Credential reuse",
                    "Role": "Operator",
                    "Condition": "Valid if unique passwords are not used."
                },
                {
                    "Assumption": "Inadequate email filtering",
                    "Role": "IT Administrator",
                    "Condition": "Valid if email systems lack sufficient filtering."
                }
            ],
            "Potential Impact": "Unauthorized access to critical systems.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "GCS",
                "credentials",
                "email"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers impersonate cloud service APIs to intercept and manipulate data.",
            "Assumptions": [
                {
                    "Assumption": "API endpoints are not sufficiently verified",
                    "Role": "Developer",
                    "Condition": "Valid if endpoints are not properly authenticated."
                },
                {
                    "Assumption": "Lack of secure communication",
                    "Role": "Cybersecurity Specialist",
                    "Condition": "Valid if communication is not encrypted."
                },
                {
                    "Assumption": "Attacker has network access",
                    "Role": "Network Administrator",
                    "Condition": "Valid if the network is compromised."
                }
            ],
            "Potential Impact": "Data manipulation and unauthorized access to stored information.",
            "MITRE ATT&CK Keywords": [
                "API",
                "cloud service",
                "intercept",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Firmware tampering by exploiting vulnerabilities in the drone firmware.",
            "Assumptions": [
                {
                    "Assumption": "Firmware has known vulnerabilities",
                    "Role": "Developer",
                    "Condition": "Valid if vulnerabilities are not patched."
                },
                {
                    "Assumption": "No integrity checks for firmware updates",
                    "Role": "Cybersecurity Specialist",
                    "Condition": "Valid if integrity checks are not implemented."
                },
                {
                    "Assumption": "Physical or remote access to drones",
                    "Role": "Security Officer",
                    "Condition": "Valid if access controls are weak."
                }
            ],
            "Potential Impact": "Corruption or manipulation of UAV functionality.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "tampering",
                "UAV",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Data alteration during transmission between the UAV and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Use of insecure communication protocols",
                    "Role": "Developer",
                    "Condition": "Valid if strong protocols are not used."
                },
                {
                    "Assumption": "Attacker has access to communication channels",
                    "Role": "Network Administrator",
                    "Condition": "Valid if communication is not isolated."
                },
                {
                    "Assumption": "Lack of encryption",
                    "Role": "Cybersecurity Specialist",
                    "Condition": "Valid if data is transmitted without encryption."
                }
            ],
            "Potential Impact": "Manipulated data leading to incorrect decisions.",
            "MITRE ATT&CK Keywords": [
                "data alteration",
                "communication",
                "UAV",
                "GCS"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulation of data stored in cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls for cloud services",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if access controls are inadequate."
                },
                {
                    "Assumption": "No integrity verification mechanisms",
                    "Role": "Developer",
                    "Condition": "Valid if verification mechanisms are lacking."
                },
                {
                    "Assumption": "Compromised credentials",
                    "Role": "Operator",
                    "Condition": "Valid if credentials are leaked or stolen."
                }
            ],
            "Potential Impact": "Corruption of stored data and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "cloud services",
                "data manipulation",
                "storage",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny actions performed in the GCS without proper logging.",
            "Assumptions": [
                {
                    "Assumption": "Lack of comprehensive logging",
                    "Role": "Developer",
                    "Condition": "Valid if logging is not implemented."
                },
                {
                    "Assumption": "No secure audit trails",
                    "Role": "Cybersecurity Specialist",
                    "Condition": "Valid if audit trails are not secure."
                },
                {
                    "Assumption": "No nonrepudiation controls",
                    "Role": "Developer",
                    "Condition": "Valid if controls are omitted."
                }
            ],
            "Potential Impact": "Difficulty in forensic analysis and tracking of actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "GCS",
                "nonrepudiation"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud services used for data processing lack proper transaction logging.",
            "Assumptions": [
                {
                    "Assumption": "No logs for cloud transactions",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if logs are not created."
                },
                {
                    "Assumption": "Log tampering vulnerabilities",
                    "Role": "Developer",
                    "Condition": "Valid if logs can be easily tampered."
                },
                {
                    "Assumption": "No traceability mechanisms",
                    "Role": "Developer",
                    "Condition": "Valid if traceability is not enforced."
                }
            ],
            "Potential Impact": "Inability to verify data transactions and identify malicious actions.",
            "MITRE ATT&CK Keywords": [
                "cloud services",
                "transaction logging",
                "data processing",
                "nonrepudiation"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators use anonymity techniques to obscure their actions.",
            "Assumptions": [
                {
                    "Assumption": "No user identification mechanisms",
                    "Role": "Developer",
                    "Condition": "Valid if user identification is not enforced."
                },
                {
                    "Assumption": "Unsecured GCS access",
                    "Role": "IT Administrator",
                    "Condition": "Valid if access control is weak."
                },
                {
                    "Assumption": "No monitoring",
                    "Role": "Cybersecurity Specialist",
                    "Condition": "Valid if monitoring is not active."
                }
            ],
            "Potential Impact": "Actions cannot be traced back to specific users.",
            "MITRE ATT&CK Keywords": [
                "anonymity",
                "GCS",
                "user actions",
                "nonrepudiation"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of sensitive data transmitted between UAVs and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Use of unencrypted communication",
                    "Role": "Developer",
                    "Condition": "Valid if encryption is not implemented."
                },
                {
                    "Assumption": "Attacker has access to transmission medium",
                    "Role": "Network Administrator",
                    "Condition": "Valid if communication medium is accessible."
                },
                {
                    "Assumption": "No secured channels",
                    "Role": "Cybersecurity Specialist",
                    "Condition": "Valid if communication channels are not secured."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "UAV",
                "GCS",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exfiltration of sensitive data from cloud services storing mission data.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls for cloud data",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if access controls are inadequate."
                },
                {
                    "Assumption": "No data encryption in cloud storage",
                    "Role": "Developer",
                    "Condition": "Valid if data is stored without encryption."
                },
                {
                    "Assumption": "Credential compromise",
                    "Role": "Operator",
                    "Condition": "Valid if credentials are leaked or stolen."
                }
            ],
            "Potential Impact": "Unauthorized access to and exfiltration of mission-critical data.",
            "MITRE ATT&CK Keywords": [
                "cloud services",
                "data exfiltration",
                "mission data",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacker intercepts GPS coordinates transmitted from UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Use of unencrypted GPS data transmission",
                    "Role": "Developer",
                    "Condition": "Valid if GPS coordinates are transmitted without encryption."
                },
                {
                    "Assumption": "Attacker has access to communication channels",
                    "Role": "Network Administrator",
                    "Condition": "Valid if communication channels are compromised."
                },
                {
                    "Assumption": "No data masking techniques used",
                    "Role": "Developer",
                    "Condition": "Valid if data masking is not implemented."
                }
            ],
            "Potential Impact": "Disclosure of sensitive location information.",
            "MITRE ATT&CK Keywords": [
                "GPS",
                "data interception",
                "UAV",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the GCS to disrupt communications.",
            "Assumptions": [
                {
                    "Assumption": "GCS lacks DDoS protection",
                    "Role": "Cybersecurity Specialist",
                    "Condition": "Valid if no DDoS protection measures are implemented."
                },
                {
                    "Assumption": "Network is accessible to attackers",
                    "Role": "Network Administrator",
                    "Condition": "Valid if the network is poorly secured."
                },
                {
                    "Assumption": "High traffic capacity",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers can generate high traffic."
                }
            ],
            "Potential Impact": "Disruption of UAV operations and loss of control.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "GCS",
                "DDoS",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of vulnerabilities in UAV firmware to cause system crashes.",
            "Assumptions": [
                {
                    "Assumption": "Known firmware vulnerabilities",
                    "Role": "Developer",
                    "Condition": "Valid if vulnerabilities are not patched."
                },
                {
                    "Assumption": "No firmware redundancy",
                    "Role": "System Architect",
                    "Condition": "Valid if firmware lacks redundancy."
                },
                {
                    "Assumption": "Physical or remote access to UAVs",
                    "Role": "Security Officer",
                    "Condition": "Valid if access controls are weak."
                }
            ],
            "Potential Impact": "UAVs become inoperable.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "Exploitation",
                "UAV",
                "system crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Jamming of communication frequencies used by UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Use of unsecure frequencies",
                    "Role": "System Architect",
                    "Condition": "Valid if frequencies are not secure."
                },
                {
                    "Assumption": "No anti-jamming measures",
                    "Role": "Developer",
                    "Condition": "Valid if anti-jamming measures are not implemented."
                },
                {
                    "Assumption": "Attacker has access to jamming equipment",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers possess jamming equipment."
                }
            ],
            "Potential Impact": "Loss of communication and control of UAVs.",
            "MITRE ATT&CK Keywords": [
                "communication jamming",
                "UAV",
                "frequencies",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of software vulnerabilities to gain root access to drones.",
            "Assumptions": [
                {
                    "Assumption": "Known software vulnerabilities",
                    "Role": "Developer",
                    "Condition": "Valid if vulnerabilities are not patched."
                },
                {
                    "Assumption": "No privilege separation",
                    "Role": "System Architect",
                    "Condition": "Valid if software lacks privilege separation."
                },
                {
                    "Assumption": "Attacker has physical or remote access",
                    "Role": "Security Officer",
                    "Condition": "Valid if access controls are weak."
                }
            ],
            "Potential Impact": "Full control over drone operations and data.",
            "MITRE ATT&CK Keywords": [
                "software vulnerabilities",
                "root access",
                "UAV",
                "elevation of privilege"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Privilege escalation through manipulating GCS software configurations.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigured GCS software",
                    "Role": "IT Administrator",
                    "Condition": "Valid if software configurations are insecure."
                },
                {
                    "Assumption": "Lack of thorough configuration review",
                    "Role": "Cybersecurity Specialist",
                    "Condition": "Valid if configurations are not regularly reviewed."
                },
                {
                    "Assumption": "Attacker has access to the GCS network",
                    "Role": "Network Administrator",
                    "Condition": "Valid if the network is compromised."
                }
            ],
            "Potential Impact": "Unauthorized control and manipulation of the GCS.",
            "MITRE ATT&CK Keywords": [
                "configuration manipulation",
                "GCS",
                "Privilege Escalation",
                "network"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting vulnerabilities in cloud service APIs to escalate privileges.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerable cloud APIs",
                    "Role": "Developer",
                    "Condition": "Valid if API vulnerabilities exist."
                },
                {
                    "Assumption": "No input validation in APIs",
                    "Role": "Developer",
                    "Condition": "Valid if input validation is missing."
                },
                {
                    "Assumption": "Intruders have access to API credentials",
                    "Role": "Network Administrator",
                    "Condition": "Valid if API credentials are leaked."
                }
            ],
            "Potential Impact": "Gain higher privileges in cloud services and access sensitive data.",
            "MITRE ATT&CK Keywords": [
                "cloud service",
                "API vulnerabilities",
                "Privilege Escalation",
                "input validation"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "14",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate GCS to issue commands to the drones.",
            "Assumptions": [
                {
                    "Assumption": "The GCS communication is not well-encrypted or authenticated.",
                    "Role": "Attacker",
                    "Condition": "The GCS and drones use insecure communication protocols."
                },
                {
                    "Assumption": "The attacker has physical or network access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "The attacker is within the range of the communication link between GCS and UAVs."
                },
                {
                    "Assumption": "The attacker possesses knowledge or tools to bypass any weak encryption mechanisms in place.",
                    "Role": "Attacker",
                    "Condition": "The attacker has technical expertise and access to cracking tools."
                }
            ],
            "Potential Impact": "Unauthorized control over drones leading to mission disruption and potential data theft.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GCS",
                "communication hijacking",
                "network intrusion"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises as an authorized operator to access the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The GCS employs weak or guessable authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "The GCS uses basic authentication without multi-factor authentication (MFA)."
                },
                {
                    "Assumption": "The attacker has obtained or guessed valid credentials.",
                    "Role": "Attacker",
                    "Condition": "The attacker has performed credential stuffing or social engineering."
                },
                {
                    "Assumption": "The attacker can bypass any environmental constraints.",
                    "Role": "Attacker",
                    "Condition": "The attacker is physically close enough to access the GCS or can remotely connect."
                }
            ],
            "Potential Impact": "Unauthorized access to control drones, leading to potential mission sabotage and data compromise.",
            "MITRE ATT&CK Keywords": [
                "credential stuffing",
                "social engineering",
                "GCS access"
            ],
            "mitre_technique": {
                "name": "Credential Stuffing",
                "description": "Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.\n\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)",
                "id": "attack-pattern--b2d03cea-aec1-45ca-9744-9ee583c1e1cc",
                "technique_id": "T1110.004"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a drone's sensor data to mislead the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Sensor data lacks integrity checks.",
                    "Role": "Attacker",
                    "Condition": "The drone sensors communicate data without strong integrity verification."
                },
                {
                    "Assumption": "The attacker has access to the communication or sensor systems.",
                    "Role": "Attacker",
                    "Condition": "The attacker can intercept and modify sensor data."
                },
                {
                    "Assumption": "The GCS does not verify the authenticity of incoming data.",
                    "Role": "GCS",
                    "Condition": "The GCS accepts data without rigorous validation."
                }
            ],
            "Potential Impact": "Manipulation of mission-critical data, leading to faulty or harmful decision-making.",
            "MITRE ATT&CK Keywords": [
                "sensor spoofing",
                "data manipulation",
                "communication interception"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Firmware on the UAVs is replaced with malicious firmware by an adversary.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate firmware verification mechanisms during updates.",
                    "Role": "Drone Manufacturer",
                    "Condition": "The firmware update process does not verify the integrity and authenticity of new firmware."
                },
                {
                    "Assumption": "Physical or remote access to the UAV's update interface.",
                    "Role": "Attacker",
                    "Condition": "The attacker gains access through physical tampering or exploiting remote vulnerabilities."
                },
                {
                    "Assumption": "Exploitable vulnerabilities exist in the current firmware.",
                    "Role": "Researcher",
                    "Condition": "The current firmware has security flaws that the attacker can exploit."
                }
            ],
            "Potential Impact": "Uncontrolled drone behavior, data corruption, and loss of mission integrity.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "update interception",
                "code injection"
            ],
            "mitre_technique": {
                "name": "Dynamic-link Library Injection",
                "description": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) \n\nAnother variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--f4599aa0-4f85-4a32-80ea-fc39dc965945",
                "technique_id": "T1055.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the GCS and modifies mission-critical commands.",
            "Assumptions": [
                {
                    "Assumption": "Weak access control measures at the GCS.",
                    "Role": "System Administrator",
                    "Condition": "Access controls do not properly limit user privileges."
                },
                {
                    "Assumption": "The attacker has compromised user credentials.",
                    "Role": "Attacker",
                    "Condition": "The attacker has obtained valid login credentials through phishing or brute force."
                },
                {
                    "Assumption": "Vulnerabilities in the GCS software allow tampering.",
                    "Role": "Software Developer",
                    "Condition": "The GCS software has unpatched vulnerabilities."
                }
            ],
            "Potential Impact": "Mission failure, altered mission objectives, and potential loss of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "command injection",
                "privilege escalation",
                "GCS tampering"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters data communication between the UAVs and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The communication channel is not encrypted or uses weak encryption.",
                    "Role": "Systems Architect",
                    "Condition": "The communication protocols lack strong encryption practices."
                },
                {
                    "Assumption": "The attacker can tap into the communication links.",
                    "Role": "Attacker",
                    "Condition": "The attacker has physical or logical access to the communication hardware or network."
                },
                {
                    "Assumption": "Adequate monitoring and intrusion detection mechanisms are absent.",
                    "Role": "Security Engineer",
                    "Condition": "Intrusion detection systems are weak or non-existent."
                }
            ],
            "Potential Impact": "Altered data compromising mission integrity and trust in communication.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "man-in-the-middle",
                "communication interception"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny sending specific commands that were issued to the drones.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks detailed logging and auditing capabilities.",
                    "Role": "System Architect",
                    "Condition": "The system does not maintain comprehensive logs."
                },
                {
                    "Assumption": "Authentication mechanisms are weak or non-existent.",
                    "Role": "System Administrator",
                    "Condition": "Weak or missing methods to verify the identity of command issuers."
                },
                {
                    "Assumption": "No mechanism exists to validate command authenticity.",
                    "Role": "Software Developer",
                    "Condition": "The system does not support cryptographic validation of commands."
                }
            ],
            "Potential Impact": "Difficulty in attributing actions, loss of accountability, and potential misuse of system functions without consequence.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation failure",
                "audit log evasion",
                "command forgery"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker removes traces of compromising activities from the GCS logs.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not protected against tampering.",
                    "Role": "System Administrator",
                    "Condition": "Logs can be modified or deleted by users with sufficient access."
                },
                {
                    "Assumption": "Logging mechanisms are not robust.",
                    "Role": "Software Developer",
                    "Condition": "The logging mechanism does not implement secure practices."
                },
                {
                    "Assumption": "Adversaries have sufficient privileges to modify logs.",
                    "Role": "Attacker",
                    "Condition": "Adversaries have escalated to high privilege levels in the system."
                }
            ],
            "Potential Impact": "Loss of forensic evidence, making it difficult to trace the origin and scope of an attack.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "evidence destruction",
                "audit log evasion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider modifies or deletes crucial audit logs to conceal unauthorized actions.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have unnecessary or unrestricted access to audit logs.",
                    "Role": "System Administrator",
                    "Condition": "Access control policies do not restrict log access."
                },
                {
                    "Assumption": "There is a lack of monitoring for log modifications.",
                    "Role": "Security Engineer",
                    "Condition": "Monitoring systems do not track changes to audit logs."
                },
                {
                    "Assumption": "Logs are not stored in a tamper-evident manner.",
                    "Role": "System Architect",
                    "Condition": "Appropriate techniques to protect logs from tampering are not employed."
                }
            ],
            "Potential Impact": "Difficulty in detecting insider threats and undermining the integrity of forensic analyses.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "audit log tampering",
                "non-repudiation failure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted during communication between drones and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Communications are not encrypted or use weak encryption.",
                    "Role": "Systems Architect",
                    "Condition": "The system does not enforce end-to-end encryption."
                },
                {
                    "Assumption": "Adversaries can access the communication channels.",
                    "Role": "Attacker",
                    "Condition": "The attacker can place themselves between the communication points."
                },
                {
                    "Assumption": "Intrusion detection systems are insufficient or absent.",
                    "Role": "Security Engineer",
                    "Condition": "The system lacks effective monitoring of communication channels."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, potential exposure of mission details, and privacy violations.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "communication eavesdropping",
                "weak encryption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud storage for drone data is compromised by an external adversary.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage lacks strong access control policies.",
                    "Role": "Cloud Provider",
                    "Condition": "Improper or inadequate access controls are configured."
                },
                {
                    "Assumption": "No encryption of data at rest in the cloud.",
                    "Role": "Cloud Infrastructure Team",
                    "Condition": "Stored data is not encrypted or has improperly managed keys."
                },
                {
                    "Assumption": "No alerting or monitoring for unauthorized data accesses.",
                    "Role": "Security Engineer",
                    "Condition": "The cloud environment does not effectively monitor and alert on anomalous access patterns."
                }
            ],
            "Potential Impact": "Exposure of sensitive mission and operational data stored in the cloud.",
            "MITRE ATT&CK Keywords": [
                "cloud storage compromise",
                "data exfiltration",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive GPS coordinates and data streams exposed via unsecured APIs.",
            "Assumptions": [
                {
                    "Assumption": "APIs lack proper authentication and encryption mechanisms.",
                    "Role": "API Developer",
                    "Condition": "APIs are designed without secure practices."
                },
                {
                    "Assumption": "APIs are accessible over the public internet without restrictions.",
                    "Role": "Systems Architect",
                    "Condition": "APIs are exposed without adequate filtering or firewalls."
                },
                {
                    "Assumption": "No monitoring for API usage and anomalies.",
                    "Role": "Security Engineer",
                    "Condition": "The organization lacks an API monitoring solution."
                }
            ],
            "Potential Impact": "Exposure of sensitive location and operational data.",
            "MITRE ATT&CK Keywords": [
                "API security",
                "data leakage",
                "insecure APIs"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the GCS crippling drone operations.",
            "Assumptions": [
                {
                    "Assumption": "The GCS is exposed to the public internet without effective rate limiting.",
                    "Role": "Network Administrator",
                    "Condition": "No rate limiting or effective DDoS protection in place."
                },
                {
                    "Assumption": "GCS can be overloaded by a sufficiently large volume of traffic.",
                    "Role": "System Administrator",
                    "Condition": "The GCS lacks capacity to handle large traffic spikes."
                },
                {
                    "Assumption": "No mitigation strategies like WAF or CDN are used.",
                    "Role": "Security Engineer",
                    "Condition": "The system does not employ mitigation techniques to handle DDoS attempts."
                }
            ],
            "Potential Impact": "Service disruption for the GCS, loss of command and control over drones.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "service disruption",
                "network flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Firmware vulnerability exploited to crash UAV operating systems.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched firmware with known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Firmware updates are not regularly applied or managed."
                },
                {
                    "Assumption": "The attacker can gain physical or remote access to UAV firmware.",
                    "Role": "Attacker",
                    "Condition": "The attacker has the means to deploy the exploit."
                },
                {
                    "Assumption": "No integrity checks for firmware integrity before operation.",
                    "Role": "Drone Manufacturer",
                    "Condition": "Drones do not perform integrity verification on boot."
                }
            ],
            "Potential Impact": "Drone operations are halted with risk of crash or mission failure.",
            "MITRE ATT&CK Keywords": [
                "firmware exploit",
                "remote exploitation",
                "device crash"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of cloud service vulnerabilities causing service outages.",
            "Assumptions": [
                {
                    "Assumption": "Usage of cloud services with known security flaws.",
                    "Role": "Cloud Infrastructure Team",
                    "Condition": "The services are not regularly audited and updated."
                },
                {
                    "Assumption": "Lack of redundancy and failover mechanisms in place.",
                    "Role": "Systems Architect",
                    "Condition": "The cloud architecture does not employ high availability practices."
                },
                {
                    "Assumption": "The attacker can access cloud management interfaces.",
                    "Role": "Attacker",
                    "Condition": "Cloud management interfaces are exposed to the internet with weak defenses."
                }
            ],
            "Potential Impact": "Loss of cloud-based services, affecting data processing and analysis.",
            "MITRE ATT&CK Keywords": [
                "cloud service disruption",
                "availability attack",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of a zero-day vulnerability in UAV firmware permitting root access.",
            "Assumptions": [
                {
                    "Assumption": "UAV firmware contains unpatched zero-day vulnerabilities.",
                    "Role": "Firmware Developer",
                    "Condition": "The firmware lacks recent security patches."
                },
                {
                    "Assumption": "The attacker has sufficient knowledge to exploit the firmware.",
                    "Role": "Attacker",
                    "Condition": "The attacker is skilled in reverse engineering."
                },
                {
                    "Assumption": "No mechanisms in place to detect or prevent elevation of privileges.",
                    "Role": "System Administrator",
                    "Condition": "The system does not employ behavior-based threat detection."
                }
            ],
            "Potential Impact": "Complete control over the drone, allowing unauthorized access to sensitive operations.",
            "MITRE ATT&CK Keywords": [
                "zero-day exploitation",
                "root access",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromise of GCS operator accounts through phishing, leading to admin-level access.",
            "Assumptions": [
                {
                    "Assumption": "Operators are susceptible to phishing attacks.",
                    "Role": "End User",
                    "Condition": "Operators lack proper security training."
                },
                {
                    "Assumption": "The phishing attack bypasses existing email security solutions.",
                    "Role": "Attacker",
                    "Condition": "The attacker uses sophisticated phishing techniques."
                },
                {
                    "Assumption": "Operator accounts do not employ multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Accounts are only secured with single-factor authentication."
                }
            ],
            "Potential Impact": "Adversaries gain administrative privileges, leading to manipulation or misuse of the system.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credential compromise",
                "admin access"
            ],
            "mitre_technique": {
                "name": "Spearphishing Attachment",
                "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.(Citation: Unit 42 DarkHydrus July 2018) Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
                "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
                "technique_id": "T1566.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of cloud infrastructure vulnerabilities to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Cloud infrastructure has known vulnerabilities.",
                    "Role": "Cloud Infrastructure Team",
                    "Condition": "The cloud infrastructure lacks recent patches."
                },
                {
                    "Assumption": "The attacker can access and exploit cloud management interfaces.",
                    "Role": "Attacker",
                    "Condition": "Weak access controls on cloud management interfaces."
                },
                {
                    "Assumption": "No robust monitoring for suspicious activities.",
                    "Role": "Security Engineer",
                    "Condition": "The cloud environment lacks effective monitoring solutions."
                }
            ],
            "Potential Impact": "Control over cloud resources leading to potential data theft or corruption.",
            "MITRE ATT&CK Keywords": [
                "cloud vulnerability exploitation",
                "privilege escalation",
                "admin control"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "13",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a drone operator using stolen credentials to gain unauthorized access to the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "Stolen or weak credentials",
                    "Role": "Attacker",
                    "Condition": "Credentials are not adequately protected or are easily guessable"
                },
                {
                    "Assumption": "GCS authentication does not detect spoofed identities",
                    "Role": "System",
                    "Condition": "Lack of multi-factor authentication or advanced detection mechanisms"
                },
                {
                    "Assumption": "Attacker has access to the same communication channels as legitimate users",
                    "Role": "Attacker",
                    "Condition": "Physical or network access to communication channels"
                }
            ],
            "Potential Impact": "Unauthorized access to control drones and potentially manipulate missions.",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Spoofing",
                "Man-in-the-Middle",
                "Network"
            ],
            "mitre_technique": {
                "name": "Socket Filters",
                "description": "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
                "id": "attack-pattern--005cc321-08ce-4d17-b1ea-cb5275926520",
                "technique_id": "T1205.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor uses a fake drone with similar communication credentials to join the fleet managed by the DaaS platform.",
            "Assumptions": [
                {
                    "Assumption": "Weak onboarding security measures for new drones",
                    "Role": "System",
                    "Condition": "Lack of strong cryptographic measures during drone registration"
                },
                {
                    "Assumption": "Attacker has technical knowledge to simulate legitimate drone behavior",
                    "Role": "Attacker",
                    "Condition": "Experience with drone technology and protocols"
                },
                {
                    "Assumption": "Attacker can intercept communication channels or has physical access to the drone network",
                    "Role": "Attacker",
                    "Condition": "Network vulnerability or insufficient physical security measures"
                }
            ],
            "Potential Impact": "Inclusion of rogue drones in operations, which could lead to data compromise or physical damage.",
            "MITRE ATT&CK Keywords": [
                "Network Infiltration",
                "Device Impersonation",
                "Spoofing",
                "Communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts and alters communication between the drones and GCS, pretending to be a legitimate drone mid-operation.",
            "Assumptions": [
                {
                    "Assumption": "Unsecured communication channel between drones and GCS",
                    "Role": "System",
                    "Condition": "Communication protocols lack encryption or proper authentication"
                },
                {
                    "Assumption": "Attacker has the ability to intercept traffic",
                    "Role": "Attacker",
                    "Condition": "Access to the network and knowledge of drone communication protocols"
                },
                {
                    "Assumption": "GCS does not verify integrity of messages received",
                    "Role": "System",
                    "Condition": "Lack of message integrity checks"
                }
            ],
            "Potential Impact": "Alteration of drone commands leading to mission failures or capture of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Man-in-the-Middle",
                "Communication Interception",
                "Spoofing",
                "Data Tampering"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker remotely exploits firmware vulnerabilities on a UAV to alter its behavior or collect unauthorized data.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerable firmware in UAVs",
                    "Role": "System",
                    "Condition": "Presence of known or zero-day vulnerabilities in firmware"
                },
                {
                    "Assumption": "Attacker has capability to deliver malicious payload",
                    "Role": "Attacker",
                    "Condition": "Access to firmware update mechanism or communication channel"
                },
                {
                    "Assumption": "Lack of integrity checks on firmware updates",
                    "Role": "System",
                    "Condition": "Firmware updates are not verified for authenticity"
                }
            ],
            "Potential Impact": "Misuse of drone capabilities, data breaches, and potential physical harm.",
            "MITRE ATT&CK Keywords": [
                "Firmware Exploitation",
                "Remote Code Execution",
                "Tampering",
                "Device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider with admin access at the Ground Control Station modifies mission-critical software configurations to cause mission failures.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls for critical software settings",
                    "Role": "System",
                    "Condition": "Lack of role-based access control and auditing"
                },
                {
                    "Assumption": "Insider has sufficient privileges to alter configurations",
                    "Role": "Insider",
                    "Condition": "Insider has undetected admin rights"
                },
                {
                    "Assumption": "Lack of monitoring for configuration changes",
                    "Role": "System",
                    "Condition": "No real-time alerts or logs for configuration changes"
                }
            ],
            "Potential Impact": "Compromise of mission integrity and potential physical harm or operational failure.",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Configuration Tampering",
                "Privilege Misuse",
                "Software"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A remote attacker uses a CVE vulnerability to exploit the cloud-based storage system, altering stored data associated with drone missions.",
            "Assumptions": [
                {
                    "Assumption": "Exploitable CVE in the cloud storage system",
                    "Role": "System",
                    "Condition": "Cloud services are not updated to patch known vulnerabilities"
                },
                {
                    "Assumption": "Attacker has access to exploit code",
                    "Role": "Attacker",
                    "Condition": "Attacker can acquire or develop exploit code"
                },
                {
                    "Assumption": "Cloud storage lacks sufficient integrity checks and monitoring",
                    "Role": "System",
                    "Condition": "Absence of checksum validation or anomaly detection"
                }
            ],
            "Potential Impact": "Data corruption, loss of mission data, and alteration of operational records.",
            "MITRE ATT&CK Keywords": [
                "Cloud Exploitation",
                "Data Tampering",
                "CVE Exploitation",
                "Storage"
            ],
            "mitre_technique": {
                "name": "Taint Shared Content",
                "description": "\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",
                "id": "attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c",
                "technique_id": "T1080"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies sending specific commands or accessing certain data if proper logging is not implemented in the GCS.",
            "Assumptions": [
                {
                    "Assumption": "No comprehensive logging of user actions",
                    "Role": "System",
                    "Condition": "Logging not implemented or insufficiently detailed"
                },
                {
                    "Assumption": "Operators have the ability to access and interact with the system without logging",
                    "Role": "Operator",
                    "Condition": "System lacks monitoring and access control"
                },
                {
                    "Assumption": "No real-time monitoring or audit trails",
                    "Role": "System",
                    "Condition": "System does not actively monitor or audit user actions"
                }
            ],
            "Potential Impact": "Difficulty in accountability and investigation, leading to potential misuse and exploitation.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging Deficiency",
                "Audit Evasion",
                "User Action"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A third-party service provider accessed and modified mission data, but denies any involvement due to lack of third-party logging.",
            "Assumptions": [
                {
                    "Assumption": "Third-party services are not logged",
                    "Role": "System",
                    "Condition": "Third-party interactions are not monitored or logged"
                },
                {
                    "Assumption": "Multiple third-party providers have access to the mission data",
                    "Role": "System",
                    "Condition": "Third-party access to sensitive mission data is necessary"
                },
                {
                    "Assumption": "No mutual audit agreement with third-party providers",
                    "Role": "System",
                    "Condition": "No agreements or contracts for auditing third-party access"
                }
            ],
            "Potential Impact": "Compromised mission data integrity and inability to trace or validate changes made by third parties.",
            "MITRE ATT&CK Keywords": [
                "Third-Party Access",
                "Repudiation",
                "Data Modification",
                "Logging"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Logs",
                "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
                "id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
                "technique_id": "T1562.008"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A rogue operator deletes mission logs to cover up unauthorized actions taken during a mission.",
            "Assumptions": [
                {
                    "Assumption": "Operators have the ability to delete or modify logs",
                    "Role": "System",
                    "Condition": "Insufficient controls on log access and integrity"
                },
                {
                    "Assumption": "No log backups or redundancy",
                    "Role": "System",
                    "Condition": "Logs are not backed up or securely replicated"
                },
                {
                    "Assumption": "No real-time or offsite log storage",
                    "Role": "System",
                    "Condition": "Logs are only stored locally and not streamed to a secure location"
                }
            ],
            "Potential Impact": "Loss of critical forensic data and inability to perform accurate post-incident analysis.",
            "MITRE ATT&CK Keywords": [
                "Log Deletion",
                "Repudiation",
                "Unauthorized Actions",
                "Mission Logs"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted communication between UAVs and the GCS, gaining access to sensitive mission data.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted communication channels",
                    "Role": "System",
                    "Condition": "Lack of encryption for data in transit"
                },
                {
                    "Assumption": "Attacker\u2019s ability to access communication medium",
                    "Role": "Attacker",
                    "Condition": "Physical or network proximity to communication channels"
                },
                {
                    "Assumption": "No end-to-end encryption",
                    "Role": "System",
                    "Condition": "Encryption is not applied from source to destination"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of mission-related sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Data Interception",
                "Information Disclosure",
                "Network Monitoring",
                "Unencrypted Communication"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised drone sends telemetry data to an unauthorized external server due to a malware infection.",
            "Assumptions": [
                {
                    "Assumption": "Drone firmware vulnerabilities allowing malware infection",
                    "Role": "System",
                    "Condition": "Exploitable vulnerabilities in drone firmware"
                },
                {
                    "Assumption": "Attacker can install malware on the drone",
                    "Role": "Attacker",
                    "Condition": "Malware delivery mechanism is effective"
                },
                {
                    "Assumption": "No outbound communication monitoring",
                    "Role": "System",
                    "Condition": "Lack of monitoring for abnormal outbound connections"
                }
            ],
            "Potential Impact": "Leakage of sensitive telemetry data to unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "Malware Infection",
                "Data Exfiltration",
                "Telemetry Data",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider leaks cloud-stored mission data to unauthorized parties by circumventing access controls.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient cloud access controls",
                    "Role": "System",
                    "Condition": "Access controls do not adequately protect sensitive data"
                },
                {
                    "Assumption": "Insider has legitimate access to cloud-stored data",
                    "Role": "Insider",
                    "Condition": "Insider has necessary permissions to access and handle data"
                },
                {
                    "Assumption": "No monitoring or detection of abnormal access patterns",
                    "Role": "System",
                    "Condition": "System lacks analytics for detecting unusual data access or transfers"
                }
            ],
            "Potential Impact": "Sensitive mission data is disclosed to unauthorized parties, risking operational security.",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Data Leakage",
                "Cloud Storage",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the GCS, disrupting control and coordination of UAVs.",
            "Assumptions": [
                {
                    "Assumption": "GCS lacks protection against high volume traffic",
                    "Role": "System",
                    "Condition": "Absence of DDoS protection mechanisms"
                },
                {
                    "Assumption": "Attacker has resources to generate high traffic volumes",
                    "Role": "Attacker",
                    "Condition": "Possession of botnet or similar capabilities"
                },
                {
                    "Assumption": "Network bandwidth and redundancy limitations",
                    "Role": "System",
                    "Condition": "Limited network capacity and failure to distribute load effectively"
                }
            ],
            "Potential Impact": "Loss of control and coordination over drones resulting in mission failure.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Traffic Flooding",
                "Denial of Service",
                "Network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A CVE vulnerability in the cloud infrastructure is exploited to overwhelm the cloud services, rendering data storage and processing inoperative.",
            "Assumptions": [
                {
                    "Assumption": "Cloud infrastructure has unpatched vulnerabilities",
                    "Role": "System",
                    "Condition": "Known vulnerabilities are not patched promptly"
                },
                {
                    "Assumption": "Attacker has ability to exploit cloud service CVEs",
                    "Role": "Attacker",
                    "Condition": "Possession of exploit code or tools"
                },
                {
                    "Assumption": "Cloud services are heavily relied on for critical operations",
                    "Role": "System",
                    "Condition": "Dependence on cloud for essential functions"
                }
            ],
            "Potential Impact": "Disruption in mission-critical data storage and processing leading to operational breakdowns.",
            "MITRE ATT&CK Keywords": [
                "CVE Exploitation",
                "Resource Exhaustion",
                "Denial of Service",
                "Cloud"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Insufficient resource management at the GCS results in a service crash under high load conditions, interrupting UAV operations.",
            "Assumptions": [
                {
                    "Assumption": "GCS software has resource limits",
                    "Role": "System",
                    "Condition": "Resource allocation does not account for peak loads"
                },
                {
                    "Assumption": "High load conditions occur during critical operations",
                    "Role": "System",
                    "Condition": "Mission-critical times align with peak resource usage"
                },
                {
                    "Assumption": "No mechanisms to monitor and manage resource usage",
                    "Role": "System",
                    "Condition": "Lack of real-time resource monitoring and management protocols"
                }
            ],
            "Potential Impact": "Interruption of UAV operations causing mission delays or failures.",
            "MITRE ATT&CK Keywords": [
                "Resource Management",
                "Service Crash",
                "Denial of Service",
                "Ground Control Station"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a firmware vulnerability to gain root access on a UAV, allowing full control over its operations.",
            "Assumptions": [
                {
                    "Assumption": "Presence of exploitable vulnerabilities in UAV firmware",
                    "Role": "System",
                    "Condition": "Firmware has known or undiscovered security flaws"
                },
                {
                    "Assumption": "Attacker has technical ability to exploit vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Access to exploit tools and sufficient knowledge"
                },
                {
                    "Assumption": "No effective firmware update or patching process",
                    "Role": "System",
                    "Condition": "Delay or absence of firmware updates and patches"
                }
            ],
            "Potential Impact": "Complete control over the drone, enabling mission disruption and unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "Firmware Exploitation",
                "Root Access",
                "Elevation of Privilege",
                "UAV Control"
            ],
            "mitre_technique": {
                "name": "Securityd Memory",
                "description": "An adversary with root access may gather credentials by reading `securityd`\u2019s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization.(Citation: Apple Dev SecurityD) A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the user\u2019s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apple\u2019s `securityd` utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)",
                "id": "attack-pattern--1a80d097-54df-41d8-9d33-34e755ec5e72",
                "technique_id": "T1555.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider uses admin credentials to access and modify GCS settings, increasing their privileges and bypassing security controls.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have access to administrative credentials",
                    "Role": "Insider",
                    "Condition": "Administrative credentials are accessible or weakly protected"
                },
                {
                    "Assumption": "Lack of monitoring for administrative actions",
                    "Role": "System",
                    "Condition": "Insufficient logging and alerting for changes in admin settings"
                },
                {
                    "Assumption": "GCS allows privilege escalation through settings modification",
                    "Role": "System",
                    "Condition": "System lacks proper access control and segmentation"
                }
            ],
            "Potential Impact": "Unauthorized privilege escalation, allowing further unauthorized actions and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Privilege Escalation",
                "Admin Access",
                "Ground Control Station"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A remote attacker exploits a vulnerability in the cloud infrastructure to gain administrative access to mission data and services.",
            "Assumptions": [
                {
                    "Assumption": "Exploitable vulnerabilities in cloud services",
                    "Role": "System",
                    "Condition": "Cloud services are not patched or secured against known vulnerabilities"
                },
                {
                    "Assumption": "Attacker has the ability to exploit these vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Access to or knowledge of exploit methods and tools"
                },
                {
                    "Assumption": "Cloud services lack multi-layer security measures",
                    "Role": "System",
                    "Condition": "Absence of multi-factor authentication and granular access controls"
                }
            ],
            "Potential Impact": "Administrator-level access to cloud services enables extensive data manipulation and compromise.",
            "MITRE ATT&CK Keywords": [
                "Cloud Exploitation",
                "Privilege Escalation",
                "Administrative Access",
                "Mission Data"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "15",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a drone to gain unauthorized access to the network.",
            "Assumptions": [
                {
                    "Assumption": "Drone communication channels are not sufficiently authenticated.",
                    "Role": "Attacker",
                    "Condition": "Network access is available."
                },
                {
                    "Assumption": "The attacker has access to drone communication protocols.",
                    "Role": "Attacker",
                    "Condition": "Tools to analyze protocols are available."
                },
                {
                    "Assumption": "Spoofed drone credentials are accepted by the Ground Control Station.",
                    "Role": "Attacker",
                    "Condition": "Weak authentication at the Ground Control Station."
                }
            ],
            "Potential Impact": "Unauthorized access to network and data.",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Spoofing",
                "Credentials",
                "Identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversaries could use job recruitment software disguises to spoof legitimate users within the aerospace DaaS systems.",
            "Assumptions": [
                {
                    "Assumption": "False job recruitment software is distributed to potential victims.",
                    "Role": "Attacker",
                    "Condition": "Distribution channels are effective."
                },
                {
                    "Assumption": "Users are not knowledgeable about the signs of phishing attempts.",
                    "Role": "User",
                    "Condition": "Lack of user training."
                },
                {
                    "Assumption": "Security software does not detect the spoofed software.",
                    "Role": "Security System",
                    "Condition": "Software updates are not timely."
                }
            ],
            "Potential Impact": "Credential theft and unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "Identity",
                "Phishing",
                "Spoofing",
                "Malware"
            ],
            "mitre_technique": {
                "name": "Email Hiding Rules",
                "description": "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)\n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",
                "id": "attack-pattern--0cf55441-b176-4332-89e7-2c4c7799d0ff",
                "technique_id": "T1564.008"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers could spoof GPS signals to mislead the drone's navigation system.",
            "Assumptions": [
                {
                    "Assumption": "GPS signals are not encrypted or authenticated.",
                    "Role": "Attacker",
                    "Condition": "Access to drone's operation area."
                },
                {
                    "Assumption": "Drones rely solely on GPS for navigation.",
                    "Role": "Drone",
                    "Condition": "No secondary navigation systems in place."
                },
                {
                    "Assumption": "Interference detection mechanisms are weak.",
                    "Role": "System",
                    "Condition": "Lack of effective interference detection."
                }
            ],
            "Potential Impact": "Misguided missions, potential crashes, and loss of drones.",
            "MITRE ATT&CK Keywords": [
                "GPS",
                "Spoofing",
                "Navigation",
                "External Device"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could exploit vulnerabilities in drone firmware to alter its functionality.",
            "Assumptions": [
                {
                    "Assumption": "Firmware vulnerabilities exist and are exploitable.",
                    "Role": "Attacker",
                    "Condition": "Known vulnerabilities are present."
                },
                {
                    "Assumption": "Attackers can deliver malicious firmware updates.",
                    "Role": "Attacker",
                    "Condition": "Insufficient update verification."
                },
                {
                    "Assumption": "The drone accepts unverified firmware updates.",
                    "Role": "Drone",
                    "Condition": "Lack of strong validation mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized control and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "Firmware",
                "Tampering",
                "Code Injection",
                "Device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Data in transit between the drone and Ground Control Station could be intercepted and altered.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Access to communication lines."
                },
                {
                    "Assumption": "Attackers possess tools to intercept and modify data.",
                    "Role": "Attacker",
                    "Condition": "Availability of interception tools."
                },
                {
                    "Assumption": "No integrity checks are performed on received data.",
                    "Role": "System",
                    "Condition": "Weak data validation mechanisms."
                }
            ],
            "Potential Impact": "Data corruption, false information, and command interference.",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Tampering",
                "Data Manipulation",
                "Interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter cloud-stored data, affecting drone mission records and analytics.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage does not have strong access controls.",
                    "Role": "Attacker",
                    "Condition": "Compromised cloud credentials or access points."
                },
                {
                    "Assumption": "Data integrity mechanisms are insufficient.",
                    "Role": "System",
                    "Condition": "Weak integrity checks on cloud data."
                },
                {
                    "Assumption": "Attackers have knowledge of database structures.",
                    "Role": "Attacker",
                    "Condition": "Internal knowledge is acquired."
                }
            ],
            "Potential Impact": "Altered mission records, faulty analytics, and poor decision making.",
            "MITRE ATT&CK Keywords": [
                "Cloud",
                "Tampering",
                "Data Storage",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Container and Resource Discovery",
                "description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\n\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment\u2019s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary\u2019s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ",
                "id": "attack-pattern--0470e792-32f8-46b0-a351-652bc35e9336",
                "technique_id": "T1613"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators could deny issuing specific commands to drones due to a lack of logging.",
            "Assumptions": [
                {
                    "Assumption": "Command issuance is not properly logged.",
                    "Role": "Operator",
                    "Condition": "Lack of comprehensive logging mechanisms."
                },
                {
                    "Assumption": "Log data is easily modifiable.",
                    "Role": "System",
                    "Condition": "Logs are not tamper-proof."
                },
                {
                    "Assumption": "There are no mechanisms for non-repudiation in place.",
                    "Role": "System",
                    "Condition": "No digital signatures or similar measures."
                }
            ],
            "Potential Impact": "Dispute resolution challenges and accountability issues.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Command",
                "Audit"
            ],
            "mitre_technique": {
                "name": "HISTCONTROL",
                "description": "The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.",
                "id": "attack-pattern--086952c4-5b90-4185-b573-02bad8e11953",
                "technique_id": "T1148"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could delete or modify logs of drone activities on the cloud platform to cover tracks.",
            "Assumptions": [
                {
                    "Assumption": "Logs are stored in a modifiable format.",
                    "Role": "Attacker",
                    "Condition": "Access to log files."
                },
                {
                    "Assumption": "Logging system lacks security controls.",
                    "Role": "System",
                    "Condition": "Inadequate protection for logs."
                },
                {
                    "Assumption": "No tamper-evidence or forensic mechanisms.",
                    "Role": "System",
                    "Condition": "Absence of tamper-evident storage."
                }
            ],
            "Potential Impact": "Obscured attack traces and hindered incident investigation.",
            "MITRE ATT&CK Keywords": [
                "Logs",
                "Repudiation",
                "Data Deletion",
                "Cloud"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Misuse of drone service operations could go unrecorded due to lack of proper monitoring and auditing.",
            "Assumptions": [
                {
                    "Assumption": "Drone operations are not appropriately monitored.",
                    "Role": "System",
                    "Condition": "No continuous audit mechanisms."
                },
                {
                    "Assumption": "Operators are not uniquely identified when issuing commands.",
                    "Role": "Operator",
                    "Condition": "Shared credentials or weak authentication."
                },
                {
                    "Assumption": "Audit logs are not regularly reviewed.",
                    "Role": "Admin",
                    "Condition": "No periodic log reviews."
                }
            ],
            "Potential Impact": "Unaccountable misuse and operational discrepancies.",
            "MITRE ATT&CK Keywords": [
                "Audit",
                "Monitoring",
                "Repudiation",
                "Operations"
            ],
            "mitre_technique": {
                "name": "Native API",
                "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\n\nNative API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.(Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)\n\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks.(Citation: Redops Syscalls) Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001).",
                "id": "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670",
                "technique_id": "T1106"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data captured by drones could be intercepted during transmission.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Access to data transmission channels."
                },
                {
                    "Assumption": "No proper access controls on sensitive data.",
                    "Role": "System",
                    "Condition": "Lack of secure transmission protocols."
                },
                {
                    "Assumption": "Intrusion detection systems are not in place.",
                    "Role": "System",
                    "Condition": "Misconfigured or absent IDS."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Data Transmission",
                "Eavesdropping",
                "Information Disclosure",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Cloud Accounts",
                "description": "Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud; alternatively, they may be hybrid-joined between on-premises systems and the cloud through syncing or federation with other identity sources such as Windows Active Directory. (Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)\n\nService or user accounts may be targeted by adversaries through [Brute Force](https://attack.mitre.org/techniques/T1110), [Phishing](https://attack.mitre.org/techniques/T1566), or various other means to gain access to the environment. Federated or synced accounts may be a pathway for the adversary to affect both on-premises systems and cloud environments - for example, by leveraging shared credentials to log onto [Remote Services](https://attack.mitre.org/techniques/T1021). High privileged cloud accounts, whether federated, synced, or cloud-only, may also allow pivoting to on-premises environments by leveraging SaaS-based [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) to run commands on hybrid-joined devices.\n\nAn adversary may create long lasting [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) on a compromised cloud account to maintain persistence in the environment. Such credentials may also be used to bypass security controls such as multi-factor authentication. \n\nCloud accounts may also be able to assume [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005) or other privileges through various means within the environment. Misconfigurations in role assignments or role assumption policies may allow an adversary to use these mechanisms to leverage permissions outside the intended scope of the account. Such over privileged accounts may be used to harvest sensitive data from online storage accounts and databases through [Cloud API](https://attack.mitre.org/techniques/T1059/009) or other methods. \n",
                "id": "attack-pattern--f232fa7a-025c-4d43-abc7-318e81a73d65",
                "technique_id": "T1078.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud storage vulnerabilities could lead to unauthorized access to stored drone data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage has exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Awareness of known vulnerabilities."
                },
                {
                    "Assumption": "Unauthorized users gain access to cloud data.",
                    "Role": "Attacker",
                    "Condition": "Weak authentication and authorization."
                },
                {
                    "Assumption": "Data at rest is not encrypted.",
                    "Role": "System",
                    "Condition": "Sensitive data stored in plain text."
                }
            ],
            "Potential Impact": "Data breaches and exposure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "Cloud",
                "Information Disclosure",
                "Data Breach",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insufficient access controls could lead to unauthorized users viewing sensitive drone mission data.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are not properly enforced.",
                    "Role": "System",
                    "Condition": "Misconfigured access control policies."
                },
                {
                    "Assumption": "Sensitive data is exposed to unauthorized users.",
                    "Role": "System",
                    "Condition": "Over-permissive access rights."
                },
                {
                    "Assumption": "Security policies do not require data classification.",
                    "Role": "Organization",
                    "Condition": "Lack of data classification and protection policies."
                }
            ],
            "Potential Impact": "Exposure of operational and strategic information.",
            "MITRE ATT&CK Keywords": [
                "Access Control",
                "Data Exposure",
                "Sensitive Data",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers could flood the communication channels between drones and the Ground Control Station, causing a Denial of Service.",
            "Assumptions": [
                {
                    "Assumption": "Drones rely on limited bandwidth for communication.",
                    "Role": "Attacker",
                    "Condition": "Available network information."
                },
                {
                    "Assumption": "No rate limiting on communication channels.",
                    "Role": "System",
                    "Condition": "Lack of throttling mechanisms."
                },
                {
                    "Assumption": "Intrusion detection is insufficient.",
                    "Role": "System",
                    "Condition": "Ineffective detection mechanisms."
                }
            ],
            "Potential Impact": "Disruption of drone operations and loss of communication.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Flooding",
                "Communication",
                "Network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploiters could leverage cloud infrastructure vulnerabilities causing service disruptions in data processing and storage.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have unpatched vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of exploitable vulnerabilities."
                },
                {
                    "Assumption": "Critical services are heavily reliant on cloud infrastructure.",
                    "Role": "System",
                    "Condition": "Centralized cloud dependency."
                },
                {
                    "Assumption": "There are no redundancy or failover mechanisms.",
                    "Role": "System",
                    "Condition": "Absence of redundancy measures."
                }
            ],
            "Potential Impact": "Service interruptions and loss of data access.",
            "MITRE ATT&CK Keywords": [
                "Cloud",
                "Service Disruption",
                "Denial of Service",
                "Infrastructure"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could use vulnerability CVE-2023-05-22 in IBM InfoSphere to execute OS commands disrupting the DaaS application.",
            "Assumptions": [
                {
                    "Assumption": "IBM InfoSphere Information Server is used in the application.",
                    "Role": "Attacker",
                    "Condition": "Awareness of server usage."
                },
                {
                    "Assumption": "The system is not updated to patch the vulnerability.",
                    "Role": "System",
                    "Condition": "Delayed update cycles."
                },
                {
                    "Assumption": "The vulnerability is exploitable remotely.",
                    "Role": "Attacker",
                    "Condition": "Remote access is possible."
                }
            ],
            "Potential Impact": "Operational disruptions and potential data compromise.",
            "MITRE ATT&CK Keywords": [
                "Vulnerability",
                "Remote Code Execution",
                "Denial of Service",
                "Server"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit the Tauri framework vulnerability to gain higher-level access on the drone's system.",
            "Assumptions": [
                {
                    "Assumption": "Drone systems use the Tauri framework.",
                    "Role": "Attacker",
                    "Condition": "Awareness of Tauri usage on drones."
                },
                {
                    "Assumption": "The system is running vulnerable Tauri versions.",
                    "Role": "Drone",
                    "Condition": "No updates or patches applied."
                },
                {
                    "Assumption": "The attacker has lower-level access initially.",
                    "Role": "Attacker",
                    "Condition": "Initial penetration achieved."
                }
            ],
            "Potential Impact": "Unauthorized system control and data access.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Elevation",
                "Vulnerability",
                "System"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of the AMD \u03bcProf tool vulnerability to achieve kernel-level access.",
            "Assumptions": [
                {
                    "Assumption": "AMD \u03bcProf tool is installed on the drones.",
                    "Role": "Attacker",
                    "Condition": "Awareness of tool's presence."
                },
                {
                    "Assumption": "Lower privileged user access is possible.",
                    "Role": "Attacker",
                    "Condition": "Initial lower-level access obtained."
                },
                {
                    "Assumption": "Vulnerable version of the tool is in use.",
                    "Role": "System",
                    "Condition": "No patches applied."
                }
            ],
            "Potential Impact": "Kernel-level execution and full system compromise.",
            "MITRE ATT&CK Keywords": [
                "Kernel",
                "Privilege Escalation",
                "Elevation",
                "Security Bypass"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
                "id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                "technique_id": "T1014"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers could leverage an XML External Entity (XXE) vulnerability to escalate privileges and access sensitive data on the GCS.",
            "Assumptions": [
                {
                    "Assumption": "XML processing components in GCS are vulnerable.",
                    "Role": "Attacker",
                    "Condition": "Presence of unpatched vulnerabilities."
                },
                {
                    "Assumption": "Attackers can inject malformed XML data.",
                    "Role": "Attacker",
                    "Condition": "Control over XML input."
                },
                {
                    "Assumption": "Privilege escalation mechanisms are poorly configured.",
                    "Role": "System",
                    "Condition": "Lack of robust privilege controls."
                }
            ],
            "Potential Impact": "Privilege escalation and sensitive data access.",
            "MITRE ATT&CK Keywords": [
                "XML External Entity",
                "Privilege Escalation",
                "XXE",
                "Data Access"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files.(Citation: Adversaries Hijack DLLs) They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "technique_id": "T1574.001"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "17",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises their identity to gain unauthorized access to the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and observe wireless communications.",
                    "Role": "Attacker",
                    "Condition": "Within range of the GCS communication signals"
                },
                {
                    "Assumption": "Lack of multi-factor authentication in the system.",
                    "Role": "System Administrator",
                    "Condition": "Current system setup"
                },
                {
                    "Assumption": "Absence of encrypted communication channels.",
                    "Role": "System Developer",
                    "Condition": "Configuration of communication protocols"
                }
            ],
            "Potential Impact": "Unauthorized access leading to potential control over all connected UAVs and access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "GCS",
                "Wireless interception",
                "Access token"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary spoofs GPS signals to misguide drones into incorrect locations or restricted areas.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a GPS signal jammer or simulator.",
                    "Role": "Attacker",
                    "Condition": "Possession of GPS manipulation tool"
                },
                {
                    "Assumption": "Drones rely solely on GPS signals without cross-verification.",
                    "Role": "System Developer",
                    "Condition": "Current navigation system implementation"
                },
                {
                    "Assumption": "No anti-spoofing mechanisms are implemented in the GPS module.",
                    "Role": "System Developer",
                    "Condition": "Firmware security features"
                }
            ],
            "Potential Impact": "Misguided operations, potential collision, violation of restricted airspace regulations.",
            "MITRE ATT&CK Keywords": [
                "GPS spoofing",
                "Signal injection",
                "UAV navigation",
                "Infrastructure"
            ],
            "mitre_technique": {
                "name": "WHOIS",
                "description": "Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.(Citation: WHOIS)\n\nAdversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                "id": "attack-pattern--166de1c6-2814-4fe5-8438-4e80f76b169f",
                "technique_id": "T1596.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary mimics legitimate UAVs to infiltrate the network and capture sensitive communication between drones and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker knows the authentication and identification protocols of the UAVs.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of protocol details"
                },
                {
                    "Assumption": "No strong authentication for UAVs entering the network.",
                    "Role": "System Administrator",
                    "Condition": "Current network access controls"
                },
                {
                    "Assumption": "Lack of monitoring tools detecting new device entry into the network.",
                    "Role": "System Administrator",
                    "Condition": "Current network monitoring setup"
                }
            ],
            "Potential Impact": "Breach of network security, potential data leakage or command manipulation.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network infiltration",
                "UAV",
                "Communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modification of drone firmware to include malicious code that disrupts normal operations.",
            "Assumptions": [
                {
                    "Assumption": "Firmware is updatable without secure validation.",
                    "Role": "System Developer",
                    "Condition": "Present system design"
                },
                {
                    "Assumption": "Access to UAV by the adversary physically or through network.",
                    "Role": "Attacker",
                    "Condition": "Physical or network access"
                },
                {
                    "Assumption": "No integrity checks on firmware updates.",
                    "Role": "System Administrator",
                    "Condition": "Current update process"
                }
            ],
            "Potential Impact": "Disruption in UAV operations, potential crash, and loss of mission-critical data.",
            "MITRE ATT&CK Keywords": [
                "Firmware tampering",
                "UAV",
                "Code injection",
                "Malware"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulation of data communication between the UAVs, GCS, and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Intercepted communication is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Current communication protocol"
                },
                {
                    "Assumption": "Lack of secure keys for data encryption.",
                    "Role": "System Administrator",
                    "Condition": "Configuration of encryption methods"
                },
                {
                    "Assumption": "Absence of logging and monitoring of communication channels.",
                    "Role": "System Administrator",
                    "Condition": "Current system monitoring setup"
                }
            ],
            "Potential Impact": "Alteration of critical data, leading to disrupted mission outcomes.",
            "MITRE ATT&CK Keywords": [
                "Data tampering",
                "Communication",
                "UAV",
                "Cloud services"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Exploiting cloud service vulnerabilities to gain unauthorized access and modify stored data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have known unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Vulnerability management process"
                },
                {
                    "Assumption": "No strictly enforced access controls.",
                    "Role": "System Administrator",
                    "Condition": "Current access control policies"
                },
                {
                    "Assumption": "Absence of regular security audits on cloud components.",
                    "Role": "Security Auditor",
                    "Condition": "Current audit frequency"
                }
            ],
            "Potential Impact": "Data corruption, loss of data integrity, unavailable or incorrect data for decision making.",
            "MITRE ATT&CK Keywords": [
                "Cloud services",
                "Data tampering",
                "Unauthorized access",
                "Exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies initiating or performing a malicious activity using captured credentials.",
            "Assumptions": [
                {
                    "Assumption": "Lack of strong user authentication mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Current authentication system"
                },
                {
                    "Assumption": "Incomplete or missing activity logs.",
                    "Role": "System Administrator",
                    "Condition": "Logging configuration"
                },
                {
                    "Assumption": "No user action audit trails.",
                    "Role": "System Administrator",
                    "Condition": "Current user monitoring setup"
                }
            ],
            "Potential Impact": "Difficulty in attributing actions, potential legal and accountability issues.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Credential theft",
                "Logging",
                "Activity monitoring"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Linux Audit System",
                "description": "Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.\n\nOften referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.(Citation: Red Hat System Auditing)(Citation: IzyKnows auditd threat detection 2022)\n\nWith root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.(Citation: Trustwave Honeypot SkidMap 2023)(Citation: ESET Ebury Feb 2014)",
                "id": "attack-pattern--562e9b64-7239-493d-80f4-2bff900d9054",
                "technique_id": "T1562.012"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Incomplete logging allows malicious actions within the GCS to deny responsibility.",
            "Assumptions": [
                {
                    "Assumption": "System does not log all user actions and commands.",
                    "Role": "System Administrator",
                    "Condition": "Current logging practices"
                },
                {
                    "Assumption": "No real-time monitoring of user activities.",
                    "Role": "Security Auditor",
                    "Condition": "Monitoring setup"
                },
                {
                    "Assumption": "Logs are not securely stored and can be tampered with.",
                    "Role": "System Administrator",
                    "Condition": "Log storage configuration"
                }
            ],
            "Potential Impact": "Compromised forensic investigations, inability to trace incident sources.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "GCS",
                "Malicious actions"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Data edits in cloud services without proper logging lead to repudiation by insider threats.",
            "Assumptions": [
                {
                    "Assumption": "No version control for data changes.",
                    "Role": "System Developer",
                    "Condition": "Data management policy"
                },
                {
                    "Assumption": "Insufficient access control into who edited what data.",
                    "Role": "System Administrator",
                    "Condition": "Access control setup"
                },
                {
                    "Assumption": "Inadequate monitoring for insider threats.",
                    "Role": "Security Auditor",
                    "Condition": "Current threat detection mechanisms"
                }
            ],
            "Potential Impact": "Disguising illegitimate changes, leading to undetected data manipulation.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Insider threat",
                "Data edits",
                "Cloud services"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is intercepted during communication between drones and cloud services due to unencrypted transmission.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "System Developer",
                    "Condition": "Transmission protocol settings"
                },
                {
                    "Assumption": "Attacker is capable of eavesdropping on the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Proximity or network access"
                },
                {
                    "Assumption": "No use of secure tunneling methods.",
                    "Role": "System Administrator",
                    "Condition": "Current communication setup"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive information, privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "Information disclosure",
                "Unencrypted transmission",
                "Eavesdropping",
                "Data interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud service vulnerabilities expose stored sensitive data to unauthorized entities.",
            "Assumptions": [
                {
                    "Assumption": "Known vulnerabilities in the cloud services are not patched.",
                    "Role": "System Administrator",
                    "Condition": "Vulnerability management process"
                },
                {
                    "Assumption": "Poor access controls on cloud storage.",
                    "Role": "System Administrator",
                    "Condition": "Current access control settings"
                },
                {
                    "Assumption": "Inadequate logging of data access.",
                    "Role": "System Administrator",
                    "Condition": "Current logging configuration"
                }
            ],
            "Potential Impact": "Sensitive information exposure, data theft.",
            "MITRE ATT&CK Keywords": [
                "Cloud service",
                "Vulnerability",
                "Sensitive data",
                "Unauthorized access"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insufficient masking or encryption of data displayed on the GCS interface leads to leaks.",
            "Assumptions": [
                {
                    "Assumption": "Unmasked sensitive data is viewable by operators.",
                    "Role": "System Developer",
                    "Condition": "Current interface design"
                },
                {
                    "Assumption": "No role-based access controls for data visibility.",
                    "Role": "System Administrator",
                    "Condition": "GCS configuration"
                },
                {
                    "Assumption": "Operators have higher privilege than necessary.",
                    "Role": "System Administrator",
                    "Condition": "Access control policy"
                }
            ],
            "Potential Impact": "Unauthorized viewing of sensitive data, privacy violations.",
            "MITRE ATT&CK Keywords": [
                "GCS",
                "Information disclosure",
                "Data masking",
                "User interface"
            ],
            "mitre_technique": {
                "name": "Graphical User Interface",
                "description": "**This technique has been deprecated. Please use [Remote Services](https://attack.mitre.org/techniques/T1021) where appropriate.**\n\nThe Graphical User Interfaces (GUI) is a common way to interact with an operating system. Adversaries may use a system's GUI during an operation, commonly through a remote interactive session such as [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1076), instead of through a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), to search for information and execute files via mouse double-click events, the Windows Run command (Citation: Wikipedia Run Command), or other potentially difficult to monitor interactions.",
                "id": "attack-pattern--a6525aec-acc4-47fe-92f9-b9b4de4b9228",
                "technique_id": "T1061"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attacker overwhelms the communication channels between the UAVs and GCS, causing a loss of control.",
            "Assumptions": [
                {
                    "Assumption": "Lack of rate limiting on communication protocols.",
                    "Role": "System Developer",
                    "Condition": "Current system configuration"
                },
                {
                    "Assumption": "Attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to network"
                },
                {
                    "Assumption": "No backup communication systems.",
                    "Role": "System Administrator",
                    "Condition": "Current system design"
                }
            ],
            "Potential Impact": "Disruption of UAV operations, potential mission failure.",
            "MITRE ATT&CK Keywords": [
                "Denial of service",
                "Communication channel",
                "GCS",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of cloud service resources to exhaust computational resources, resulting in service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services lack resource usage monitoring.",
                    "Role": "System Administrator",
                    "Condition": "Monitoring setup"
                },
                {
                    "Assumption": "Vulnerabilities in cloud services are not addressed.",
                    "Role": "System Administrator",
                    "Condition": "Patch management"
                },
                {
                    "Assumption": "Incomplete resource allocation controls.",
                    "Role": "System Developer",
                    "Condition": "Current cloud configuration"
                }
            ],
            "Potential Impact": "Service unavailability, disruption in data processing and analysis.",
            "MITRE ATT&CK Keywords": [
                "Cloud service",
                "Denial of service",
                "Resource exhaustion",
                "Service disruption"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Targeted attacks on firmware vulnerabilities lead to crashing UAVs mid-mission.",
            "Assumptions": [
                {
                    "Assumption": "Firmware has unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Firmware update management"
                },
                {
                    "Assumption": "Attacker gains access to the firmware update process.",
                    "Role": "Attacker",
                    "Condition": "Physical or network access"
                },
                {
                    "Assumption": "No integrity checks performed on firmware.",
                    "Role": "System Developer",
                    "Condition": "Current update process"
                }
            ],
            "Potential Impact": "UAV crash, mission failure, potential physical damage.",
            "MITRE ATT&CK Keywords": [
                "Firmware",
                "Denial of service",
                "UAV crash",
                "Mission failure"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits firmware vulnerabilities to elevate privileges and gain control over UAV operations.",
            "Assumptions": [
                {
                    "Assumption": "Firmware contains known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Vulnerability management"
                },
                {
                    "Assumption": "No validation checks for privilege assignment.",
                    "Role": "System Developer",
                    "Condition": "Current privilege management system"
                },
                {
                    "Assumption": "UAVs do not have proper privileges separation mechanisms.",
                    "Role": "System Developer",
                    "Condition": "Current firmware design"
                }
            ],
            "Potential Impact": "Full control over UAV operations, potential sabotage of missions.",
            "MITRE ATT&CK Keywords": [
                "Firmware",
                "Elevation of privilege",
                "UAV control",
                "Exploitation"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of cloud service APIs to gain unauthorized higher-level access.",
            "Assumptions": [
                {
                    "Assumption": "APIs are vulnerable to exploitation due to improper security configurations.",
                    "Role": "System Developer",
                    "Condition": "Current API design"
                },
                {
                    "Assumption": "Cloud service access controls are not strictly enforced.",
                    "Role": "System Administrator",
                    "Condition": "Current access control policies"
                },
                {
                    "Assumption": "No regular security audits on cloud APIs.",
                    "Role": "Security Auditor",
                    "Condition": "Current audit frequency"
                }
            ],
            "Potential Impact": "Unauthorized access to critical cloud services, manipulation of stored data.",
            "MITRE ATT&CK Keywords": [
                "Cloud service",
                "API exploitation",
                "Elevation of privilege",
                "Unauthorized access"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Local privilege escalation on the GCS through exploitation of unpatched vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "GCS software contains known and exploitable vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Vulnerability management process"
                },
                {
                    "Assumption": "No security measures are in place for local access attempts.",
                    "Role": "System Developer",
                    "Condition": "Current security configurations"
                },
                {
                    "Assumption": "Lack of monitoring for unusual activities on the GCS.",
                    "Role": "Security Auditor",
                    "Condition": "Monitoring setup"
                }
            ],
            "Potential Impact": "Full control over GCS, manipulation of UAV missions and data.",
            "MITRE ATT&CK Keywords": [
                "GCS",
                "Local privilege escalation",
                "Exploitation",
                "Full control"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "16",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate operator to gain unauthorized access to the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "The attacker can obtain valid operator credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are leaked or poorly managed."
                },
                {
                    "Assumption": "The GCS does not have multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Multi-factor authentication is not implemented."
                },
                {
                    "Assumption": "Secure communication channels to the GCS are not properly configured.",
                    "Role": "Network Engineer",
                    "Condition": "Encryption or VPN settings are misconfigured."
                }
            ],
            "Potential Impact": "Unauthorized drone command execution.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "impersonation",
                "control station",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "Token Impersonation/Theft",
                "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`.(Citation: DuplicateToken function) The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                "id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
                "technique_id": "T1134.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers spoof GPS signals to misguide drones away from their intended mission paths.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the capability to broadcast fake GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Access to GPS signal jamming/spoofing equipment."
                },
                {
                    "Assumption": "The drones rely solely on GPS for navigation.",
                    "Role": "System Architect",
                    "Condition": "No redundancy in navigation systems present."
                },
                {
                    "Assumption": "The built-in GPS spoofing detection in drones is not robust.",
                    "Role": "Firmware Developer",
                    "Condition": "Weak or non-existent GPS spoofing countermeasures."
                }
            ],
            "Potential Impact": "Disruption of missions and potential crashes.",
            "MITRE ATT&CK Keywords": [
                "GPS spoofing",
                "signal jamming",
                "navigation",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "User Execution",
                "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary; running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)s; or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204).(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nFor example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",
                "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
                "technique_id": "T1204"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor spoofs communication signals causing drones to connect to a fake Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "The attacker can mimic legitimate GCS signals.",
                    "Role": "Attacker",
                    "Condition": "Access to drone communication protocols and broadcasting equipment."
                },
                {
                    "Assumption": "Drones do not sufficiently verify the authenticity of the GCS.",
                    "Role": "Embedded System Developer",
                    "Condition": "Weak or absent mutual authentication protocols."
                },
                {
                    "Assumption": "The drones fail to maintain a whitelist of valid GCS endpoints.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of endpoint verification mechanisms."
                }
            ],
            "Potential Impact": "Hijacking of drone missions and potential data theft.",
            "MITRE ATT&CK Keywords": [
                "communication hijacking",
                "fake control station",
                "signal spoofing",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Firmware on the drones is altered by a threat actor to inject malicious code.",
            "Assumptions": [
                {
                    "Assumption": "There is a vulnerability in the firmware update mechanism.",
                    "Role": "Firmware Developer",
                    "Condition": "Update mechanism lacks security checks."
                },
                {
                    "Assumption": "Access control to firmware update tools is weak.",
                    "Role": "System Administrator",
                    "Condition": "Weak authentication mechanisms for update tools."
                },
                {
                    "Assumption": "The integrity checks for firmware are not thorough.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of effective integrity verification for firmware."
                }
            ],
            "Potential Impact": "Compromised drone functionality and unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "code injection",
                "malware",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Shared Modules",
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., [Native API](https://attack.mitre.org/techniques/T1106)).\n\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\n\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in `dlfcn.h` in functions such as `dlopen` and `dlsym`. Although macOS can execute `.so` files, common practice uses `.dylib` files.(Citation: Apple Dev Dynamic Libraries)(Citation: Linux Shared Libraries)(Citation: RotaJakiro 2021 netlab360 analysis)(Citation: Unit42 OceanLotus 2017)\n\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in `NTDLL.dll` and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like `LoadLibrary` at run time.(Citation: Microsoft DLL)",
                "id": "attack-pattern--0a5231ec-41af-4a35-83d0-6bdf11f28c65",
                "technique_id": "T1129"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data being communicated between the UAVs and the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "The communication channel is only secured by weak encryption.",
                    "Role": "Network Engineer",
                    "Condition": "Weak encryption protocols are implemented."
                },
                {
                    "Assumption": "There are no effective detection mechanisms for tampered data.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of monitoring for data integrity."
                },
                {
                    "Assumption": "The attacker has access to network infrastructure.",
                    "Role": "Attacker",
                    "Condition": "Access to network points between UAVs and GCS."
                }
            ],
            "Potential Impact": "Corrupted data and unreliable system operations.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "man-in-the-middle",
                "injection",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An adversary exploits vulnerabilities in the cloud service APIs to alter stored drone data.",
            "Assumptions": [
                {
                    "Assumption": "Exploitable API vulnerabilities exist.",
                    "Role": "API Developer",
                    "Condition": "Poor API security design."
                },
                {
                    "Assumption": "Access control measures are improperly configured.",
                    "Role": "Cloud Administrator",
                    "Condition": "Misconfiguration of cloud data access policies."
                },
                {
                    "Assumption": "The attacker can authenticate to the cloud service as a privileged user.",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials or weak authentication methods."
                }
            ],
            "Potential Impact": "Altered mission data and false analytics.",
            "MITRE ATT&CK Keywords": [
                "API exploitation",
                "cloud tampering",
                "data integrity",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A legitimate user denies sending specific commands that led to a drone malfunction.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not comprehensive or tamper-evident.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient logging mechanisms."
                },
                {
                    "Assumption": "Users lack traceable unique IDs for their actions.",
                    "Role": "System Architect",
                    "Condition": "Weak user authentication and non-repudiation design."
                },
                {
                    "Assumption": "Logging data lacks secure storage or encryption.",
                    "Role": "Security Engineer",
                    "Condition": "Log data is stored in an insecure manner."
                }
            ],
            "Potential Impact": "Difficulty in incident investigation and response.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "log forging",
                "command denial",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A rogue operator denies executing unauthorized surveillance tasks using the drones.",
            "Assumptions": [
                {
                    "Assumption": "Lack of clear accountability in system usage.",
                    "Role": "System Architect",
                    "Condition": "No audit trails linking actions to users."
                },
                {
                    "Assumption": "Operator actions are not being logged or monitored.",
                    "Role": "System Administrator",
                    "Condition": "Ineffective logging for user activities."
                },
                {
                    "Assumption": "Logs are not protected against tampering.",
                    "Role": "Security Engineer",
                    "Condition": "Logs can be altered without detection."
                }
            ],
            "Potential Impact": "Loss of trust in system and auditability.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "activity denial",
                "surveillance misuse",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies performing actions that resulted in compromised cloud data integrity.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service does not log activities reliably.",
                    "Role": "Cloud Administrator",
                    "Condition": "Inadequate logging capabilities in cloud configurations."
                },
                {
                    "Assumption": "Logs are not immutable and can be modified.",
                    "Role": "Security Engineer",
                    "Condition": "Insufficient protection for log integrity."
                },
                {
                    "Assumption": "User actions in the cloud are not traceably linked to accounts.",
                    "Role": "System Architect",
                    "Condition": "Weak correlation between actions and user identities."
                }
            ],
            "Potential Impact": "Challenges in incident forensics and blame assignment.",
            "MITRE ATT&CK Keywords": [
                "cloud action denial",
                "log tampering",
                "data integrity compromise",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted during transmission between drones and the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "While in transit, data is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of encryption protocols for in-transit data."
                },
                {
                    "Assumption": "The attacker can access the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Proximity to or access to network infrastructure."
                },
                {
                    "Assumption": "No detection mechanisms for interception are in place.",
                    "Role": "Security Engineer",
                    "Condition": "Absence of monitoring tools for unusual traffic."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive mission data.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "communication eavesdropping",
                "sensitive data",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Network Device Configuration Dump",
                "description": "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",
                "id": "attack-pattern--52759bf1-fe12-4052-ace6-c5b0cf7dd7fd",
                "technique_id": "T1602.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud storage breach leads to exposure of sensitive drone mission logs and analytics.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage is improperly secured and configured.",
                    "Role": "Cloud Administrator",
                    "Condition": "Misconfiguration in cloud security settings."
                },
                {
                    "Assumption": "Access control to cloud data is poorly managed.",
                    "Role": "System Administrator",
                    "Condition": "Weak access control policies."
                },
                {
                    "Assumption": "Sensitive data is stored without adequate encryption.",
                    "Role": "Data Engineer",
                    "Condition": "No encryption for stored sensitive data."
                }
            ],
            "Potential Impact": "Exposure of sensitive information and potential mission compromise.",
            "MITRE ATT&CK Keywords": [
                "cloud breach",
                "data exposure",
                "mission logs",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malware introduced via phishing emails installs a backdoor that exfiltrates sensitive data from the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "The attacker successfully lures a user into opening a phishing email.",
                    "Role": "Attacker",
                    "Condition": "Usage of convincing phishing tactics."
                },
                {
                    "Assumption": "Endpoint security on the GCS is inadequate.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient endpoint protection measures."
                },
                {
                    "Assumption": "Users are not adequately trained to recognize phishing attempts.",
                    "Role": "Management",
                    "Condition": "Lack of user awareness training."
                }
            ],
            "Potential Impact": "Exfiltration of sensitive data and potential data leak.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "malware",
                "data exfiltration",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack overwhelms the communication channel between UAVs and the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "The communication channel lacks effective DDoS protection.",
                    "Role": "Network Engineer",
                    "Condition": "Absence of DDoS mitigation solutions."
                },
                {
                    "Assumption": "The attacker has sufficient resources to launch a DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or similar resources."
                },
                {
                    "Assumption": "Network monitoring does not detect unusual traffic patterns.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of network monitoring and anomaly detection."
                }
            ],
            "Potential Impact": "Disruption in drone control and communication.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "communication disruption",
                "network flooding",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker leverages a known NVD-CVE vulnerability in the firmware to disable drone operations.",
            "Assumptions": [
                {
                    "Assumption": "The vulnerability is not patched in the drone firmware.",
                    "Role": "Firmware Developer",
                    "Condition": "Unpatched or outdated firmware."
                },
                {
                    "Assumption": "The attacker has knowledge of the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Access to public vulnerability databases."
                },
                {
                    "Assumption": "There are no mechanisms to detect and respond to firmware exploitation.",
                    "Role": "Security Engineer",
                    "Condition": "Lacking intrusion detection systems for firmware."
                }
            ],
            "Potential Impact": "Complete operational halt of affected drones.",
            "MITRE ATT&CK Keywords": [
                "firmware vulnerability",
                "system disablement",
                "exploitation",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious payload sent to cloud services causes excessive resource consumption, leading to service unavailability.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services lack rate limiting measures.",
                    "Role": "Cloud Administrator",
                    "Condition": "Absence of application-level rate limiting."
                },
                {
                    "Assumption": "The attacker can send a high volume of requests to the service.",
                    "Role": "Attacker",
                    "Condition": "Unrestricted ability to interact with APIs."
                },
                {
                    "Assumption": "No automatic scaling or load balancing is in place.",
                    "Role": "System Architect",
                    "Condition": "Missing or inadequate scaling mechanisms."
                }
            ],
            "Potential Impact": "Service downtimes and inability to access stored data.",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "cloud service disruption",
                "unauthorized requests",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A lower privileged user exploits a vulnerability identified in the NVD CVE to gain administrative access to the drone firmware.",
            "Assumptions": [
                {
                    "Assumption": "There is an unpatched vulnerability that allows privilege escalation.",
                    "Role": "Firmware Developer",
                    "Condition": "Outdated firmware with known vulnerabilities."
                },
                {
                    "Assumption": "The attacker has knowledge of the vulnerability and exploit methods.",
                    "Role": "Attacker",
                    "Condition": "Awareness of vulnerability and access to exploit tools."
                },
                {
                    "Assumption": "Access control mechanisms do not limit the reach of lower privileged accounts.",
                    "Role": "Security Engineer",
                    "Condition": "Weak access control and insufficient privilege segregation."
                }
            ],
            "Potential Impact": "Full control over drone operations and potential data tampering.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "firmware exploit",
                "administrative access",
                "elevation of privilege"
            ],
            "mitre_technique": {
                "name": "Port Monitors",
                "description": "Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the <code>AddMonitor</code> API call to set a DLL to be loaded at startup.(Citation: AddMonitor) This DLL can be located in <code>C:\\Windows\\System32</code> and will be loaded and run by the print spooler service, `spoolsv.exe`, under SYSTEM level permissions on boot.(Citation: Bloxham) \n\nAlternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to the `Driver` value of an existing or new arbitrarily named subkey of <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>. The Registry key contains entries for the following:\n\n* Local Port\n* Standard TCP/IP Port\n* USB Monitor\n* WSD Port\n",
                "id": "attack-pattern--43881e51-ac74-445b-b4c6-f9f9e9bf23fe",
                "technique_id": "T1547.010"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with legitimate access abuses system misconfigurations to escalate privileges within the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "Misconfigurations in GCS allow privilege escalation.",
                    "Role": "System Administrator",
                    "Condition": "Improperly configured access controls."
                },
                {
                    "Assumption": "The insider has the means to identify and exploit these misconfigurations.",
                    "Role": "Insider",
                    "Condition": "Technical skill and access to system configurations."
                },
                {
                    "Assumption": "No alerts or monitoring are in place to detect unusual privilege escalations.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of effective monitoring and alerting systems."
                }
            ],
            "Potential Impact": "Unauthorized system modifications and access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "access control misconfiguration",
                "privilege abuse",
                "elevation of privilege"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware introduced via compromised ground station software ultimately grants root access to an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Ground station software has vulnerabilities that can be exploited.",
                    "Role": "Software Developer",
                    "Condition": "Presence of exploitable software bugs."
                },
                {
                    "Assumption": "The attacker can deliver and execute malicious software on the ground station.",
                    "Role": "Attacker",
                    "Condition": "Successful delivery and execution of malware."
                },
                {
                    "Assumption": "Security measures do not detect and mitigate malicious activities effectively.",
                    "Role": "Security Engineer",
                    "Condition": "Failure of antiviral and monitoring systems."
                }
            ],
            "Potential Impact": "Complete system takeover and loss of control over the ground station.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "root access",
                "ground control software",
                "elevation of privilege"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "18",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate UAV to the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "Physical access to a UAV or the UAV communication channel.",
                    "Role": "Attacker",
                    "Condition": "Attacker has physical proximity or access to the communication channel."
                },
                {
                    "Assumption": "Lack of robust authentication between UAVs and GCS.",
                    "Role": "System Designer",
                    "Condition": "System lacks strong mutual authentication protocols."
                }
            ],
            "Potential Impact": "Unauthorized UAV access to GCS, leading to data capture or malicious command execution.",
            "MITRE ATT&CK Keywords": [
                "identity spoofing",
                "UAV",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake GCS to issue commands to UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can broadcast commands within communication range.",
                    "Role": "Attacker",
                    "Condition": "Attacker's equipment can intercept and send signals."
                },
                {
                    "Assumption": "UAV firmware does not validate source of commands thoroughly.",
                    "Role": "Firmware Developer",
                    "Condition": "Low-level command validation is missing."
                }
            ],
            "Potential Impact": "UAVs may follow malicious commands, causing accidents or data theft.",
            "MITRE ATT&CK Keywords": [
                "command spoofing",
                "control station",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs GPS signals to mislead a UAV's navigation system.",
            "Assumptions": [
                {
                    "Assumption": "Availability of GPS signal spoofing equipment.",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to or can manufacture signal spoofing devices."
                },
                {
                    "Assumption": "UAV relies solely on GPS for navigation.",
                    "Role": "System Designer",
                    "Condition": "UAV does not cross-verify GPS with other navigation data."
                }
            ],
            "Potential Impact": "UAV may be redirected to hostile or unauthorized areas.",
            "MITRE ATT&CK Keywords": [
                "GPS spoofing",
                "navigation",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the UAV firmware to execute arbitrary commands.",
            "Assumptions": [
                {
                    "Assumption": "Access to UAV firmware update mechanism.",
                    "Role": "Attacker",
                    "Condition": "Attacker gains physical or remote access to update firmware."
                },
                {
                    "Assumption": "Lack of cryptographic integrity checks on firmware.",
                    "Role": "Firmware Developer",
                    "Condition": "Firmware does not have integrity validation mechanisms."
                }
            ],
            "Potential Impact": "UAV functionality compromised, leading to potential exploits and data theft.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "software",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Inflight tampering of data packets between UAV and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Intercept ability in the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Attacker is within range to intercept and manipulate data packets."
                },
                {
                    "Assumption": "Unencrypted communication or weak encryption.",
                    "Role": "System Designer",
                    "Condition": "Communication lacks robust encryption protocols."
                }
            ],
            "Potential Impact": "Manipulated data may lead to incorrect command execution or data loss.",
            "MITRE ATT&CK Keywords": [
                "packet tampering",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers tamper with data stored in the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service vulnerabilities accessible to attackers.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities exist in the cloud infrastructure."
                },
                {
                    "Assumption": "Inadequate access control and monitoring on cloud services.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Weak access controls or lack of monitoring."
                }
            ],
            "Potential Impact": "Data integrity is compromised, validation failures, and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "cloud tampering",
                "data storage",
                "infrastructure"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies having sent specific commands to a UAV.",
            "Assumptions": [
                {
                    "Assumption": "Lack of strong logging and command tracking mechanisms.",
                    "Role": "System Designer",
                    "Condition": "System doesn't implement robust logging."
                },
                {
                    "Assumption": "Insufficient non-repudiation controls.",
                    "Role": "Security Officer",
                    "Condition": "Controls for ensuring non-repudiation are inadequate."
                }
            ],
            "Potential Impact": "Difficulty in tracing command origins, potential dispute resolutions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command",
                "audit trails"
            ],
            "mitre_technique": {
                "name": "PowerShell Profile",
                "description": "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.\n\n[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles) \n\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched. (Citation: ESET Turla PowerShell May 2019) \n\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. (Citation: Wits End and Shady PowerShell Profiles)",
                "id": "attack-pattern--0f2c410d-d740-4ed9-abb1-b8f4a7faf6c3",
                "technique_id": "T1546.013"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker falsifies logs on the GCS to obscure their activities.",
            "Assumptions": [
                {
                    "Assumption": "Attacker gains sufficient privileges to alter logs.",
                    "Role": "Attacker",
                    "Condition": "Insider threat or exploited vulnerability granting high privileges."
                },
                {
                    "Assumption": "Weak audit logging mechanisms.",
                    "Role": "System Admin",
                    "Condition": "System has poor audit logging or access controls on logs."
                }
            ],
            "Potential Impact": "Obfuscation of attacker actions, hampering incident response and forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "audit",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud service logs are altered to deny data access or manipulation activities.",
            "Assumptions": [
                {
                    "Assumption": "Privileges to alter cloud service logs are obtainable.",
                    "Role": "Attacker",
                    "Condition": "Administrator credentials compromised."
                },
                {
                    "Assumption": "Inadequate log integrity mechanisms.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Logs are not safeguarded with checksums or similar mechanisms."
                }
            ],
            "Potential Impact": "False information in incident response, difficulty in tracking actual events.",
            "MITRE ATT&CK Keywords": [
                "cloud log manipulation",
                "integrity",
                "forensics"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker captures unencrypted communication between UAVs and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Unsecure communication protocols in use.",
                    "Role": "System Designer",
                    "Condition": "Absence of end-to-end encryption for communication channels."
                },
                {
                    "Assumption": "Attacker within communication range.",
                    "Role": "Attacker",
                    "Condition": "Proximity or tools to intercept communication signals."
                }
            ],
            "Potential Impact": "Sensitive data exposure, potential for exploitation or leaks.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "communication",
                "network security"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data in the cloud is accessed due to misconfigured cloud storage.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigured access control on cloud services.",
                    "Role": "Cloud Service Admin",
                    "Condition": "Improperly set permissions or exposed data endpoints."
                },
                {
                    "Assumption": "Attacker scans for publicly accessible data.",
                    "Role": "Attacker",
                    "Condition": "Use of automated tools or manual searches for misconfigurations."
                }
            ],
            "Potential Impact": "Exposure of confidential data, leading to leaks or compliance issues.",
            "MITRE ATT&CK Keywords": [
                "cloud storage",
                "data leak",
                "access control"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider leaks UAV operational data stored on cloud servers.",
            "Assumptions": [
                {
                    "Assumption": "Insider with access to sensitive information.",
                    "Role": "Insider",
                    "Condition": "Employee or contractor with access rights to critical data."
                },
                {
                    "Assumption": "Weak internal security measures.",
                    "Role": "Security Officer",
                    "Condition": "Lack of monitoring and controls over data access and export."
                },
                {
                    "Assumption": "Lack of data leak prevention mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Absence of monitoring tools and restrictions on sensitive data export."
                }
            ],
            "Potential Impact": "Potential data leaks, loss of competitive advantage, and legal consequences.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data breach",
                "cloud security"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the Ground Control Station rendering it inoperable.",
            "Assumptions": [
                {
                    "Assumption": "Systems exposed to the internet without sufficient protection.",
                    "Role": "System Admin",
                    "Condition": "Lack of DDoS mitigation services or firewalls."
                },
                {
                    "Assumption": "High-capacity botnet availability to the attacker.",
                    "Role": "Attacker",
                    "Condition": "Access to a botnet capable of launching large-scale attacks."
                }
            ],
            "Potential Impact": "Service disruption, preventing control and monitoring of UAVs.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "GCS",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "UAVs overwhelmed by malicious traffic preventing normal operation.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in UAV communication handling.",
                    "Role": "System Designer",
                    "Condition": "UAV lacks rate limiting or flood protection."
                },
                {
                    "Assumption": "Leveraging network vulnerabilities for traffic generation.",
                    "Role": "Attacker",
                    "Condition": "Identification and exploitation of communication protocol weaknesses."
                }
            ],
            "Potential Impact": "UAVs become unresponsive, degrading mission efficacy.",
            "MITRE ATT&CK Keywords": [
                "network attacks",
                "UAV",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud service providing essential data to GCS is attacked, rendering the system unusable.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service not protected against DDoS attacks.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Absence of robust DDoS protection at the service provider level."
                },
                {
                    "Assumption": "Critical dependency on real-time cloud data.",
                    "Role": "System Designer",
                    "Condition": "System design requiring constant interaction with cloud services."
                }
            ],
            "Potential Impact": "Operational disruption, data unavailability, and mission-critical failures.",
            "MITRE ATT&CK Keywords": [
                "cloud service",
                "DDoS",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits firmware vulnerabilities to gain administrative control over the UAV.",
            "Assumptions": [
                {
                    "Assumption": "Known firmware vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Exploitation of CVEs reported in firmware."
                },
                {
                    "Assumption": "No timely firmware updates applied.",
                    "Role": "Maintenance Team",
                    "Condition": "Failure to apply patches and updates promptly."
                },
                {
                    "Assumption": "Inadequate privilege separation in firmware.",
                    "Role": "Firmware Developer",
                    "Condition": "Single role or administrative controls without layers of security."
                }
            ],
            "Potential Impact": "Complete control over UAV, leading to misuse and unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "firmware exploitation",
                "administrative control",
                "software"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Insider escalates privileges on the GCS to perform unauthorized actions.",
            "Assumptions": [
                {
                    "Assumption": "Access to low-privilege account on GCS.",
                    "Role": "Insider",
                    "Condition": "Possession of a valid user account."
                },
                {
                    "Assumption": "Exploitable software vulnerability on the GCS.",
                    "Role": "Attacker",
                    "Condition": "Access to known software weaknesses."
                },
                {
                    "Assumption": "Inadequate role-based access control (RBAC) implementation.",
                    "Role": "System Designer",
                    "Condition": "Weak or improperly implemented RBAC."
                }
            ],
            "Potential Impact": "Execution of high-privilege actions without authorization, compromising mission integrity.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "GCS",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a cloud service vulnerability to gain high-level access to stored data and operations.",
            "Assumptions": [
                {
                    "Assumption": "Exploitable cloud service vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Use of CVEs or zero-day vulnerabilities."
                },
                {
                    "Assumption": "Administrative credentials leak or weak protection mechanisms.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Weaknesses in credential management and access control."
                },
                {
                    "Assumption": "Insufficient isolation of privileged operations.",
                    "Role": "System Designer",
                    "Condition": "Failure to implement proper privilege isolation mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized control over sensitive data and critical service operations.",
            "MITRE ATT&CK Keywords": [
                "cloud exploitation",
                "privilege escalation",
                "data control"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "19",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate Ground Control Station (GCS) to intercept and manipulate drone commands.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication channels between the drones and GCS.",
                    "Role": "Attacker",
                    "Condition": "Access to network"
                },
                {
                    "Assumption": "The communication protocols lack strong mutual authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Weak authentication"
                }
            ],
            "Potential Impact": "Unauthorized control of drones, data interception, and mission disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "command"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate user to gain access to the cloud services used by the DaaS platform.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can obtain legitimate user credentials through phishing or other means.",
                    "Role": "Attacker",
                    "Condition": "Credential theft"
                },
                {
                    "Assumption": "The cloud services do not enforce strong multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Weak access controls"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, potential data leak, and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud services",
                "credential",
                "phishing"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A compromised drone impersonates a legitimate drone to receive access to secure data and resources.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised the firmware of a drone.",
                    "Role": "Attacker",
                    "Condition": "Firmware vulnerability"
                },
                {
                    "Assumption": "The identification mechanisms for drones are insufficient.",
                    "Role": "System Designer",
                    "Condition": "Weak identification protocols"
                }
            ],
            "Potential Impact": "Unauthorized data access, potential information leak, and system resource misuse.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "firmware",
                "identification"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of drones to alter their behavior and operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the firmware update process.",
                    "Role": "Attacker",
                    "Condition": "Access to update mechanism"
                },
                {
                    "Assumption": "The firmware lacks sufficient integrity checks.",
                    "Role": "System Designer",
                    "Condition": "Weak integrity validation"
                }
            ],
            "Potential Impact": "Compromised drone functionality, potential mission failure, and unauthorized data manipulation.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "integrity",
                "device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters data during transmission between drones and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication channels.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "The data transmission lacks strong encryption.",
                    "Role": "System Designer",
                    "Condition": "Weak encryption protocols"
                }
            ],
            "Potential Impact": "Corrupted data, compromised mission integrity, and potential data leaks.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data transmission",
                "network",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the GCS software to manipulate drone commands and operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the GCS.",
                    "Role": "Attacker",
                    "Condition": "Access to system"
                },
                {
                    "Assumption": "The GCS software integrity checks are weak or non-existent.",
                    "Role": "System Administrator",
                    "Condition": "Weak integrity checks"
                }
            ],
            "Potential Impact": "Unauthorized drone control, compromised missions, and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "software",
                "integrity",
                "control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies issuing critical commands to drones, potentially harming mission integrity.",
            "Assumptions": [
                {
                    "Assumption": "Logs do not have non-repudiation properties.",
                    "Role": "System Designer",
                    "Condition": "Weak logging mechanisms"
                },
                {
                    "Assumption": "Command issuance is not securely traced to specific users.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate user tracking"
                }
            ],
            "Potential Impact": "Disrupted accountability, compromised mission integrity, and disputes over data actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user action",
                "logging",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Impair Defenses",
                "description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\n\nAdversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out of a computer or stopping it from being shut down. These restrictions can further enable malicious operations as well as the continued propagation of incidents.(Citation: Emotet shutdown)\n\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.",
                "id": "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529",
                "technique_id": "T1562"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker erases or alters logs to cover their tracks, masking unauthorized activities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the logging system.",
                    "Role": "Attacker",
                    "Condition": "System access"
                },
                {
                    "Assumption": "Logs are not adequately protected from tampering.",
                    "Role": "System Administrator",
                    "Condition": "Weak log protection"
                }
            ],
            "Potential Impact": "Loss of audit trails, difficulty in incident investigation, and concealment of malicious actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "audit",
                "investigation"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Misuse of command logs by internal staff denies their involvement in unauthorized drone activities.",
            "Assumptions": [
                {
                    "Assumption": "Internal access to command logs by multiple staff.",
                    "Role": "Internal Staff",
                    "Condition": "Log access"
                },
                {
                    "Assumption": "Logs do not have read-only access controls.",
                    "Role": "System Administrator",
                    "Condition": "Weak access controls"
                }
            ],
            "Potential Impact": "Disrupted accountability processes and difficulty in attributing actions correctly.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "internal threat",
                "logging",
                "audit"
            ],
            "mitre_technique": {
                "name": "Rogue Domain Controller",
                "description": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)",
                "id": "attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a",
                "technique_id": "T1207"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted during transmission between drones and the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the data transmission channel.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "The data transmission is not encrypted or uses weak encryption.",
                    "Role": "System Designer",
                    "Condition": "Weak encryption"
                }
            ],
            "Potential Impact": "Unauthorized data access and potential information leak.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data transmission",
                "network",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to drone-collected data stored in the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain access to cloud storage credentials.",
                    "Role": "Attacker",
                    "Condition": "Credential theft"
                },
                {
                    "Assumption": "The cloud storage does not employ strong access controls.",
                    "Role": "System Administrator",
                    "Condition": "Weak access controls"
                }
            ],
            "Potential Impact": "Unauthorized data access and potential information leakage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "credential",
                "access control"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacker exploits vulnerabilities in deployed sensors and cameras to intercept sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within range of transmitted sensor data.",
                    "Role": "Attacker",
                    "Condition": "Range proximity"
                },
                {
                    "Assumption": "Sensors and cameras are poorly secured or lack encryption.",
                    "Role": "System Designer",
                    "Condition": "Weak sensor security"
                }
            ],
            "Potential Impact": "Unauthorized data interception and potential leak of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "sensor",
                "camera",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the communication channels, overwhelming the system and disrupting service.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the capability to generate significant traffic.",
                    "Role": "Attacker",
                    "Condition": "Network capability"
                },
                {
                    "Assumption": "The system does not employ effective rate limiting or DDoS protection.",
                    "Role": "System Administrator",
                    "Condition": "Lack of protection"
                }
            ],
            "Potential Impact": "Disruption of drone operations and potential mission failure.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network",
                "flooding",
                "traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of vulnerabilities in UAV firmware to crash drones or disable functionality.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has discovered and can exploit firmware vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability knowledge"
                },
                {
                    "Assumption": "Drones are not patched against known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Lack of patching"
                }
            ],
            "Potential Impact": "Operational disruption and potential crash of drones.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "firmware",
                "crash",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious actors target cloud infrastructure with a DoS attack to disrupt data processing and storage functions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the resources to initiate a cloud infrastructure attack.",
                    "Role": "Attacker",
                    "Condition": "Resource capability"
                },
                {
                    "Assumption": "The cloud service lacks adequate DoS protection mechanisms.",
                    "Role": "Cloud Provider",
                    "Condition": "Inadequate protection"
                }
            ],
            "Potential Impact": "Loss of data availability and interruption of service operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud services",
                "data processing",
                "storage"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a Linux vulnerability to gain higher-level access on the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can exploit recent CVE vulnerabilities in Linux.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability knowledge"
                },
                {
                    "Assumption": "The system is not patched against known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Lack of patching"
                }
            ],
            "Potential Impact": "Unauthorized access to system resources and potential control over drone operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "linux",
                "vulnerability",
                "system access"
            ],
            "mitre_technique": {
                "name": "Malicious Shell Modification",
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user\u2019s shell. User shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command line interface or remotely logs in (such as SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user\u2019s home directory (~/) to configure the environment. All login shells on a system use <code>/etc/profile</code> when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user\u2019s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files (Citation: intezer-kaiji-malware). These files require root permissions and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> (Rocke) which are sourced when a user opens a command line interface or connects remotely. Adversaries often use ~/.bash_profile since the system only executes the first file that exists in the listed order. Adversaries have also leveraged the <code>~/.bashrc</code> file (Tsunami, Rocke, Linux Rabbit, Magento) which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command line interface. Some malware targets the termination of a program to trigger execution (Cannon), adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session(Pearl_shellbot). \n\nFor macOS, the functionality of this technique is similar but leverages zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>. The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc<code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.",
                "id": "attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8",
                "technique_id": "T1156"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses credential theft schemes to access high-privileged accounts in the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can acquire high-privilege credentials through phishing or malware.",
                    "Role": "Attacker",
                    "Condition": "Credential theft"
                },
                {
                    "Assumption": "Cloud services do not enforce strong multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Weak authentication"
                }
            ],
            "Potential Impact": "Expanded system access and potential manipulation of stored data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "credential",
                "cloud services",
                "phishing"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a firmware vulnerability to gain root access to drone systems.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has discovered and exploits firmware vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability knowledge"
                },
                {
                    "Assumption": "Drones lack adequate security and mitigation measures for known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Lack of patching"
                }
            ],
            "Potential Impact": "Full control over drone systems and potential unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "drone systems",
                "root access"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "21",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a legitimate Ground Control Station (GCS) to issue unauthorized commands to the UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The communication between UAV and GCS can be intercepted.",
                    "Role": "Attacker",
                    "Condition": "Valid if communication is not fully secure."
                },
                {
                    "Assumption": "The attacker can mimic or replicate the communication protocol used by the legitimate GCS.",
                    "Role": "Attacker",
                    "Condition": "Valid if protocol specifications can be obtained or reverse-engineered."
                },
                {
                    "Assumption": "The UAV relies solely on the GCS for command validation.",
                    "Role": "System",
                    "Condition": "Valid if there are no additional security checks or signal authentication mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized control of UAVs and potential misuse for malicious activities.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "communication",
                "command"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Phishing attack using a fake cloud services login page to capture credentials of the DaaS operators.",
            "Assumptions": [
                {
                    "Assumption": "Operators may access the cloud services outside secure networks.",
                    "Role": "Operator",
                    "Condition": "Valid if accessing from public or less secure networks."
                },
                {
                    "Assumption": "The attacker can create a convincing fake login page.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has basic web development skills and knowledge of the original system."
                },
                {
                    "Assumption": "Operators might not verify the URL or source of the login page.",
                    "Role": "Operator",
                    "Condition": "Valid if operators lack adequate phishing awareness training."
                }
            ],
            "Potential Impact": "Credential theft leading to unauthorized access to sensitive data and control features.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "phishing",
                "credentials",
                "cloud",
                "social engineering"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs GPS signals to mislead UAVs about their actual location.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to GPS signal spoofing tools.",
                    "Role": "Attacker",
                    "Condition": "Valid if GPS spoofing technology is available."
                },
                {
                    "Assumption": "The UAVs solely rely on GPS for location data.",
                    "Role": "System",
                    "Condition": "Valid unless redundant navigational systems are used."
                },
                {
                    "Assumption": "There are no additional verification mechanisms for GPS data.",
                    "Role": "System",
                    "Condition": "Valid if the system lacks mechanisms to cross-verify GPS data."
                }
            ],
            "Potential Impact": "Misguided UAV operations, potentially causing mission failures or accidents.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "navigation",
                "device",
                "location"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modification of firmware on the UAVs to introduce vulnerabilities or backdoors.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or network access to the UAVs.",
                    "Role": "Attacker",
                    "Condition": "Valid if UAVs are unattended or lack secure firmware update mechanisms."
                },
                {
                    "Assumption": "The UAVs lack secure boot or firmware integrity checks.",
                    "Role": "System",
                    "Condition": "Valid if there are no mechanisms ensuring firmware integrity."
                },
                {
                    "Assumption": "Firmware updates are not cryptographically signed.",
                    "Role": "System",
                    "Condition": "Valid if updates can be performed without signature verification."
                }
            ],
            "Potential Impact": "Compromised UAV operations and unauthorized access to collected data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device",
                "backdoor",
                "modification"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Interception and modification of data in transit between the UAVs and GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the communication link between UAVs and GCS.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not fully secure."
                },
                {
                    "Assumption": "Data in transit is not encrypted.",
                    "Role": "System",
                    "Condition": "Valid unless secure encryption protocols are utilized."
                },
                {
                    "Assumption": "The system does not verify data integrity upon receipt.",
                    "Role": "System",
                    "Condition": "Valid if no checksums or integrity verification mechanisms are in place."
                }
            ],
            "Potential Impact": "Corrupted data leading to incorrect GCS decisions and potentially unsafe UAV operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data",
                "communication",
                "interception",
                "modification"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actor uploads modified sensor data to the cloud service.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the cloud service data upload interface.",
                    "Role": "Attacker",
                    "Condition": "Valid with compromised credentials or flaws in access control."
                },
                {
                    "Assumption": "Sensor data from UAVs is not authenticated before processing.",
                    "Role": "System",
                    "Condition": "Valid if there are no authentication mechanisms for incoming data."
                },
                {
                    "Assumption": "Data integrity checks are not performed on uploaded data.",
                    "Role": "System",
                    "Condition": "Valid if lacks automated verification mechanisms."
                }
            ],
            "Potential Impact": "Incorrect analysis results and faulty decisions based on tampered data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data",
                "sensor",
                "cloud",
                "modification"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider deletes log files from the GCS to cover their unauthorized activities.",
            "Assumptions": [
                {
                    "Assumption": "The GCS allows log file manipulation by insiders.",
                    "Role": "Insider",
                    "Condition": "Valid if access control policies on log files are weak."
                },
                {
                    "Assumption": "No automated backups of log files are maintained.",
                    "Role": "System",
                    "Condition": "Valid if the system lacks a backup mechanism."
                },
                {
                    "Assumption": "Log management does not have audit controls.",
                    "Role": "System",
                    "Condition": "Valid if the system does not alert on log deletion."
                }
            ],
            "Potential Impact": "Loss of audit capability compromising investigation and forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logs",
                "deletion",
                "GCS",
                "audit"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Attackers manipulate flight data logs to evade detection of unauthorized usage of UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attackers have access to flight data logs.",
                    "Role": "Attacker",
                    "Condition": "Valid if access controls are weak or compromised credentials are used."
                },
                {
                    "Assumption": "Logs are stored without proper protection against modification.",
                    "Role": "System",
                    "Condition": "Valid if no integrity checks or secure logging mechanisms are used."
                },
                {
                    "Assumption": "There is no monitoring or alerts for changes in critical logs.",
                    "Role": "System",
                    "Condition": "Valid if changes do not trigger alerts or reviews."
                }
            ],
            "Potential Impact": "False records compromising the integrity of flight data and oversight.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logs",
                "flight data",
                "manipulation",
                "audit"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny issuing certain commands to UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Command transactions are not logged with operator identity.",
                    "Role": "System",
                    "Condition": "Valid if systems lack detailed logging."
                },
                {
                    "Assumption": "The system does not enforce authentication for critical commands.",
                    "Role": "System",
                    "Condition": "Valid if command execution lacks strong user authentication."
                },
                {
                    "Assumption": "Logs are not kept in tamper-proof form.",
                    "Role": "System",
                    "Condition": "Valid if logs can be altered or deleted post issuance."
                }
            ],
            "Potential Impact": "Difficulty in tracing and proving command issuance leading to accountability issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "commands",
                "denial",
                "logging",
                "auth"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of unencrypted data transmission between UAVs and GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can eavesdrop on the communication link.",
                    "Role": "Attacker",
                    "Condition": "Valid if the link is accessible and lacks encryption."
                },
                {
                    "Assumption": "Transmit data is sensitive or confidential.",
                    "Role": "Operator/System",
                    "Condition": "Valid if the data includes sensitive mission-critical information."
                },
                {
                    "Assumption": "No monitoring for unauthorized access to the communication channel.",
                    "Role": "System",
                    "Condition": "Valid if the system lacks intrusion detection mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive mission data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "eavesdropping",
                "transmission",
                "unencrypted",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data breach due to insecure cloud storage configuration.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage is accessible from the public internet without adequate protections.",
                    "Role": "Administrator",
                    "Condition": "Valid if cloud storage access controls are misconfigured."
                },
                {
                    "Assumption": "Sensitive data is stored in the cloud without encryption.",
                    "Role": "System",
                    "Condition": "Valid if data at rest is not encrypted."
                },
                {
                    "Assumption": "Access controls are not enforced rigorously.",
                    "Role": "Administrator",
                    "Condition": "Valid if access permissions are overly permissive."
                }
            ],
            "Potential Impact": "Exposure of sensitive data stored in the cloud.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud",
                "storage",
                "configuration",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Acquire Infrastructure",
                "description": "Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost.(Citation: Free Trial PurpleUrchin) Additionally, botnets are available for rent or purchase.\n\nUse of these infrastructure solutions allows adversaries to stage, launch, and execute operations. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contacting third-party web services or acquiring infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090), including from residential proxy services.(Citation: amnesty_nso_pegasus)(Citation: FBI Proxies Credential Stuffing)(Citation: Mandiant APT29 Microsoft 365 2022) Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.",
                "id": "attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2",
                "technique_id": "T1583"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Remote code execution leads to unauthorized access to sensitive data on UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Remote code execution vulnerability exists in the UAV firmware.",
                    "Role": "Attacker",
                    "Condition": "Valid if unpatched or vulnerable firmware is used."
                },
                {
                    "Assumption": "Sensitive data is stored locally on the UAV.",
                    "Role": "System",
                    "Condition": "Valid if the UAV retains sensitive data during operations."
                },
                {
                    "Assumption": "No isolation between different components on the UAV to restrict access post-exploitation.",
                    "Role": "System",
                    "Condition": "Valid if security controls do not isolate critical data."
                }
            ],
            "Potential Impact": "Exposure of sensitive data on compromised UAVs.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "remote code execution",
                "UAV",
                "data",
                "access"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on GCS, overwhelming it with traffic.",
            "Assumptions": [
                {
                    "Assumption": "The GCS is accessible via the internet.",
                    "Role": "Attacker",
                    "Condition": "Valid if the GCS is not fully isolated from public networks."
                },
                {
                    "Assumption": "No rate limits or traffic filters are in place.",
                    "Role": "System",
                    "Condition": "Valid if traffic is not throttled or filtered effectively."
                },
                {
                    "Assumption": "Attackers can coordinate or launch sufficient traffic to overwhelm the GCS.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers control enough resources."
                }
            ],
            "Potential Impact": "Disruption of GCS operations, resulting in loss of control over UAVs.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "GCS",
                "traffic",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of known Linux kernel vulnerabilities to crash the GCS server.",
            "Assumptions": [
                {
                    "Assumption": "The GCS runs on a Linux-based operating system.",
                    "Role": "System",
                    "Condition": "Valid if the operating system is identified as Linux."
                },
                {
                    "Assumption": "The GCS server is not patched against known vulnerabilities.",
                    "Role": "Administrator",
                    "Condition": "Valid if latest patches are not applied."
                },
                {
                    "Assumption": "Attackers can execute code to exploit vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if they have gained local or remote execution capabilities."
                }
            ],
            "Potential Impact": "Crash of the GCS server leading to loss of UAV control.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Linux",
                "kernel",
                "vulnerability",
                "exploit"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Interference with UAV communication channels, causing failure in command and control.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels are vulnerable to jamming or interference.",
                    "Role": "Attacker",
                    "Condition": "Valid if communication is not resilient to interference."
                },
                {
                    "Assumption": "UAVs are not equipped to handle communication failure gracefully.",
                    "Role": "System",
                    "Condition": "Valid if fallback mechanisms are absent."
                },
                {
                    "Assumption": "Attackers have access to jamming equipment or techniques.",
                    "Role": "Attacker",
                    "Condition": "Valid if equipment is available or techniques are known."
                }
            ],
            "Potential Impact": "Loss of communication leading to UAV mission failure.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "communication",
                "interference",
                "jamming",
                "control"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of firmware vulnerabilities to gain root access on UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Firmware has known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerabilities are unpatched."
                },
                {
                    "Assumption": "The system permits direct interaction with the firmware's internals.",
                    "Role": "System",
                    "Condition": "Valid if strict isolation is not enforced."
                },
                {
                    "Assumption": "Attackers have sophisticated tools to exploit firmware vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if publically available or custom tools exist."
                }
            ],
            "Potential Impact": "Full control over UAV operations and potential introduction of persistent malware.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "UAV",
                "root access",
                "control"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised GCS operator account privileges escalate to system administrator level.",
            "Assumptions": [
                {
                    "Assumption": "Account permissions are not properly segmented.",
                    "Role": "System",
                    "Condition": "Valid if privilege boundaries are incorrectly defined."
                },
                {
                    "Assumption": "Attackers can compromise lower-privilege accounts.",
                    "Role": "Attacker",
                    "Condition": "Valid if initial access is possible through phishing or other methods."
                },
                {
                    "Assumption": "The system lacks monitoring for unusual privilege escalation activities.",
                    "Role": "System",
                    "Condition": "Valid if activity logs and alerts are not enabled."
                }
            ],
            "Potential Impact": "Total control over GCS and suppression of security mechanisms.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "GCS",
                "login",
                "escalation",
                "control"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of cloud service vulnerabilities to gain administrative privileges over data storage and services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if services are not fully patched."
                },
                {
                    "Assumption": "Attackers can execute code or commands within the cloud environment.",
                    "Role": "Attacker",
                    "Condition": "Valid if service exploits are effective."
                },
                {
                    "Assumption": "Privileges are not isolated within the cloud services.",
                    "Role": "System",
                    "Condition": "Valid if role-based access controls are not strict."
                }
            ],
            "Potential Impact": "Manipulation or theft of sensitive data stored in the cloud.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud",
                "service",
                "admin",
                "data"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "20",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a legitimate Ground Control Station (GCS) to gain unauthorized control over UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of or can guess communication protocols used by the GCS.",
                    "Role": "Attacker",
                    "Condition": "Valid if communication protocols are not securely implemented."
                },
                {
                    "Assumption": "The attacker can intercept or initiate communication with the UAVs.",
                    "Role": "Attacker",
                    "Condition": "Valid if network communications are not encrypted."
                }
            ],
            "Potential Impact": "Unauthorized control of UAVs, potentially leading to theft, misuse, or disruption of services.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "communication",
                "identity theft"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate cloud service login pages to steal credentials from operators.",
            "Assumptions": [
                {
                    "Assumption": "Operators access the cloud service through phishing links or compromised pages.",
                    "Role": "Operator",
                    "Condition": "Valid if phishing awareness and defenses are insufficient."
                },
                {
                    "Assumption": "The attacker can create convincingly fake login pages.",
                    "Role": "Attacker",
                    "Condition": "Valid if proper security measures (e.g., SSL certificates) are not in place."
                }
            ],
            "Potential Impact": "Credential theft, leading to unauthorized access to sensitive cloud data and services.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "social engineering",
                "credential theft",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
                "id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
                "technique_id": "T1598.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof drone firmware update sources, causing drones to install malicious firmware.",
            "Assumptions": [
                {
                    "Assumption": "The firmware update mechanism does not verify the authenticity of update sources.",
                    "Role": "System",
                    "Condition": "Valid if firmware updates are not cryptographically signed."
                },
                {
                    "Assumption": "Drones periodically check for firmware updates from pre-configured sources.",
                    "Role": "UAV",
                    "Condition": "Valid if UAVs auto-update without verifying sources."
                }
            ],
            "Potential Impact": "Installation of malicious firmware, leading to potential drone hijacking or malfunction.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "firmware",
                "malware",
                "update"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actors could tamper with drone sensor data during transmission to the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and modify data packets in transit.",
                    "Role": "Attacker",
                    "Condition": "Valid if communication channels are not adequately encrypted."
                },
                {
                    "Assumption": "Data integrity checks are not implemented or insufficient.",
                    "Role": "System",
                    "Condition": "Valid if data lacks cryptographic integrity protection."
                }
            ],
            "Potential Impact": "Corruption of critical sensor data, potentially leading to poor decision-making or mission failures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "sensor data",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could inject malicious commands into the communication channels between the GCS and UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels are vulnerable to command injection attacks.",
                    "Role": "Attacker",
                    "Condition": "Valid if command/authentication validation is not performed rigorously."
                },
                {
                    "Assumption": "The attacker has access to the network medium used by the GCS and UAVs.",
                    "Role": "Attacker",
                    "Condition": "Valid if network access controls are weak."
                }
            ],
            "Potential Impact": "Unauthorized execution of commands, potentially leading to UAV misuse, crashes, or mission disruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "command injection",
                "communication",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could compromise the integrity of data stored in the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud security measures (e.g., access controls) are inadequate.",
                    "Role": "System",
                    "Condition": "Valid if proper cloud security configurations are not enforced."
                },
                {
                    "Assumption": "The attacker has valid user credentials, possibly obtained through phishing or credential theft.",
                    "Role": "Attacker",
                    "Condition": "Valid if credential management policies are weak."
                }
            ],
            "Potential Impact": "Alteration of stored data, potentially impacting data analytics, storage integrity, and operational decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "cloud",
                "storage"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator could deny having issued commands that led to unauthorized drone operations.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log or track command origins effectively.",
                    "Role": "System",
                    "Condition": "Valid if logging and traceability are not enforced."
                },
                {
                    "Assumption": "Operators have the ability to issue commands without authentication or authorization checks.",
                    "Role": "Operator",
                    "Condition": "Valid if access controls are missing or inadequate."
                }
            ],
            "Potential Impact": "Difficulty in tracing the source of unauthorized actions, leading to accountability challenges.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "traceability",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Accessibility Features",
                "description": "Windows contains accessibility features that may be launched with a key combination before a user has logged in (for example, when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are <code>C:\\Windows\\System32\\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\\Windows\\System32\\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways because of code integrity enhancements. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced. Examples for both methods:\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\\Windows\\System32\\utilman.exe</code>) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1076) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nFor the debugger method on Windows Vista and later as well as Windows Server 2008 and later, for example, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for the accessibility program (e.g., \"utilman.exe\"). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with RDP will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nOther accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)\n\n* On-Screen Keyboard: <code>C:\\Windows\\System32\\osk.exe</code>\n* Magnifier: <code>C:\\Windows\\System32\\Magnify.exe</code>\n* Narrator: <code>C:\\Windows\\System32\\Narrator.exe</code>\n* Display Switcher: <code>C:\\Windows\\System32\\DisplaySwitch.exe</code>\n* App Switcher: <code>C:\\Windows\\System32\\AtBroker.exe</code>",
                "id": "attack-pattern--9b99b83a-1aac-4e29-b975-b374950551a3",
                "technique_id": "T1015"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service provider could deny the occurrence of a data breach impacting sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service activities are not sufficiently monitored and logged.",
                    "Role": "Service Provider",
                    "Condition": "Valid if auditing and logging measures are insufficient."
                },
                {
                    "Assumption": "Data breach detection mechanisms are not adequately implemented.",
                    "Role": "System",
                    "Condition": "Valid if intrusion detection systems are weak or absent."
                }
            ],
            "Potential Impact": "Challenges in breach investigation and forensic analysis, potentially allowing the breach to persist undetected.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data breach",
                "cloud",
                "logging"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could deny having accessed and modified sensitive firmware configurations on a UAV.",
            "Assumptions": [
                {
                    "Assumption": "No logs are maintained for firmware access and modifications.",
                    "Role": "System",
                    "Condition": "Valid if there is a lack of strict logging measures."
                },
                {
                    "Assumption": "Firmware configuration changes can be made without proper authentication.",
                    "Role": "System",
                    "Condition": "Valid if access control mechanisms are not in place or bypassable."
                }
            ],
            "Potential Impact": "Difficulty in holding responsible parties accountable, necessitating policy reviews and forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "firmware",
                "logging",
                "authentication"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive sensor data transmitted from UAVs could be intercepted by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels lack adequate encryption.",
                    "Role": "System",
                    "Condition": "Valid if secure communication protocols are not used."
                },
                {
                    "Assumption": "The attacker has the capability to capture and interpret transmitted data.",
                    "Role": "Attacker",
                    "Condition": "Valid if interception tools are available and used effectively."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, potentially leading to intelligence leaks and operational security risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "communication",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud-stored data could be accessed by unauthorized users due to inadequate access controls.",
            "Assumptions": [
                {
                    "Assumption": "Cloud access controls are misconfigured or insufficient.",
                    "Role": "System",
                    "Condition": "Valid if identity and access management policies are weak."
                },
                {
                    "Assumption": "The attacker has obtained legitimate user credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if credential theft mechanisms are effective against existing defenses."
                }
            ],
            "Potential Impact": "Exposure of sensitive data, resulting in confidentiality breaches and data privacy issues.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud",
                "access control",
                "data privacy"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attackers could exploit vulnerabilities in UAV firmware to access stored data.",
            "Assumptions": [
                {
                    "Assumption": "The UAV firmware has known vulnerabilities that remain unpatched.",
                    "Role": "System",
                    "Condition": "Valid if firmware is not updated promptly."
                },
                {
                    "Assumption": "Firmware vulnerabilities allow unauthorized data access.",
                    "Role": "Attacker",
                    "Condition": "Valid if exploitation techniques for the vulnerabilities are known and feasible."
                }
            ],
            "Potential Impact": "Unauthorized exposure of sensitive mission data, leading to potential information leaks and security threats.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "firmware",
                "vulnerability",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could overwhelm the communication link between the GCS and UAVs, causing disruption in operations.",
            "Assumptions": [
                {
                    "Assumption": "The communication link is susceptible to high traffic volumes or flooding attacks.",
                    "Role": "System",
                    "Condition": "Valid if network bandwidth is limited or insufficiently protected against DDoS."
                },
                {
                    "Assumption": "The attacker has the capability and resources to generate a high volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has access to a botnet or similar resources."
                }
            ],
            "Potential Impact": "Disruption of UAV operations, potentially grounding drones and affecting mission completion.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "communication",
                "network",
                "flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud services could be targeted with a DDoS attack, disrupting data storage and processing operations.",
            "Assumptions": [
                {
                    "Assumption": "The cloud infrastructure is vulnerable to DDoS attacks.",
                    "Role": "System",
                    "Condition": "Valid if DDoS protection measures are insufficient."
                },
                {
                    "Assumption": "The attacker has the capability and resources to launch a large-scale DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker controls sufficient resources to overwhelm cloud services."
                }
            ],
            "Potential Impact": "Disruption in data availability and processing, potentially affecting ongoing and future missions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud",
                "network",
                "DDoS"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider could sabotage the GCS by introducing malicious code to disrupt operations.",
            "Assumptions": [
                {
                    "Assumption": "The insider has privileged access to the GCS systems.",
                    "Role": "Insider",
                    "Condition": "Valid if access controls and monitoring of insider activities are lax."
                },
                {
                    "Assumption": "The integrity of software running on the GCS can be compromised.",
                    "Role": "Insider",
                    "Condition": "Valid if secure software development practices are not followed."
                }
            ],
            "Potential Impact": "Disruption of drone command and control operations, leading to mission failures, potential crashes, and safety risks.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "insider threat",
                "malicious code",
                "GCS"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit vulnerabilities in the UAV firmware to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "The UAV firmware contains unpatched vulnerabilities.",
                    "Role": "System",
                    "Condition": "Valid if the firmware is outdated or not securely coded."
                },
                {
                    "Assumption": "The attacker has the tools and knowledge to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if exploitation techniques are publicly available or known to the attacker."
                }
            ],
            "Potential Impact": "Gaining root access allows the attacker to control the UAV entirely, bypassing all standard control mechanisms.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "exploit",
                "root access"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user could escalate privileges within the cloud service to access restricted data or functionalities.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service privilege management and enforcement are inadequate.",
                    "Role": "System",
                    "Condition": "Valid if identity and access management (IAM) policies are weak."
                },
                {
                    "Assumption": "The user can identify and exploit IAM-related vulnerabilities.",
                    "Role": "User",
                    "Condition": "Valid if IAM misconfigurations or vulnerabilities are present."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and functionalities, leading to potential abuse or data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud",
                "IAM",
                "access control"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider could use legitimate access to install a rootkit on the GCS, gaining permanent privileged access.",
            "Assumptions": [
                {
                    "Assumption": "The insider has legitimate access to the GCS with sufficient privileges to install software.",
                    "Role": "Insider",
                    "Condition": "Valid if software and OS access controls are improperly configured or monitored."
                },
                {
                    "Assumption": "The system does not have adequate defenses against rootkit installations.",
                    "Role": "System",
                    "Condition": "Valid if malware detection and prevention mechanisms are inadequate."
                }
            ],
            "Potential Impact": "Gaining permanent privileged access, bypassing all security controls, and potentially compromising the entire DaaS platform.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "rootkit",
                "insider threat",
                "GCS"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
                "id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                "technique_id": "T1014"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "22",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the Ground Control Station (GCS) to issue unauthorized commands to the UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain access to the network used by the GCS and UAVs.",
                    "Role": "Network Intruder",
                    "Condition": "Network Access"
                },
                {
                    "Assumption": "The attacker has sufficient knowledge of the communication protocol between the GCS and UAVs.",
                    "Role": "Knowledgeable Attacker",
                    "Condition": "Technical Expertise"
                },
                {
                    "Assumption": "The communication protocol does not have strong authentication mechanisms.",
                    "Role": "GCS/UAV Communication Designer",
                    "Condition": "Weak Authentication Protocol"
                }
            ],
            "Potential Impact": "Unauthorized control of drones, leading to potential data theft or physical damage.",
            "MITRE ATT&CK Keywords": [
                "network",
                "device",
                "spoofing",
                "command"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a phishing site to steal credentials of a drone operator.",
            "Assumptions": [
                {
                    "Assumption": "The operator can be tricked by a phishing email or website.",
                    "Role": "Drone Operator",
                    "Condition": "Lack of Phishing Awareness"
                },
                {
                    "Assumption": "The attacker knows the email address or other contact details of the drone operator.",
                    "Role": "Social Engineer",
                    "Condition": "Access to Contact Information"
                },
                {
                    "Assumption": "The attacker's phishing site is convincing and bypasses email filtering systems.",
                    "Role": "Attacker",
                    "Condition": "Effective Phishing Site"
                }
            ],
            "Potential Impact": "Unauthorized access to drone operations, potential data breach, and operational disruption.",
            "MITRE ATT&CK Keywords": [
                "credential",
                "theft",
                "phishing",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "Encrypted/Encoded File",
                "description": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use.\n\nThis type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.(Citation: File obfuscation) Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding/compression schemes such as Base64.\n\nThe entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.\n\nFor example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing](https://attack.mitre.org/techniques/T1566) payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: SFX - Encrypted/Encoded File) \n\nAdversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) execution.",
                "id": "attack-pattern--0d91b3c0-5e50-47c3-949a-2a796f04d144",
                "technique_id": "T1027.013"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker manipulates GPS signals to mislead the UAVs about their location.",
            "Assumptions": [
                {
                    "Assumption": "The UAVs rely on GPS data for navigation.",
                    "Role": "UAV System Designer",
                    "Condition": "Reliance on GPS"
                },
                {
                    "Assumption": "The attacker can transmit fraudulent GPS signals that are stronger than legitimate signals.",
                    "Role": "GPS Spoofer",
                    "Condition": "Proximity to UAVs"
                },
                {
                    "Assumption": "The UAVs do not have additional methods for verifying GPS data.",
                    "Role": "UAV Developer",
                    "Condition": "Lack of Redundant Verification"
                }
            ],
            "Potential Impact": "Drones may go off course, leading to mission failure, physical danger, or data loss.",
            "MITRE ATT&CK Keywords": [
                "GPS",
                "spoofer",
                "manipulation",
                "device"
            ],
            "mitre_technique": {
                "name": "Keylogging",
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
                "technique_id": "T1056.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a firmware vulnerability to alter drone embedded systems.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to firmware update mechanisms or physical access to the drone.",
                    "Role": "Firmware Attacker",
                    "Condition": "Update Mechanism Access or Physical Access"
                },
                {
                    "Assumption": "The firmware contains known vulnerabilities that can be exploited.",
                    "Role": "Attacker",
                    "Condition": "Vulnerable Firmware"
                },
                {
                    "Assumption": "The firmware security is not robust enough to detect tampering.",
                    "Role": "Firmware Developer",
                    "Condition": "Inadequate Tamper Detection"
                }
            ],
            "Potential Impact": "Malicious code execution, data corruption, and potential drone hijacking.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "tampering",
                "embedded systems",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code through a compromised cloud service to manipulate drone data storage.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service is compromised and allows code injection.",
                    "Role": "Cloud Attacker",
                    "Condition": "Cloud Service Vulnerability"
                },
                {
                    "Assumption": "The attacker has knowledge of the cloud service's data handling mechanisms.",
                    "Role": "Knowledgeable Attack",
                    "Condition": "Technical Expertise"
                },
                {
                    "Assumption": "Data integrity checks are not rigorously enforced.",
                    "Role": "Cloud Service Administrator",
                    "Condition": "Weak Integrity Checks"
                }
            ],
            "Potential Impact": "Data corruption, unauthorized data modification, and potential loss of data integrity.",
            "MITRE ATT&CK Keywords": [
                "cloud",
                "data injection",
                "tampering",
                "storage"
            ],
            "mitre_technique": {
                "name": "Taint Shared Content",
                "description": "\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",
                "id": "attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c",
                "technique_id": "T1080"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies critical UAV control parameters in the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "The insider has authorized access to the GCS.",
                    "Role": "Insider Threat",
                    "Condition": "Authorized Access"
                },
                {
                    "Assumption": "There are insufficient access controls and monitoring in place.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of Controls"
                },
                {
                    "Assumption": "The changes are not detected in a timely manner.",
                    "Role": "GCS Operator",
                    "Condition": "Inadequate Monitoring"
                }
            ],
            "Potential Impact": "Altered drone behavior, mission failure, and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "insider",
                "GCS",
                "tampering",
                "parameters"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies sending specific commands to a drone due to lack of logging mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are either not in place or are insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate Logging"
                },
                {
                    "Assumption": "Operators have access to critical controls.",
                    "Role": "Drone Operator",
                    "Condition": "High Privilege Access"
                },
                {
                    "Assumption": "Commands are not authenticated in a way that provides non-repudiation.",
                    "Role": "System Designer",
                    "Condition": "Lack of Non-repudiation Mechanisms"
                }
            ],
            "Potential Impact": "Difficulty in tracking actions, potential misuse of authority, operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "denial",
                "commands"
            ],
            "mitre_technique": {
                "name": "Security Software Discovery",
                "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1063) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\n\n### Windows\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.\n\n### Mac\n\nIt's becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.",
                "id": "attack-pattern--241814ae-de3f-4656-b49e-f9a80764d4b7",
                "technique_id": "T1063"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies uploading a modified firmware to the cloud service without proper audit trails.",
            "Assumptions": [
                {
                    "Assumption": "There are insufficient audit trails for firmware updates.",
                    "Role": "Cloud Service Administrator",
                    "Condition": "Lack of Detailed Logging"
                },
                {
                    "Assumption": "Users can upload firmware without thorough verification checks.",
                    "Role": "Operator",
                    "Condition": "Unverified Upload Mechanism"
                },
                {
                    "Assumption": "Firmware updates are critical and can significantly impact drone operations.",
                    "Role": "Firmware Developer",
                    "Condition": "Critical Updates"
                }
            ],
            "Potential Impact": "Unauthorized modifications, compromised drone functionality, and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "firmware",
                "audit trails",
                "upload"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service provider denies responsibility for a data breach due to inadequate service level agreements (SLAs).",
            "Assumptions": [
                {
                    "Assumption": "Service level agreements (SLAs) do not clearly define security responsibilities.",
                    "Role": "Service Provider",
                    "Condition": "Inadequate SLAs"
                },
                {
                    "Assumption": "The cloud service handles sensitive data critical to drone operations.",
                    "Role": "Cloud Service User",
                    "Condition": "High Sensitivity Data"
                },
                {
                    "Assumption": "Security incidents are not documented thoroughly and transparently.",
                    "Role": "Incident Response Team",
                    "Condition": "Poor Documentation"
                }
            ],
            "Potential Impact": "Compromised data without accountability, affected trust in service, and potential legal implications.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud service",
                "data breach",
                "SLA"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted communication between UAVs and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Lack of Encryption"
                },
                {
                    "Assumption": "The attacker has the capability to intercept wireless communications.",
                    "Role": "Attacker",
                    "Condition": "Interception Capability"
                },
                {
                    "Assumption": "Sensitive information is transmitted between UAVs and GCS.",
                    "Role": "Data Handler",
                    "Condition": "Sensitive Information"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of mission data, loss of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "communication",
                "unencrypted",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored in cloud services is accessed due to weak access controls.",
            "Assumptions": [
                {
                    "Assumption": "Access controls in the cloud services are weak or misconfigured.",
                    "Role": "Cloud Administrator",
                    "Condition": "Weak Access Control"
                },
                {
                    "Assumption": "Sensitive data is stored within the cloud services.",
                    "Role": "Data Handler",
                    "Condition": "Sensitive Data Storage"
                },
                {
                    "Assumption": "Attackers can exploit access control weaknesses.",
                    "Role": "Attacker",
                    "Condition": "Exploitation Capability"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, legal ramifications, breach of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "cloud",
                "access control",
                "data breach",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider leaks sensitive UAV operational data to unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "The insider has access to sensitive operational data.",
                    "Role": "Insider",
                    "Condition": "Authorized Access"
                },
                {
                    "Assumption": "There are insufficient monitoring mechanisms to detect data leaks.",
                    "Role": "Security Team",
                    "Condition": "Poor Monitoring"
                },
                {
                    "Assumption": "The insider has a motive to leak data.",
                    "Role": "Insider",
                    "Condition": "Malicious Intent"
                }
            ],
            "Potential Impact": "Confidentiality breach, potential competitive and operational risks.",
            "MITRE ATT&CK Keywords": [
                "insider",
                "data leak",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Remote Email Collection",
                "description": "Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.",
                "id": "attack-pattern--b4694861-542c-48ea-9eb1-10d356e7140a",
                "technique_id": "T1114.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the drone\u2019s operating system to cause a denial of service.",
            "Assumptions": [
                {
                    "Assumption": "The drone's operating system has known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Exploitation Knowledge"
                },
                {
                    "Assumption": "The attacker can reach the vulnerable system.",
                    "Role": "Network Intruder",
                    "Condition": "Network Access"
                },
                {
                    "Assumption": "The drone does not have adequate protection against such attacks.",
                    "Role": "System Designer",
                    "Condition": "Inadequate Protection"
                }
            ],
            "Potential Impact": "Disruption of drone operations, inability to complete missions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability",
                "drone",
                "operating system"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial of service (DDoS) attack overwhelms the cloud services supporting the DaaS platform.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not have sufficient DDoS protection.",
                    "Role": "Cloud Administrator",
                    "Condition": "Lack of DDoS Mitigation"
                },
                {
                    "Assumption": "Attackers are capable of coordinating large-scale DDoS attacks.",
                    "Role": "Attacker",
                    "Condition": "DDoS Capability"
                },
                {
                    "Assumption": "The cloud services are critical for operational data and control.",
                    "Role": "Cloud Service User",
                    "Condition": "Critical Dependency"
                }
            ],
            "Potential Impact": "Service disruption, inability to access or control drones, operational paralysis.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "cloud",
                "service disruption",
                "overwhelm"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the communication links between the UAVs and GCS with signal jamming.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are vulnerable to jamming.",
                    "Role": "Attacker",
                    "Condition": "Jamming Capability"
                },
                {
                    "Assumption": "The attacker is within range to jam the signals.",
                    "Role": "Attacker",
                    "Condition": "Proximity Access"
                },
                {
                    "Assumption": "UAVs and GCS do not have anti-jamming mechanisms in place.",
                    "Role": "System Designer",
                    "Condition": "Lack of Anti-jamming"
                }
            ],
            "Potential Impact": "Loss of control over UAVs, potential mission failure.",
            "MITRE ATT&CK Keywords": [
                "signal jamming",
                "communication",
                "service disruption",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the GCS software to escalate privileges and gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The GCS software contains exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Exploitation Capability"
                },
                {
                    "Assumption": "The attacker has initial access with lower-level privileges.",
                    "Role": "User",
                    "Condition": "Initial Access"
                },
                {
                    "Assumption": "Privilege escalation protections are weak or absent.",
                    "Role": "System Designer",
                    "Condition": "Weak Privilege Protections"
                }
            ],
            "Potential Impact": "Full control over GCS, unauthorized command execution, potential system-wide compromise.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "GCS",
                "vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a deserialization vulnerability in the cloud service to execute arbitrary code with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service has a known deserialization vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Technical Knowledge"
                },
                {
                    "Assumption": "The attacker can send crafted data to the vulnerable service.",
                    "Role": "Network Intruder",
                    "Condition": "Data Injection Capability"
                },
                {
                    "Assumption": "Deserialization processes run with elevated privileges.",
                    "Role": "Cloud Service Developer",
                    "Condition": "Improper Privilege Management"
                }
            ],
            "Potential Impact": "Unauthorized execution of arbitrary code, potential data breaches, service disruptions.",
            "MITRE ATT&CK Keywords": [
                "deserialization",
                "cloud service",
                "privilege escalation",
                "code execution"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider uses unprotected administrative interfaces to escalate privileges and access restricted areas of the drone management system.",
            "Assumptions": [
                {
                    "Assumption": "Administrative interfaces are not sufficiently protected.",
                    "Role": "System Administrator",
                    "Condition": "Weak Interface Protection"
                },
                {
                    "Assumption": "The insider has access to these interfaces.",
                    "Role": "Insider",
                    "Condition": "Authorized Access"
                },
                {
                    "Assumption": "There are insufficient monitoring and logging mechanisms to detect such access.",
                    "Role": "Security Team",
                    "Condition": "Lack of Monitoring"
                }
            ],
            "Potential Impact": "Unauthorized control, potential data breaches, and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "insider",
                "administrative interface",
                "privilege escalation",
                "restricted access"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "23",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake Ground Control Station (GCS) to issue unauthorized commands to the drones.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication protocol used by the drones.",
                    "Role": "Attacker",
                    "Condition": "Access to the protocol can be obtained through intercepting communications or documentation leakage."
                },
                {
                    "Assumption": "The drones do not have robust authentication mechanisms to verify the legitimacy of GCS commands.",
                    "Role": "System",
                    "Condition": "Weak or no authentication measures are in place."
                },
                {
                    "Assumption": "The attacker can deploy a GCS that the drones are willing to communicate with.",
                    "Role": "Attacker",
                    "Condition": "The deployment environment allows for mimicking communication characteristics."
                }
            ],
            "Potential Impact": "Unauthorized control of drones leading to potential data breaches or harmful actions.",
            "MITRE ATT&CK Keywords": [
                "imposter",
                "network",
                "command",
                "control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs GPS signals to mislead the drones about their location.",
            "Assumptions": [
                {
                    "Assumption": "Drones rely solely on GPS for location data.",
                    "Role": "System",
                    "Condition": "No backup or redundancy for GPS data verification."
                },
                {
                    "Assumption": "The attacker has a GPS signal emulator or spoofer.",
                    "Role": "Attacker",
                    "Condition": "Access to or capability to build a GPS spoofer."
                },
                {
                    "Assumption": "The operating environment does not have strong anti-spoofing measures in place.",
                    "Role": "Environment",
                    "Condition": "Lack of environmental measures to mitigate GPS spoofing."
                }
            ],
            "Potential Impact": "Misnavigation of drones, potentially leading to mission failure or accidental breaches of restricted areas.",
            "MITRE ATT&CK Keywords": [
                "gps",
                "navigation",
                "location",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses fake cloud service credentials to gain unauthorized access to the DaaS platform.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid but fake credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials can be phished or acquired via another method."
                },
                {
                    "Assumption": "The DaaS platform does not employ two-factor authentication.",
                    "Role": "System",
                    "Condition": "Lack of multi-factor security measures."
                },
                {
                    "Assumption": "The cloud service does not detect unusual access patterns.",
                    "Role": "Cloud Service",
                    "Condition": "Inadequate monitoring and anomaly detection."
                }
            ],
            "Potential Impact": "Data breaches and unauthorized actions within the DaaS platform.",
            "MITRE ATT&CK Keywords": [
                "cloud",
                "credential",
                "phishing",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the drone firmware to introduce malicious functionalities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the firmware update process.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to the firmware update interfaces."
                },
                {
                    "Assumption": "The firmware update process is not adequately secured.",
                    "Role": "System",
                    "Condition": "Lack of cryptographic validation for firmware."
                },
                {
                    "Assumption": "The drones would accept and run the modified firmware without verification.",
                    "Role": "System",
                    "Condition": "No measures for runtime integrity checking."
                }
            ],
            "Potential Impact": "Remote hijacking of drones, data corruption, and introduction of new vulnerabilities.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "malware",
                "modification",
                "update"
            ],
            "mitre_technique": {
                "name": "Screen Capture",
                "description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\n",
                "id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688",
                "technique_id": "T1113"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the data communication between the drones and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the ability to intercept the communication channels.",
                    "Role": "Attacker",
                    "Condition": "Access can be achieved through physical proximity or network attacks."
                },
                {
                    "Assumption": "Data is not encrypted during transmission.",
                    "Role": "System",
                    "Condition": "Lack of end-to-end encryption for data communication."
                },
                {
                    "Assumption": "The drones or GCS accept modified data packets.",
                    "Role": "System",
                    "Condition": "No checks for data packet integrity."
                }
            ],
            "Potential Impact": "Corruption of mission-critical data and potential failure of drone operations.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "packet",
                "interception",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the cloud-stored data, altering mission plans and analysis results.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has cloud access privileges.",
                    "Role": "Attacker",
                    "Condition": "Access can be direct or through compromised credentials."
                },
                {
                    "Assumption": "Cloud data storage lacks integrity checks.",
                    "Role": "Cloud Service",
                    "Condition": "No built-in mechanisms to verify data integrity."
                },
                {
                    "Assumption": "Altered data is not verified before usage.",
                    "Role": "System",
                    "Condition": "Systems trust cloud-stored data without additional checks."
                }
            ],
            "Potential Impact": "Damage to data integrity leading to erroneous mission planning and compromised analytical outputs.",
            "MITRE ATT&CK Keywords": [
                "cloud",
                "storage",
                "data",
                "manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates logs to erase traces of unauthorized GCS access.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not tamper-proof.",
                    "Role": "System",
                    "Condition": "Logs can be modified or deleted without detection."
                },
                {
                    "Assumption": "The attacker has access to systems where logs are maintained.",
                    "Role": "Attacker",
                    "Condition": "Access can be direct or through compromised accounts."
                },
                {
                    "Assumption": "No tamper-evident logging mechanisms are in place.",
                    "Role": "System",
                    "Condition": "Logs do not incorporate mechanisms to detect alterations."
                }
            ],
            "Potential Impact": "Compromise of forensic analysis and reduction in accountability.",
            "MITRE ATT&CK Keywords": [
                "logs",
                "modification",
                "forensics",
                "access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses false credentials to alter command execution logs on the drones.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the capability to insert or modify log entries.",
                    "Role": "Attacker",
                    "Condition": "Access can be through compromised credentials or firmware vulnerabilities."
                },
                {
                    "Assumption": "Logging processes do not ensure the integrity of entries.",
                    "Role": "System",
                    "Condition": "Logs can be altered without meaningful constraints."
                },
                {
                    "Assumption": "There are no secondary systems to cross-verify logs.",
                    "Role": "System",
                    "Condition": "Lack of redundancy or multiple logging sources."
                }
            ],
            "Potential Impact": "Unauthorized actions appear legitimate, complicating incident response.",
            "MITRE ATT&CK Keywords": [
                "logs",
                "credentials",
                "tampering",
                "drones"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny issuing specific commands leading to drone misuse.",
            "Assumptions": [
                {
                    "Assumption": "GCS lacks strong authentication and non-repudiation mechanisms.",
                    "Role": "System",
                    "Condition": "System design does not include robust user authentication."
                },
                {
                    "Assumption": "Command logs can be altered post-execution.",
                    "Role": "System",
                    "Condition": "No secure or immutable logging of issued commands."
                },
                {
                    "Assumption": "Multiple operators share credentials.",
                    "Role": "Users",
                    "Condition": "Credentials are not unique to individual users."
                }
            ],
            "Potential Impact": "Operational misuse and inability to trace responsible operators.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "commands",
                "execution",
                "logging"
            ],
            "mitre_technique": {
                "name": "Shared Modules",
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., [Native API](https://attack.mitre.org/techniques/T1106)).\n\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\n\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in `dlfcn.h` in functions such as `dlopen` and `dlsym`. Although macOS can execute `.so` files, common practice uses `.dylib` files.(Citation: Apple Dev Dynamic Libraries)(Citation: Linux Shared Libraries)(Citation: RotaJakiro 2021 netlab360 analysis)(Citation: Unit42 OceanLotus 2017)\n\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in `NTDLL.dll` and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like `LoadLibrary` at run time.(Citation: Microsoft DLL)",
                "id": "attack-pattern--0a5231ec-41af-4a35-83d0-6bdf11f28c65",
                "technique_id": "T1129"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data between the drone and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "System",
                    "Condition": "Communication channels do not use encryption."
                },
                {
                    "Assumption": "The attacker has the ability to intercept data in transit.",
                    "Role": "Attacker",
                    "Condition": "Proximity or access to the communication channels."
                },
                {
                    "Assumption": "There are no mitigations for preventing data interception.",
                    "Role": "System",
                    "Condition": "Lack of secure communication protocols."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive mission data.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "communication",
                "data",
                "transmission"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to cloud-stored sensitive data without proper authorization.",
            "Assumptions": [
                {
                    "Assumption": "The cloud storage does not employ strong access controls.",
                    "Role": "Cloud Service",
                    "Condition": "Weak or misconfigured access controls."
                },
                {
                    "Assumption": "The attacker can bypass or compromise authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Phishing, credential stuffing, or exploiting vulnerabilities."
                },
                {
                    "Assumption": "No mechanisms to detect unauthorized access.",
                    "Role": "Cloud Service",
                    "Condition": "Lack of monitoring and anomaly detection."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of mission-critical and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "cloud",
                "storage",
                "access",
                "data"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the firmware to extract operational data from the drones.",
            "Assumptions": [
                {
                    "Assumption": "A known or unknown vulnerability exists in the firmware.",
                    "Role": "System",
                    "Condition": "Vulnerability is present and exploitable."
                },
                {
                    "Assumption": "The attacker can communicate with the drone's firmware.",
                    "Role": "Attacker",
                    "Condition": "Proximity or remote access to the drone."
                },
                {
                    "Assumption": "No encryption or obfuscation of sensitive data within the firmware.",
                    "Role": "System",
                    "Condition": "Sensitive data is stored in plaintext or easily readable form."
                }
            ],
            "Potential Impact": "Extraction and leakage of sensitive data leading to operational risks.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "vulnerability",
                "exploits",
                "extraction"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the communication channels between drones and the GCS causing disruptions.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels can be overwhelmed.",
                    "Role": "System",
                    "Condition": "No measures to deal with high volumes of traffic."
                },
                {
                    "Assumption": "The attacker has the capability to launch a DoS attack.",
                    "Role": "Attacker",
                    "Condition": "Access to resources needed for DoS, such as botnets."
                },
                {
                    "Assumption": "No rate-limiting or filtering mechanisms in place.",
                    "Role": "System",
                    "Condition": "System design does not include traffic management."
                }
            ],
            "Potential Impact": "Disruption of drone operations, potential mission failure.",
            "MITRE ATT&CK Keywords": [
                "dos",
                "communication",
                "flooding",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the cloud services causing service downtime.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service has a known vulnerability.",
                    "Role": "System",
                    "Condition": "Presence of exploitable vulnerabilities."
                },
                {
                    "Assumption": "The attacker can reach the cloud service interface.",
                    "Role": "Attacker",
                    "Condition": "Access to the internet-facing component of the service."
                },
                {
                    "Assumption": "No failover mechanisms to mitigate service denial.",
                    "Role": "Cloud Service",
                    "Condition": "Lack of redundancy and failover strategies."
                }
            ],
            "Potential Impact": "Service outage leading to loss of drone control and data access.",
            "MITRE ATT&CK Keywords": [
                "dos",
                "cloud",
                "vulnerability",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker introduces malware into the drone firmware, causing it to crash frequently.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can modify the firmware.",
                    "Role": "Attacker",
                    "Condition": "Access to firmware update process."
                },
                {
                    "Assumption": "No verification mechanisms for firmware integrity during operation.",
                    "Role": "System",
                    "Condition": "Lack of runtime integrity checking."
                },
                {
                    "Assumption": "The malware is capable of causing crashes or performance degradation.",
                    "Role": "Malware",
                    "Condition": "Malware has destructive capabilities."
                }
            ],
            "Potential Impact": "Frequent drone crashes leading to operational unreliability.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "firmware",
                "crashes",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a privilege escalation vulnerability in the drone's firmware to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "A privilege escalation vulnerability exists.",
                    "Role": "System",
                    "Condition": "Vulnerability is known or undiscovered but present."
                },
                {
                    "Assumption": "The attacker can interact with the drone's system.",
                    "Role": "Attacker",
                    "Condition": "Proximity or remote access to the drone."
                },
                {
                    "Assumption": "No mitigation measures for privilege escalation are in place.",
                    "Role": "System",
                    "Condition": "Absence of security measures to prevent privilege escalation."
                }
            ],
            "Potential Impact": "Full control over drone operations leading to unauthorized command execution.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "root access",
                "vulnerability",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to the GCS through a vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "A known or unknown vulnerability exists in the GCS software.",
                    "Role": "System",
                    "Condition": "Vulnerability is present and exploitable."
                },
                {
                    "Assumption": "The attacker can reach the GCS interface or gain initial foothold.",
                    "Role": "Attacker",
                    "Condition": "Access via network or physical proximity."
                },
                {
                    "Assumption": "GCS lacks effective privilege separation.",
                    "Role": "System",
                    "Condition": "Poor privilege management and segregation."
                }
            ],
            "Potential Impact": "Unauthorized command and control over drone operations.",
            "MITRE ATT&CK Keywords": [
                "administrative access",
                "gcs",
                "vulnerability",
                "escalation"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker targets the cloud services using compromised low-privileged accounts to gain higher access privileges.",
            "Assumptions": [
                {
                    "Assumption": "Low-privilege accounts exist within the cloud service.",
                    "Role": "Cloud Service",
                    "Condition": "Presence of accounts with limited access rights."
                },
                {
                    "Assumption": "The attacker can compromise these accounts.",
                    "Role": "Attacker",
                    "Condition": "Phishing or other means to obtain credentials."
                },
                {
                    "Assumption": "Weak access controls allowing privilege escalation.",
                    "Role": "System",
                    "Condition": "Inadequate access control implementation within the cloud service."
                }
            ],
            "Potential Impact": "Access to sensitive cloud-hosted data and services.",
            "MITRE ATT&CK Keywords": [
                "cloud",
                "account",
                "privilege escalation",
                "compromise"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "24",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises as a legitimate user and gains access to the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "Attacker has acquired valid credentials through phishing or social engineering tactics.",
                    "Role": "Attacker",
                    "Condition": "Valid credentials must be compromised."
                },
                {
                    "Assumption": "GCS does not employ multi-factor authentication (MFA).",
                    "Role": "System",
                    "Condition": "MFA is not enforced."
                },
                {
                    "Assumption": "User sessions are not actively monitored for abnormal activities.",
                    "Role": "System Administrator",
                    "Condition": "Lack of adequate session monitoring."
                }
            ],
            "Potential Impact": "Unauthorized access to GCS, leading to potential theft or disruption of drone operations.",
            "MITRE ATT&CK Keywords": [
                "reconnaissance",
                "credential access",
                "network"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "False GPS data injected to misguide the UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has the capability to interfere with or mimic GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Access to GPS signal equipment."
                },
                {
                    "Assumption": "UAVs are reliant solely on GPS for navigation without redundant location verification.",
                    "Role": "UAV Systems",
                    "Condition": "Use of single navigation data source."
                },
                {
                    "Assumption": "There is a lack of encrypted GPS signal usage.",
                    "Role": "System Design",
                    "Condition": "Unencrypted GPS signals."
                }
            ],
            "Potential Impact": "Misguided drone navigation causing mission failure or crashes.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "injection",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a cloud service to intercept communications between UAVs and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has the ability to intercept and replicate cloud service endpoints.",
                    "Role": "Attacker",
                    "Condition": "Ability to intercept communication channels."
                },
                {
                    "Assumption": "System lacks mutual authentication protocols.",
                    "Role": "Communication Protocols",
                    "Condition": "Absence of mutual TLS authentication."
                },
                {
                    "Assumption": "Communication data is not using strong, modern encryption methods.",
                    "Role": "System Implementation",
                    "Condition": "Weak or no encryption in data transmission."
                }
            ],
            "Potential Impact": "Eavesdropping, data theft, and potential for manipulating commands issued to UAVs.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Firmware of UAVs is tampered remotely by exploiting a known vulnerability (e.g., XXE) in the firmware update process.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has identified and is capable of exploiting the XXE vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Access to the firmware update process."
                },
                {
                    "Assumption": "Firmware updates are not cryptographically signed or verified.",
                    "Role": "System Update Protocol",
                    "Condition": "Lack of firmware integrity checks."
                },
                {
                    "Assumption": "Secure channels are not used for delivering the firmware updates.",
                    "Role": "System Design",
                    "Condition": "Insecure firmware delivery."
                }
            ],
            "Potential Impact": "Compromised drone control, unauthorized data access, and potential system damage.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "device",
                "firmware"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Cloud service manipulation leading to altered data analytics and storage.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has gained unauthorized access to cloud services possibly by exploiting weak access controls.",
                    "Role": "Attacker",
                    "Condition": "Access through compromised cloud credentials or vulnerabilities."
                },
                {
                    "Assumption": "Cloud data integrity is not continuously validated.",
                    "Role": "Cloud Services",
                    "Condition": "Absence of integrity checks on stored data."
                },
                {
                    "Assumption": "Lack of anomaly detection systems for cloud activities.",
                    "Role": "System Monitoring",
                    "Condition": "Insufficient monitoring of cloud operations."
                }
            ],
            "Potential Impact": "Faulty data analytics and decision-making processes, leading to operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud",
                "data"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious payload injected into data communication streams.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerability in communication protocols allowing injection.",
                    "Role": "Attacker",
                    "Condition": "Presence of exploitable protocol flaws."
                },
                {
                    "Assumption": "Data streams are not verified for integrity or authenticity.",
                    "Role": "Data Communication Protocols",
                    "Condition": "No integrity checks on transmitted data."
                },
                {
                    "Assumption": "Lack of encryption or usage of weak encryption on data streams.",
                    "Role": "System Communication",
                    "Condition": "Insufficient encryption mechanisms."
                }
            ],
            "Potential Impact": "Data corruption and potential for unauthorized command execution on UAVs.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators or attackers deny unapproved commands issued to UAVs.",
            "Assumptions": [
                {
                    "Assumption": "System does not log all operator commands properly.",
                    "Role": "System Logging",
                    "Condition": "Incomplete or non-existent logging."
                },
                {
                    "Assumption": "Logged data can be altered or deleted without detection.",
                    "Role": "System Security",
                    "Condition": "Logs are modifiable by unauthorized entities."
                },
                {
                    "Assumption": "Lack of non-repudiation controls such as cryptographic signatures.",
                    "Role": "System Design",
                    "Condition": "Absence of integrity controls on logs."
                }
            ],
            "Potential Impact": "Difficulty in forensic analysis and accountability, leading to undetected malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "data"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud service usage records are manipulated to hide unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has the capability to modify log records in the cloud.",
                    "Role": "Attacker",
                    "Condition": "Access to cloud service logging mechanisms."
                },
                {
                    "Assumption": "Cloud services do not employ tamper-evident logging.",
                    "Role": "Cloud Services",
                    "Condition": "Logs can be modified without detection."
                },
                {
                    "Assumption": "Regular audits and reviews of logs are not conducted.",
                    "Role": "System Administration",
                    "Condition": "Lack of routine log analysis."
                }
            ],
            "Potential Impact": "Undetected anomalous activities, hindering incident response and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud",
                "logging"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny sending malicious firmware updates to UAVs.",
            "Assumptions": [
                {
                    "Assumption": "System lacks detailed logging of firmware updates.",
                    "Role": "System Logging",
                    "Condition": "Inadequate logging of update actions."
                },
                {
                    "Assumption": "Validation of firmware source is not enforced.",
                    "Role": "System Security",
                    "Condition": "Unverified firmware sources."
                },
                {
                    "Assumption": "Firmware updates do not use cryptographic signatures.",
                    "Role": "Firmware Update Protocol",
                    "Condition": "Lack of secure update mechanisms."
                }
            ],
            "Potential Impact": "Compromised UAV operations and false attributions, leading to operational failures.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "device",
                "firmware"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Intercepted communication between UAVs and GCS leading to sensitive data exposure.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has the capability to intercept communication channels.",
                    "Role": "Attacker",
                    "Condition": "Means to access transmission mediums."
                },
                {
                    "Assumption": "Communication data is not encrypted or uses weak encryption methods.",
                    "Role": "System Communication",
                    "Condition": "Insufficient data encryption."
                },
                {
                    "Assumption": "Sensitive information is transmitted without adequate protection.",
                    "Role": "System Design",
                    "Condition": "General lack of data security."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data, compromising mission confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud storage breach leading to unauthorized access to mission-critical data.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has identified and exploited a cloud storage vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Access to cloud storage environment."
                },
                {
                    "Assumption": "Data stored in the cloud is not sufficiently encrypted.",
                    "Role": "Data Security",
                    "Condition": "Unencrypted or poorly encrypted cloud data."
                },
                {
                    "Assumption": "Access controls for cloud storage are not stringent.",
                    "Role": "Cloud Services",
                    "Condition": "Weak or misconfigured access controls."
                }
            ],
            "Potential Impact": "Sensitive information leakage, including mission details and proprietary data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud",
                "data"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exfiltration of internal communication details through malware residing on compromised UAVs.",
            "Assumptions": [
                {
                    "Assumption": "UAVs are susceptible to malware due to unpatched firmware vulnerabilities.",
                    "Role": "UAV Systems",
                    "Condition": "Unpatched or insecure firmware."
                },
                {
                    "Assumption": "Malware can transmit captured data back to the attacker.",
                    "Role": "Malware Functionality",
                    "Condition": "Connection to attacker's C2 server."
                },
                {
                    "Assumption": "Internal communications contain unencrypted sensitive information.",
                    "Role": "System Design",
                    "Condition": "Unprotected sensitive data."
                }
            ],
            "Potential Impact": "Compromise of sensitive internal communications, leading to potential operational disclosure.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "malware",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack against GCS, disrupting control over UAVs.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has the resources to execute a high-volume DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Availability of botnet or similar resources."
                },
                {
                    "Assumption": "GCS network infrastructure lacks DDoS mitigation capabilities.",
                    "Role": "Network Security",
                    "Condition": "Absence of DDoS protections."
                },
                {
                    "Assumption": "Critical services do not have redundancy or failover mechanisms.",
                    "Role": "System Design",
                    "Condition": "Lack of service redundancy."
                }
            ],
            "Potential Impact": "Loss of control and communication with UAVs, leading to potential mission failure.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploit-based DoS attack on UAVs by leveraging firmware vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has detailed knowledge of firmware vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Access to firmware vulnerability details."
                },
                {
                    "Assumption": "Firmware updates are not applied promptly.",
                    "Role": "System Maintenance",
                    "Condition": "Delayed or missing updates."
                },
                {
                    "Assumption": "UAVs do not have built-in mechanisms for handling such exploits.",
                    "Role": "UAV Systems",
                    "Condition": "Lack of defensive mechanisms."
                }
            ],
            "Potential Impact": "Operational disruption and loss of UAV functionality.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "firmware",
                "device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud processing services overwhelmed by excessive data input, leading to service unavailability.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can generate a large volume of data input.",
                    "Role": "Attacker",
                    "Condition": "Ability to produce excessive data."
                },
                {
                    "Assumption": "Cloud services lack input throttling and rate limiting mechanisms.",
                    "Role": "Cloud Services",
                    "Condition": "No rate limiting in place."
                },
                {
                    "Assumption": "Critical data services are not adequately isolated from high-volume processes.",
                    "Role": "System Design",
                    "Condition": "Lack of data service segregation."
                }
            ],
            "Potential Impact": "Temporary unavailability of analytical processing, disrupting operational decision-making.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud",
                "service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of Linux kernel vulnerability to gain root access on the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has already compromised a lower-privilege account on GCS.",
                    "Role": "Attacker",
                    "Condition": "Compromised user access."
                },
                {
                    "Assumption": "GCS is running a vulnerable Linux kernel version.",
                    "Role": "System Maintenance",
                    "Condition": "Unpatched Linux kernel."
                },
                {
                    "Assumption": "Privilege separation mechanisms are ineffective or not enforced.",
                    "Role": "System Security",
                    "Condition": "Weak or missing privilege separation."
                }
            ],
            "Potential Impact": "Full control over GCS, allowing malicious actions across the entire drone fleet.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "kernel",
                "device"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
                "id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                "technique_id": "T1014"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Unauthorized modification of cloud service roles to gain higher permissions.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has compromised an account with permission to modify roles.",
                    "Role": "Attacker",
                    "Condition": "Compromised account with role modification permissions."
                },
                {
                    "Assumption": "Cloud services lack audit trails and alerts for role changes.",
                    "Role": "Cloud Security",
                    "Condition": "No audit or alert mechanisms in place."
                },
                {
                    "Assumption": "Role-based access control is not strict or is misconfigured.",
                    "Role": "System Administration",
                    "Condition": "Weak or improper RBAC configuration."
                }
            ],
            "Potential Impact": "Broad unauthorized access to cloud resources, leading to potential data and service manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud",
                "roles"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Firmware exploitation enabling a lower-privilege user on UAV to execute code with admin privileges.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has compromised a lower-privilege access point on the UAV.",
                    "Role": "Attacker",
                    "Condition": "Access to low-privilege user account."
                },
                {
                    "Assumption": "Firmware contains vulnerabilities that can be exploited for privilege escalation.",
                    "Role": "UAV Firmware",
                    "Condition": "Presence of exploitable vulnerabilities."
                },
                {
                    "Assumption": "System does not adequately restrict lower-privilege users from accessing critical firmware functions.",
                    "Role": "System Security",
                    "Condition": "Inadequate access control in firmware."
                }
            ],
            "Potential Impact": "Compromised drone operation integrity, enabling unauthorized control and data access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "26",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker assumes the identity of a legitimate Ground Control Station (GCS) to issue commands to UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication protocol used between the GCS and UAVs.",
                    "Role": "Attacker",
                    "Condition": "Valid if communications are not fully encrypted or authenticated."
                },
                {
                    "Assumption": "The GCS lacks strong authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if strong authentication methods are not implemented."
                },
                {
                    "Assumption": "The attacker has sufficient technical knowledge to use spoofing tools.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker is skilled and has access to advanced tools."
                }
            ],
            "Potential Impact": "The attacker can control UAVs, leading to unauthorized data collection, surveillance, or physical harm.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity impersonation",
                "network traffic manipulation",
                "UAV"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user to access the cloud services of the DaaS platform.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained or can guess the legitimate user's credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if password policies are weak or credentials are exposed."
                },
                {
                    "Assumption": "Multi-factor authentication is not enforced.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the system does not use multi-factor authentication."
                },
                {
                    "Assumption": "The attacker knows the legitimate user\u2019s email or username.",
                    "Role": "Attacker",
                    "Condition": "Valid if such information is easily accessible."
                }
            ],
            "Potential Impact": "The attacker gains unauthorized access to sensitive data stored in the cloud services.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "cloud service access",
                "impersonation",
                "user account compromise"
            ],
            "mitre_technique": {
                "name": "Make and Impersonate Token",
                "description": "Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function.(Citation: LogonUserW function) The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread.\n\nThis behavior is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) in that this refers to creating a new user token instead of stealing or duplicating an existing one.",
                "id": "attack-pattern--8cdeb020-e31e-4f88-a582-f53dcfbda819",
                "technique_id": "T1134.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a sensor or communication module on a UAV to send false data back to the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Sensors and communication modules lack secure identification/authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if these mechanisms are not implemented."
                },
                {
                    "Assumption": "The attacker can intercept and understand the communication protocol.",
                    "Role": "Attacker",
                    "Condition": "Valid if communications are not encrypted."
                },
                {
                    "Assumption": "There is no real-time validation of sensor data at the GCS.",
                    "Role": "System Administrator",
                    "Condition": "Valid if data validation procedures are weak or non-existent."
                }
            ],
            "Potential Impact": "GCS receives and acts on false data, leading to incorrect decision-making and potentially dangerous outcomes.",
            "MITRE ATT&CK Keywords": [
                "sensor spoofing",
                "false data injection",
                "communication module impersonation",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of a UAV to alter its behavior or introduce vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update mechanisms are not secure (e.g., lack of code signing).",
                    "Role": "System Designer",
                    "Condition": "Valid if secure update mechanisms are not implemented."
                },
                {
                    "Assumption": "The attacker has physical or remote access to the UAV.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical security is weak or remote access protocols are compromised."
                },
                {
                    "Assumption": "The UAV does not verify firmware integrity before use.",
                    "Role": "System Designer",
                    "Condition": "Valid if integrity checks are not in place."
                }
            ],
            "Potential Impact": "Modified firmware can cause UAV malfunction, data tampering, or unauthorized control by the attacker.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "embedded systems",
                "code injection",
                "UAV control"
            ],
            "mitre_technique": {
                "name": "Dynamic-link Library Injection",
                "description": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) \n\nAnother variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--f4599aa0-4f85-4a32-80ea-fc39dc965945",
                "technique_id": "T1055.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data being transmitted between the UAV and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted over an unencrypted or poorly encrypted channel.",
                    "Role": "System Designer",
                    "Condition": "Valid if secure communication protocols are not used."
                },
                {
                    "Assumption": "The attacker has the capability to intercept communication signals.",
                    "Role": "Attacker",
                    "Condition": "Valid if communication channels are vulnerable to interception."
                },
                {
                    "Assumption": "There are no integrity checks in place for transmitted data.",
                    "Role": "System Designer",
                    "Condition": "Valid if data integrity is not verified."
                }
            ],
            "Potential Impact": "Interception and modification can lead to data corruption, misinterpretation, or unauthorized commands.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "man-in-the-middle",
                "communication interception",
                "signal manipulation"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a known vulnerability in the Linux-based GCS to alter critical configuration files.",
            "Assumptions": [
                {
                    "Assumption": "The vulnerability is not patched on the GCS.",
                    "Role": "System Administrator",
                    "Condition": "Valid if system updates are not applied promptly."
                },
                {
                    "Assumption": "The attacker has network access to the GCS.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security measures are insufficient."
                },
                {
                    "Assumption": "The GCS does not implement strict file integrity monitoring.",
                    "Role": "System Designer",
                    "Condition": "Valid if integrity monitoring is not enabled."
                }
            ],
            "Potential Impact": "Altered configuration files can lead to system instability, unauthorized access, and incorrect operation of the GCS.",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "configuration tampering",
                "Linux GCS",
                "code execution"
            ],
            "mitre_technique": {
                "name": "Malicious Link",
                "description": "An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).",
                "id": "attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9",
                "technique_id": "T1204.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses stolen credentials to perform actions on the GCS, and the actions cannot be traced back to them.",
            "Assumptions": [
                {
                    "Assumption": "Audit logging and monitoring are not thorough.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logs are minimal or not reviewed regularly."
                },
                {
                    "Assumption": "Multi-factor authentication is not enforced.",
                    "Role": "System Designer",
                    "Condition": "Valid if additional authentication layers are not in place."
                },
                {
                    "Assumption": "The attacker has access to credentials without detection.",
                    "Role": "Attacker",
                    "Condition": "Valid if credential theft methods are effective and undetected."
                }
            ],
            "Potential Impact": "Actions performed by the attacker cannot be attributed, leading to challenges in investigating and mitigating the breach.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "action repudiation",
                "audit log manipulation",
                "identity hiding"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A UAV operator denies issuing particular commands that led to mission failure or data loss.",
            "Assumptions": [
                {
                    "Assumption": "Command logs are either not maintained or can be modified.",
                    "Role": "System Administrator",
                    "Condition": "Valid if command logging is weak or non-existent."
                },
                {
                    "Assumption": "UAVs do not have tamper-proof command logging systems.",
                    "Role": "System Designer",
                    "Condition": "Valid if UAVs lack secure, immutable logging mechanisms."
                },
                {
                    "Assumption": "There is no redundant verification of critical commands.",
                    "Role": "Operator",
                    "Condition": "Valid if command verification processes are lax."
                }
            ],
            "Potential Impact": "Mission data integrity and accountability are compromised, leading to disputes and reduced operational reliability.",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "command denial",
                "audit trail",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates cloud service records to deny responsibility for accessing or downloading sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service does not enforce strict access logging policies.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if access logs are inadequate or easily tampered with."
                },
                {
                    "Assumption": "Tamper-evident logs are not in use.",
                    "Role": "System Designer",
                    "Condition": "Valid if logging mechanisms do not support tamper-evidence."
                },
                {
                    "Assumption": "Access controls are not sufficiently granular to trace actions to individual users.",
                    "Role": "System Administrator",
                    "Condition": "Valid if access control policies are broad."
                }
            ],
            "Potential Impact": "Data breaches go undetected or unresolved, impacting data confidentiality and accountability.",
            "MITRE ATT&CK Keywords": [
                "cloud service access",
                "log manipulation",
                "data breach",
                "accountability denial"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data communication between the UAV and GCS.",
            "Assumptions": [
                {
                    "Assumption": "Data is not encrypted during transmission.",
                    "Role": "System Designer",
                    "Condition": "Valid if encryption protocols are not implemented."
                },
                {
                    "Assumption": "The attacker has the capability to intercept communication signals.",
                    "Role": "Attacker",
                    "Condition": "Valid if communication channels are vulnerable to eavesdropping."
                },
                {
                    "Assumption": "There are no encryption keys or certificates in use.",
                    "Role": "System Designer",
                    "Condition": "Valid if PKI or other encryption frameworks are missing."
                }
            ],
            "Potential Impact": "Sensitive data such as surveillance footage or command instructions can be intercepted and accessed by unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "unencrypted communication",
                "data eavesdropping",
                "UAV-GCS"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a cloud service vulnerability to access stored mission data and personal user information.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service is unpatched and vulnerable.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if regular security updates are not applied."
                },
                {
                    "Assumption": "Access control policies on cloud service do not restrict unauthorized access.",
                    "Role": "System Administrator",
                    "Condition": "Valid if access policies are too permissive."
                },
                {
                    "Assumption": "The attacker has knowledge of the vulnerability and can exploit it.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker is skilled and informed about the vulnerability."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive mission data can lead to intellectual property theft and exposure of operational details.",
            "MITRE ATT&CK Keywords": [
                "cloud service vulnerability",
                "data breach",
                "unauthorized access",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker uses phishing to trick users into divulging credentials, leading to unauthorized access to the DaaS platform.",
            "Assumptions": [
                {
                    "Assumption": "Phishing emails successfully reach their targets.",
                    "Role": "Attacker",
                    "Condition": "Valid if email security measures are insufficient."
                },
                {
                    "Assumption": "Users are not trained to recognize phishing attempts.",
                    "Role": "System Administrator",
                    "Condition": "Valid if user awareness programs are lacking."
                },
                {
                    "Assumption": "Multi-factor authentication is not enforced.",
                    "Role": "System Designer",
                    "Condition": "Valid if additional security layers are not in place."
                }
            ],
            "Potential Impact": "Compromised credentials can lead to unauthorized access to sensitive data, disrupting operational security.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credential theft",
                "social engineering",
                "user compromise"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
                "id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
                "technique_id": "T1598.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the communication channels between the UAV and GCS, disrupting operations.",
            "Assumptions": [
                {
                    "Assumption": "There is no rate limiting on communication channels.",
                    "Role": "System Designer",
                    "Condition": "Valid if rate limiting is not implemented."
                },
                {
                    "Assumption": "The attacker has the capacity to generate high volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has access to a botnet or similar resources."
                },
                {
                    "Assumption": "Communication channels are vulnerable to flooding.",
                    "Role": "System Administrator",
                    "Condition": "Valid if network defenses are insufficient."
                }
            ],
            "Potential Impact": "Communication disruption can lead to loss of control and potential mission failure for UAV operations.",
            "MITRE ATT&CK Keywords": [
                "DoS attack",
                "traffic flooding",
                "communication disruption",
                "UAV-GCS"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a known Linux vulnerability to crash the GCS application, rendering it unusable.",
            "Assumptions": [
                {
                    "Assumption": "The GCS application runs on a Linux system with unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Valid if system updates are neglected."
                },
                {
                    "Assumption": "The attacker has network access to launch the attack.",
                    "Role": "Attacker",
                    "Condition": "Valid if network defenses are insufficient."
                },
                {
                    "Assumption": "There are no automatic recovery mechanisms in place.",
                    "Role": "System Designer",
                    "Condition": "Valid if failover or redundancy is not implemented."
                }
            ],
            "Potential Impact": "The GCS application crash can cause complete loss of control over UAVs, affecting mission-critical operations.",
            "MITRE ATT&CK Keywords": [
                "Linux vulnerability",
                "application crash",
                "service disruption",
                "GCS"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets cloud services with a distributed denial-of-service (DDoS) attack, impacting data access and processing.",
            "Assumptions": [
                {
                    "Assumption": "Cloud infrastructure lacks adequate DDoS protection measures.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if DDoS prevention mechanisms are not in place."
                },
                {
                    "Assumption": "The attacker can coordinate a large-scale DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has access to substantial resources."
                },
                {
                    "Assumption": "There is a high dependency on cloud services for data accessibility.",
                    "Role": "System Designer",
                    "Condition": "Valid if operations heavily rely on cloud services."
                }
            ],
            "Potential Impact": "Disruption of cloud services can hinder data accessibility and operational continuity for critical missions.",
            "MITRE ATT&CK Keywords": [
                "DDoS attack",
                "cloud service disruption",
                "service availability",
                "data access impact"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the UAV firmware to gain higher-level access than intended.",
            "Assumptions": [
                {
                    "Assumption": "The UAV firmware has exploitable vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Valid if security patches are not applied promptly."
                },
                {
                    "Assumption": "The attacker has physical or remote access to the UAV.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical security is weak or remote access is possible."
                },
                {
                    "Assumption": "There are no mitigations in place to limit privilege escalation.",
                    "Role": "System Administrator",
                    "Condition": "Valid if mitigation strategies are not implemented."
                }
            ],
            "Potential Impact": "Elevated privileges can lead to unauthorized control and manipulation of UAV operations.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "firmware vulnerability",
                "unauthorized control",
                "UAV"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft DLL Search) Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence. \n\nAdversaries may perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft 2269637) Adversaries may use this behavior to cause the program to load a malicious DLL. \n\nAdversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL to maintain persistence or privilege escalation. (Citation: Microsoft DLL Redirection) (Citation: Microsoft Manifests) (Citation: Mandiant Search Order)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.\n\nPrograms that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--46944654-fcc1-4f63-9dad-628102376586",
                "technique_id": "T1038"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a vulnerability in the cloud service API to gain administrator access.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service API vulnerabilities are unpatched.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if API patches are not applied."
                },
                {
                    "Assumption": "The attacker has credentials or can bypass authentication.",
                    "Role": "Attacker",
                    "Condition": "Valid if additional security layers are weak or missing."
                },
                {
                    "Assumption": "There are no secondary checks for administrative actions.",
                    "Role": "System Designer",
                    "Condition": "Valid if multi-factor authentication or other checks are not enforced."
                }
            ],
            "Potential Impact": "Administrator access allows the attacker to perform critical actions, impacting system integrity and data security.",
            "MITRE ATT&CK Keywords": [
                "API vulnerability",
                "admin access",
                "cloud service",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability in the GCS to execute code with higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "GCS software has known, exploitable vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Valid if patches are not applied promptly."
                },
                {
                    "Assumption": "The attacker has access to the GCS network.",
                    "Role": "Attacker",
                    "Condition": "Valid if network defenses are insufficient."
                },
                {
                    "Assumption": "There are no runtime protections in the GCS software.",
                    "Role": "System Designer",
                    "Condition": "Valid if runtime protection mechanisms are missing or weak."
                }
            ],
            "Potential Impact": "Code execution with elevated privileges can lead to unauthorized access, data manipulation, and system instability.",
            "MITRE ATT&CK Keywords": [
                "software vulnerability",
                "privilege escalation",
                "code execution",
                "GCS"
            ],
            "mitre_technique": {
                "name": "Print Processors",
                "description": "Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, `spoolsv.exe`, during boot.(Citation: Microsoft Intro Print Processors)\n\nAdversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\\SYSTEM\\\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\\\[Windows architecture: e.g., Windows x64]\\Print Processors\\\\[user defined]\\Driver</code> Registry key that points to the DLL.\n\nFor the malicious print processor to be correctly installed, the payload must be located in the dedicated system print-processor directory, that can be found with the <code>GetPrintProcessorDirectory</code> API call, or referenced via a relative path from this directory.(Citation: Microsoft AddPrintProcessor May 2018) After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.(Citation: ESET PipeMon May 2020)\n\nThe print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.",
                "id": "attack-pattern--2de47683-f398-448f-b947-9abcc3e32fad",
                "technique_id": "T1547.012"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "25",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers spoof the identity of Ground Control Station (GCS) to issue malicious commands to UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the communication channel between GCS and UAVs.",
                    "Role": "Attacker",
                    "Condition": "Valid if communication channel is not adequately encrypted."
                },
                {
                    "Assumption": "The attacker possesses or can generate similar authentication tokens or credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if tokens or credentials are weak or recoverable."
                },
                {
                    "Assumption": "GCS does not have multi-factor authentication mechanisms in place.",
                    "Role": "System Architect",
                    "Condition": "Valid if strong authentication mechanisms are not enforced."
                }
            ],
            "Potential Impact": "Unauthorized disclosure, manipulation, or disruption of drone operations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers spoof cloud service endpoints to trick UAVs or GCS into sending data to malicious servers.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access and alter DNS settings or hijack DNS responses.",
                    "Role": "Attacker",
                    "Condition": "Valid if DNS settings are not securely managed."
                },
                {
                    "Assumption": "UAVs or GCS do not verify the authenticity of cloud service endpoints.",
                    "Role": "Developer",
                    "Condition": "Valid if endpoint verification mechanisms (e.g., SSL/TLS) are inadequate."
                },
                {
                    "Assumption": "There is no network-level protection such as firewalls against suspicious outbound communication.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if the network security infrastructure is weak."
                }
            ],
            "Potential Impact": "Confidential data is disclosed to unauthorized parties, and system operations may be redirected or intercepted.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "network",
                "DNS"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers spoof drones' GPS signals using techniques like GPS spoofing to mislead UAV navigation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can broadcast stronger GPS signals than legitimate satellites.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers can physically position themselves near the drone operating area."
                },
                {
                    "Assumption": "The UAVs rely solely on GPS signals for critical parts of navigation.",
                    "Role": "System Architect",
                    "Condition": "Valid if redundant navigation systems are not in place."
                },
                {
                    "Assumption": "Communication between the UAVs and ground systems does not include position verification mechanisms.",
                    "Role": "Developer",
                    "Condition": "Valid if position verification systems (e.g., ground-based corrections) are not implemented."
                }
            ],
            "Potential Impact": "Drones may be misled in their navigation, leading to operational failure or loss.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "navigation",
                "device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware injection into UAV firmware allowing remote control and data manipulation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can exploit known vulnerabilities in the UAV firmware.",
                    "Role": "Attacker",
                    "Condition": "Valid if firmware updates are not secure or timely."
                },
                {
                    "Assumption": "Firmware updates are not cryptographically signed.",
                    "Role": "Developer",
                    "Condition": "Valid if weak or no security measures are applied to firmware distribution."
                },
                {
                    "Assumption": "There is no integrity check mechanism on the firmware before installation.",
                    "Role": "System Architect",
                    "Condition": "Valid if integrity validation mechanisms are not implemented."
                }
            ],
            "Potential Impact": "Unauthorized remote control of UAV and potential data corruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "malware",
                "device"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampering with data communication streams between UAVs, GCS, and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels between components are not encrypted or use weak encryption.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if strong encryption protocols are not enforced."
                },
                {
                    "Assumption": "The attacker can intercept and modify data traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has access to the network communication paths."
                },
                {
                    "Assumption": "Integrity checks on transmitted data are not implemented.",
                    "Role": "Developer",
                    "Condition": "Valid if data integrity mechanisms (e.g., checksums, digital signatures) are not utilized."
                }
            ],
            "Potential Impact": "Integrity and confidentiality of data are compromised, potentially leading to incorrect drone operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "communication",
                "network",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Physical tampering with UAVs to introduce malicious hardware components or backdoors.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to UAVs is unregulated or insecure.",
                    "Role": "Security Officer",
                    "Condition": "Valid if there are weak or no physical security controls."
                },
                {
                    "Assumption": "The attacker has the technical skills to introduce and conceal malicious hardware.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers are well-resourced and skilled."
                },
                {
                    "Assumption": "Pre-flight checks do not include hardware integrity verification.",
                    "Role": "Operator",
                    "Condition": "Valid if there is lax pre-operation security protocol."
                }
            ],
            "Potential Impact": "UAV operations might include unauthorized activities, and data integrity could be compromised.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "physical",
                "hardware",
                "device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny issuing certain commands to UAVs, leading to disputes regarding drone operations.",
            "Assumptions": [
                {
                    "Assumption": "Command logs are not securely maintained or are easily alterable.",
                    "Role": "System Architect",
                    "Condition": "Valid if no secure logging mechanisms are in place."
                },
                {
                    "Assumption": "There are no strong authentication and non-repudiation mechanisms for command issuance.",
                    "Role": "Developer",
                    "Condition": "Valid if weak authentication systems are used."
                },
                {
                    "Assumption": "Audit trails are not systematically reviewed or protected.",
                    "Role": "Security Officer",
                    "Condition": "Valid if there is weak audit and monitoring system."
                }
            ],
            "Potential Impact": "Operational disputes and lack of accountability in drone operations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "audit",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Tampering with logs in the cloud services to cover tracks of malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Cloud logging mechanisms are vulnerable to tampering.",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if logging systems do not deploy tamper-evident measures."
                },
                {
                    "Assumption": "Privileged access to log files is poorly managed.",
                    "Role": "Security Officer",
                    "Condition": "Valid if privilege management systems are weak."
                },
                {
                    "Assumption": "There is no redundancy or backups for log files.",
                    "Role": "IT Administrator",
                    "Condition": "Valid if backup systems are not implemented."
                }
            ],
            "Potential Impact": "Loss of critical forensic evidence, making incident response and prevention difficult.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "cloud",
                "audit"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Disguising malicious interventions by altering UAV operational logs before a security review.",
            "Assumptions": [
                {
                    "Assumption": "Operational logs from UAVs are not securely transmitted or stored.",
                    "Role": "Developer",
                    "Condition": "Valid if secure transmission protocols are not used."
                },
                {
                    "Assumption": "There are no robust integrity checks for log files.",
                    "Role": "System Architect",
                    "Condition": "Valid if data integrity mechanisms are not applied to logs."
                },
                {
                    "Assumption": "Access controls to log data are inadequate.",
                    "Role": "Security Officer",
                    "Condition": "Valid if access control mechanisms are weak."
                }
            ],
            "Potential Impact": "Misleading operational data could result in erroneous forensic analysis and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "UAV",
                "audit"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exploitation of UAV firmware vulnerabilities to gain access to sensitive data collected.",
            "Assumptions": [
                {
                    "Assumption": "Firmware with exploitable vulnerabilities is in use.",
                    "Role": "Developer",
                    "Condition": "Valid if firmware is outdated or poorly maintained."
                },
                {
                    "Assumption": "No encryption mechanisms on stored data within UAVs.",
                    "Role": "System Architect",
                    "Condition": "Valid if data encryption is not implemented."
                },
                {
                    "Assumption": "Exploited firmware can access and transmit sensitive data.",
                    "Role": "Attacker",
                    "Condition": "Valid if firmware does not restrict unauthorized access."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "firmware",
                "device",
                "data"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of communication between UAVs and GCS to capture sensitive data in transit.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted communication protocols are used.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if encryption standards are not enforced."
                },
                {
                    "Assumption": "The attacker has access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Valid if there are weaknesses in network security."
                },
                {
                    "Assumption": "Sensitive data is transmitted in plain text.",
                    "Role": "Developer",
                    "Condition": "Valid if data encryption practices are not followed."
                }
            ],
            "Potential Impact": "Compromised confidentiality of transmitted data, leading to unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "communication",
                "network",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exploitation of cloud service vulnerabilities to access stored drone operation data.",
            "Assumptions": [
                {
                    "Assumption": "Known vulnerabilities in cloud service remain unpatched.",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if patch management practices are weak."
                },
                {
                    "Assumption": "Cloud service access control mechanisms are poorly configured.",
                    "Role": "Security Officer",
                    "Condition": "Valid if weak access control policies are deployed."
                },
                {
                    "Assumption": "No encryption mechanisms on cloud-stored data.",
                    "Role": "System Architect",
                    "Condition": "Valid if data encryption at rest is not implemented."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive stored data, compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud",
                "data",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--05a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the GCS, disrupting drone operations.",
            "Assumptions": [
                {
                    "Assumption": "The GCS is exposed to the internet without adequate protection.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if external protections like firewall/DDoS mitigation are not implemented."
                },
                {
                    "Assumption": "Adequate network traffic analysis to preempt large-scale attacks is not in place.",
                    "Role": "Security Officer",
                    "Condition": "Valid if monitoring systems for threat detection are weak or nonexistent."
                },
                {
                    "Assumption": "Operators cannot quickly switch to a backup GCS.",
                    "Role": "System Architect",
                    "Condition": "Valid if failover mechanisms are not in place."
                }
            ],
            "Potential Impact": "Disrupted communication and control, leading to potential operational failures.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "GCS",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of vulnerabilities in UAV firmware causing drones to crash or become non-responsive.",
            "Assumptions": [
                {
                    "Assumption": "Firmware with critical vulnerabilities is deployed on UAVs.",
                    "Role": "Developer",
                    "Condition": "Valid if firmware is not kept up-to-date and free of known bugs."
                },
                {
                    "Assumption": "Firmware does not have built-in mechanisms to handle unexpected conditions safely.",
                    "Role": "System Architect",
                    "Condition": "Valid if UAVs lack fault tolerance mechanisms."
                },
                {
                    "Assumption": "Attacker can knowingly exploit these vulnerabilities remotely.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers can communicate with UAVs."
                }
            ],
            "Potential Impact": "Drones may become non-operational, leading to mission failure and safety concerns.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "firmware",
                "UAV",
                "crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud service disruption results in the inability to store or process data, impacting real-time operations.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are vulnerable to attacks affecting availability.",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if cloud infrastructure security is weak."
                },
                {
                    "Assumption": "No redundancy and failover mechanisms exist for cloud services.",
                    "Role": "System Architect",
                    "Condition": "Valid if resilient cloud architecture is not implemented."
                },
                {
                    "Assumption": "UAV and GCS heavily depend on real-time cloud integrations.",
                    "Role": "Developer",
                    "Condition": "Valid if there are no alternative mechanisms for critical operations."
                }
            ],
            "Potential Impact": "Disruption in real-time data processing and storage, hindering operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud",
                "service disruption",
                "data processing"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker exploits vulnerabilities in the GCS software to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "GCS software contains exploitable vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "Valid if software vulnerabilities are not patched."
                },
                {
                    "Assumption": "Privilege escalation controls are weak or nonexistent.",
                    "Role": "System Architect",
                    "Condition": "Valid if user roles and privileges are not carefully managed and enforced."
                },
                {
                    "Assumption": "Administrative activities are not adequately monitored.",
                    "Role": "Security Officer",
                    "Condition": "Valid if security logging and monitoring are weak."
                }
            ],
            "Potential Impact": "Attacker gains control over essential system functions, compromising security and operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "GCS",
                "software",
                "admin privileges"
            ],
            "mitre_technique": {
                "name": "Bypass User Account Control",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
                "id": "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073",
                "technique_id": "T1548.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploit cloud service configurations to gain unauthorized higher-level access.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigurations or vulnerabilities exist within cloud environments.",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if cloud configuration audits are not conducted regularly."
                },
                {
                    "Assumption": "Access is not restricted to the minimum required privileges.",
                    "Role": "Security Officer",
                    "Condition": "Valid if principle of least privilege is not applied."
                },
                {
                    "Assumption": "Intrusion detection and prevention systems (IDPS) do not monitor cloud environment activities.",
                    "Role": "IT Administrator",
                    "Condition": "Valid if IDPS are not implemented for cloud infrastructure."
                }
            ],
            "Potential Impact": "Unauthenticated users gain access to sensitive areas and potentially control operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud",
                "configuration",
                "access control"
            ],
            "mitre_technique": {
                "name": "Cloud Groups",
                "description": "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation) In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)\n\nAdversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",
                "id": "attack-pattern--16e94db9-b5b1-4cd0-b851-f38fbd0a70f2",
                "technique_id": "T1069.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker exploits firmware vulnerabilities to gain root access on UAVs.",
            "Assumptions": [
                {
                    "Assumption": "UAV firmware has unpatched root-level vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "Valid if known vulnerabilities are not addressed swiftly."
                },
                {
                    "Assumption": "Root privilege control mechanisms are not implemented on UAVs.",
                    "Role": "System Architect",
                    "Condition": "Valid if there are no protections against root access exploits."
                },
                {
                    "Assumption": "Firmware does not have integrity checks before execution.",
                    "Role": "Developer",
                    "Condition": "Valid if integrity validation of firmware is not performed."
                }
            ],
            "Potential Impact": "Complete takeover of UAV systems, allowing malicious actors to alter operations and data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "root access",
                "UAV"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "27",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker might spoof a legitimate operator to take control of a UAV, issuing malicious commands.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication protocol details used between the GCS and UAV.",
                    "Role": "Attacker",
                    "Condition": "The details are either publicly available or obtained through reconnaissance."
                },
                {
                    "Assumption": "The attacker has the ability to intercept and modify data packets between the GCS and UAV.",
                    "Role": "Attacker",
                    "Condition": "The attacker is on the same network or can insert themselves in the communication path."
                },
                {
                    "Assumption": "The attacker can generate or capture valid authentication tokens used by legitimate operators.",
                    "Role": "Attacker",
                    "Condition": "There is a vulnerability in the token generation process or tokens are not adequately protected."
                }
            ],
            "Potential Impact": "Compromising the drone's command control, leading to unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "injection",
                "drone",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker might use a fake GCS to collect sensitive data from UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can replicate the appearance and functionalities of the legitimate GCS.",
                    "Role": "Attacker",
                    "Condition": "The GCS interface and functionalities are not securely designed or are publicly documented."
                },
                {
                    "Assumption": "The UAVs do not have a robust method to authenticate the GCS.",
                    "Role": "System Design",
                    "Condition": "There is no mutual authentication between the UAVs and GCS or it is improperly implemented."
                },
                {
                    "Assumption": "Operators may not verify the GCS authenticity before connecting UAVs.",
                    "Role": "Operator",
                    "Condition": "The operators rely solely on interface appearance for authentication."
                }
            ],
            "Potential Impact": "Unauthorized data collection and potential sensitive information disclosure.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "phishing",
                "data collection",
                "cloud"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker might impersonate legitimate cloud services to intercept data meant for storage or processing.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can create a convincing cloud service interface or API.",
                    "Role": "Attacker",
                    "Condition": "The cloud service API and interfaces are poorly secured or the attacker has insider knowledge."
                },
                {
                    "Assumption": "The UAVs and GCS do not sufficiently validate the cloud service domains or SSL certificates.",
                    "Role": "System Design",
                    "Condition": "There is no proper validation of SSL certificates or the domain names for the cloud services."
                },
                {
                    "Assumption": "There is a lack of DNSSEC or similar measures to prevent domain spoofing.",
                    "Role": "Network Administrator",
                    "Condition": "DNS security extensions are either not implemented or inadequately configured."
                }
            ],
            "Potential Impact": "Interception and unauthorized disclosure of critical drone operation data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "data theft",
                "man-in-the-middle",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify the firmware of UAVs to control their behavior maliciously.",
            "Assumptions": [
                {
                    "Assumption": "There is an existing vulnerability in the firmware update mechanism.",
                    "Role": "System Designer",
                    "Condition": "Firmware update mechanisms are not securely designed or implemented."
                },
                {
                    "Assumption": "The attacker has physical or remote access to the UAVs during the firmware update process.",
                    "Role": "Attacker",
                    "Condition": "Security controls to restrict firmware update access are weak."
                },
                {
                    "Assumption": "The attacker can inject malicious code without detection.",
                    "Role": "Attacker",
                    "Condition": "There is a lack of integrity checks and code signing for firmware."
                }
            ],
            "Potential Impact": "Loss of control over UAVs, leading to potential damage or unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "malware",
                "drone control",
                "injection"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the data transmitted between UAVs and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept the communication channel between UAVs and GCS.",
                    "Role": "Attacker",
                    "Condition": "The communication channel is not encrypted or inadequately protected."
                },
                {
                    "Assumption": "The attacker has the technical skills to alter the data packets during transmission.",
                    "Role": "Attacker",
                    "Condition": "The attacker can bypass any existing security measures within the communication protocols."
                },
                {
                    "Assumption": "There are insufficient data integrity checks during transmission.",
                    "Role": "System Designer",
                    "Condition": "Data packets do not go through integrity verification layers."
                }
            ],
            "Potential Impact": "Tampered data could lead to misinformed decisions and compromised missions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "MITM",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify the data stored on cloud services, altering the analytics results.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has credentials to access the cloud storage.",
                    "Role": "Attacker",
                    "Condition": "There are stolen or weak credentials facilitating access to the cloud."
                },
                {
                    "Assumption": "Access controls on cloud storage are not properly enforced or are lax.",
                    "Role": "System Administrator",
                    "Condition": "Permissions and access controls are improperly configured."
                },
                {
                    "Assumption": "There is no robust logging and monitoring of activities in cloud storage.",
                    "Role": "Security Analyst",
                    "Condition": "Cloud activity logs are not enabled or regularly reviewed."
                }
            ],
            "Potential Impact": "Corrupted analytics data leading to incorrect interpretations and decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud storage",
                "data corruption",
                "information manipulation",
                "analytics"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could delete logs of their activities to avoid detection.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain access to logging systems on UAVs, GCS, or cloud services.",
                    "Role": "Attacker",
                    "Condition": "Logging systems are not protected by robust access controls."
                },
                {
                    "Assumption": "Logs are not being adequately backed up or encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Backup processes for logs are either unreliable or insecure."
                },
                {
                    "Assumption": "There is no effective auditing mechanism to detect log tampering.",
                    "Role": "Security Auditor",
                    "Condition": "Auditing processes are insufficient to identify and alert on log modifications."
                }
            ],
            "Potential Impact": "Failure to detect and investigate malicious activities due to a lack of evidence.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log deletion",
                "audit trail",
                "logging",
                "forensics"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators could deny issuing certain commands if log data is insufficient or tampered with.",
            "Assumptions": [
                {
                    "Assumption": "There are gaps or weaknesses in the logging system capturing command inputs.",
                    "Role": "System Designer",
                    "Condition": "Logging system does not capture sufficient details or is easily tampered with."
                },
                {
                    "Assumption": "Logs are not tamper-evident or securely stored.",
                    "Role": "System Administrator",
                    "Condition": "Logs could be modified or deleted without detection."
                },
                {
                    "Assumption": "There are no effective policies for log review and verification.",
                    "Role": "Security Policy Maker",
                    "Condition": "Log review protocols are either non-existent or inadequate."
                }
            ],
            "Potential Impact": "Difficulty in attributing actions and accountability, leading to potential conflicts and security lapses.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command audit",
                "logging",
                "accountability",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could alter records of data transmission to make it appear as though sensitive information was never sent.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to transmission records or related databases.",
                    "Role": "Attacker",
                    "Condition": "Access controls are weak or compromised."
                },
                {
                    "Assumption": "There is no version control or record validation for data transmission logs.",
                    "Role": "System Administrator",
                    "Condition": "Record management processes do not include validation or backup mechanisms."
                },
                {
                    "Assumption": "Security monitoring is insufficient to detect changes in transmission records.",
                    "Role": "Security Analyst",
                    "Condition": "Monitoring capabilities are inadequate to detect unauthorized changes."
                }
            ],
            "Potential Impact": "Loss of data integrity and difficulty verifying historical data transmissions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data transmission",
                "log alteration",
                "data integrity",
                "tampering"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could eavesdrop on unencrypted communications between UAVs and the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels are not encrypted or use weak encryption methods.",
                    "Role": "System Designer",
                    "Condition": "Encryption protocols are either outdated or improperly implemented."
                },
                {
                    "Assumption": "The attacker has access to the communication network.",
                    "Role": "Attacker",
                    "Condition": "The network is not segmented or lacks adequate access controls."
                },
                {
                    "Assumption": "There is no active network monitoring for unusual activities.",
                    "Role": "Security Analyst",
                    "Condition": "Network monitoring tools are either not in place or not effectively utilized."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "eavesdropping",
                "information disclosure",
                "network",
                "communication",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored in the cloud could be exfiltrated by an unauthorized user.",
            "Assumptions": [
                {
                    "Assumption": "Access controls to cloud storage are inadequately configured or compromised.",
                    "Role": "System Administrator",
                    "Condition": "Permissions and roles are not properly managed or monitored."
                },
                {
                    "Assumption": "Data encryption at rest is either not used or implemented poorly.",
                    "Role": "System Designer",
                    "Condition": "Data stored in the cloud is not encrypted or encryption keys are easily accessible."
                },
                {
                    "Assumption": "There are vulnerabilities in the cloud service platform utilized by the DaaS.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Known vulnerabilities are not patched or mitigated timely."
                }
            ],
            "Potential Impact": "Unauthorized user gains access to and exfiltrates sensitive drone operation data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "data exfiltration",
                "unauthorized access",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "UAVs could inadvertently transmit sensitive data to unrecoverable or unauthorized endpoints.",
            "Assumptions": [
                {
                    "Assumption": "UAVs do not validate endpoint authenticity before transmission.",
                    "Role": "System Designer",
                    "Condition": "Endpoint validation mechanisms are either absent or poorly implemented."
                },
                {
                    "Assumption": "There is a logical flaw in the transmission protocol allowing data leaks.",
                    "Role": "System Designer",
                    "Condition": "Protocols are not thoroughly tested for secure data transmission."
                },
                {
                    "Assumption": "Operators might mistakenly configure UAVs to connect to unintended endpoints.",
                    "Role": "Operator",
                    "Condition": "Configuration interfaces are not user-friendly or have ambiguous settings."
                }
            ],
            "Potential Impact": "Sensitive data sent to unauthorized or malicious endpoints.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data transmission",
                "endpoint validation",
                "communication",
                "misconfiguration"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could overwhelm the GCS with traffic, making it unavailable for legitimate UAV operations.",
            "Assumptions": [
                {
                    "Assumption": "The GCS is accessible over the internet without adequate DDoS protection.",
                    "Role": "System Administrator",
                    "Condition": "DDoS mitigation strategies are not in place or poorly executed."
                },
                {
                    "Assumption": "The attack can generate enough traffic to exhaust GCS resources.",
                    "Role": "Attacker",
                    "Condition": "The attacker has sufficient bandwidth and resource capacity."
                },
                {
                    "Assumption": "Monitoring and response mechanisms for traffic anomalies are inadequate.",
                    "Role": "Security Analyst",
                    "Condition": "There is no effective traffic monitoring solution in place."
                }
            ],
            "Potential Impact": "Legitimate UAV operations are disrupted, leading to mission failure or delays.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network traffic",
                "resource exhaustion",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious firmware updates could disable key functionalities of UAVs.",
            "Assumptions": [
                {
                    "Assumption": "There is no secure validation of firmware integrity before updates.",
                    "Role": "System Designer",
                    "Condition": "Firmware updates are accepted without thorough integrity checks."
                },
                {
                    "Assumption": "Attackers have access to the firmware update delivery mechanism.",
                    "Role": "Attacker",
                    "Condition": "The update mechanism is insufficiently secured."
                },
                {
                    "Assumption": "System lacks rollback mechanisms for faulty firmware.",
                    "Role": "System Designer/Administrator",
                    "Condition": "There are no safeties for reverting to a known good firmware state."
                }
            ],
            "Potential Impact": "UAVs are unable to perform their tasks, leading to service disruption.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "firmware",
                "update",
                "availability",
                "drone"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could attack the cloud services to make data and coordination functionalities unavailable.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service infrastructure is vulnerable to resource exhaustion.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Infrastructure lacks scalability or protection against resource exhaustion."
                },
                {
                    "Assumption": "Attacker can generate or simulate enough demand to exhaust cloud resources.",
                    "Role": "Attacker",
                    "Condition": "The attacker has resources capable of generating significant load."
                },
                {
                    "Assumption": "There is a lack of redundancy and failover mechanisms in the cloud service.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Cloud architecture is not resilient to such attacks."
                }
            ],
            "Potential Impact": "Loss of access to stored data and coordination services in the cloud.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud",
                "resource exhaustion",
                "data availability",
                "service interruption"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker with limited access could exploit a firmware vulnerability to gain full control over the UAV.",
            "Assumptions": [
                {
                    "Assumption": "There exists a vulnerability in the UAV firmware that is exploitable.",
                    "Role": "System Designer",
                    "Condition": "The vulnerability has not been patched or mitigated."
                },
                {
                    "Assumption": "The attacker has enough access to leverage this vulnerability.",
                    "Role": "Attacker",
                    "Condition": "The attacker can interact with the UAV\u2019s firmware."
                },
                {
                    "Assumption": "Security measures for privilege escalation are either poorly implemented or absent.",
                    "Role": "System Designer",
                    "Condition": "Privilege escalation controls are insufficient."
                }
            ],
            "Potential Impact": "Unauthorized commands can be executed, compromising UAV operations.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "firmware vulnerability",
                "drone control",
                "access control",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a vulnerability in the GCS software to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "There is a software vulnerability in the GCS that can be exploited.",
                    "Role": "System Designer",
                    "Condition": "Known or zero-day vulnerability has not been addressed."
                },
                {
                    "Assumption": "The attacker has access to the GCS network or system.",
                    "Role": "Attacker",
                    "Condition": "Insufficient network segmentation or security measures."
                },
                {
                    "Assumption": "Proper logging and monitoring on GCS is lacking.",
                    "Role": "Security Analyst",
                    "Condition": "The GCS is not adequately monitored for unusual or unauthorized activities."
                }
            ],
            "Potential Impact": "Attackers gain unauthorized administrative access to the GCS, leading to full system compromise.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "GCS",
                "software vulnerability",
                "administrative access",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could use a cloud service vulnerability to escalate their privileges within the DaaS platform.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to a user account on the cloud service.",
                    "Role": "Attacker",
                    "Condition": "Compromised or weak user credentials."
                },
                {
                    "Assumption": "There is a cloud service vulnerability allowing privilege escalation.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Existent and exploitable cloud service vulnerability."
                },
                {
                    "Assumption": "There is insufficient monitoring of privilege actions and changes.",
                    "Role": "Cloud Administrator",
                    "Condition": "No effective monitoring or alert mechanisms for privilege changes."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive drone operation data and control functions.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "cloud service",
                "unauthorized access",
                "data control",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "28",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate drone control signal to take over UAV operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication frequency used by the UAVs.",
                    "Role": "Attacker",
                    "Condition": "Valid if the communication frequency is publicly known or can be intercepted."
                },
                {
                    "Assumption": "The attacker can generate signals that mimic the control signals of the legitimate GCS.",
                    "Role": "Attacker",
                    "Condition": "Valid if the communication protocol is not adequately secured."
                },
                {
                    "Assumption": "The UAVs do not authenticate control signals.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if the current system lacks robust signal authentication mechanisms."
                }
            ],
            "Potential Impact": "Compromise of UAV control leads to unauthorized missions and data collection.",
            "MITRE ATT&CK Keywords": [
                "control signal",
                "impersonation",
                "network intrusion"
            ],
            "mitre_technique": {
                "name": "Protocol Impersonation",
                "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",
                "id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
                "technique_id": "T1001.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Fake Ground Control Station (GCS) setup by adversaries to capture UAV data",
            "Assumptions": [
                {
                    "Assumption": "The adversary sets up a GCS with similar hardware and software characteristics as the legitimate GCS.",
                    "Role": "Attacker",
                    "Condition": "Valid if adversaries have knowledge of GCS specifications."
                },
                {
                    "Assumption": "UAVs do not sufficiently verify the identity of the GCS they connect to.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if mutual authentication is not enforced between UAVs and GCS."
                },
                {
                    "Assumption": "Adversaries can place the fake GCS in proximity to the operating UAVs.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical security measures are insufficient."
                }
            ],
            "Potential Impact": "Unauthorized data capture and control over UAV operations.",
            "MITRE ATT&CK Keywords": [
                "fake GCS",
                "data capture",
                "impersonation",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "Protocol Impersonation",
                "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",
                "id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
                "technique_id": "T1001.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses stolen credentials to access DaaS cloud services as an authorized user.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid user credentials through phishing or other means.",
                    "Role": "Attacker",
                    "Condition": "Valid if users fall prey to phishing or credential theft campaigns."
                },
                {
                    "Assumption": "Cloud services do not have multi-factor authentication (MFA) enabled.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if MFA is not enforced for cloud service access."
                },
                {
                    "Assumption": "The attacker is able to bypass existing detection mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Valid if security monitoring is inadequate or absent."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and cloud resources.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "cloud services",
                "impersonation",
                "access control"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware on a UAV to alter its behavior during missions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the UAV's firmware update process.",
                    "Role": "Attacker",
                    "Condition": "Valid if the update process is not adequately secured."
                },
                {
                    "Assumption": "The attacker can introduce malicious code into the firmware.",
                    "Role": "Attacker",
                    "Condition": "Valid if firmware integrity checks are absent or inadequate."
                },
                {
                    "Assumption": "The UAV does not validate the integrity of the firmware prior to execution.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if there are no mechanisms to check firmware integrity."
                }
            ],
            "Potential Impact": "UAVs perform unauthorized missions, collect false data, or become unresponsive.",
            "MITRE ATT&CK Keywords": [
                "firmware modification",
                "code injection",
                "UAV",
                "embedded systems"
            ],
            "mitre_technique": {
                "name": "Reflective Code Loading",
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).\n\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",
                "id": "attack-pattern--4933e63b-9b77-476e-ab29-761bc5b7d15a",
                "technique_id": "T1620"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Compromised GCS issues unauthorized commands to UAVs resulting in incorrect mission execution.",
            "Assumptions": [
                {
                    "Assumption": "The GCS is compromised through a vulnerability or direct access.",
                    "Role": "Attacker",
                    "Condition": "Valid if the GCS has known vulnerabilities or is not physically secure."
                },
                {
                    "Assumption": "UAVs trust commands from the compromised GCS without additional validation.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if there are no integrity checks or authentication of commands."
                },
                {
                    "Assumption": "The communication channel between the GCS and UAVs is not end-to-end encrypted.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if encryption is not used or is weak."
                }
            ],
            "Potential Impact": "Missions are conducted based on false or malicious commands, risking mission failure and data integrity.",
            "MITRE ATT&CK Keywords": [
                "GCS compromise",
                "command injection",
                "tampering",
                "mission execution"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Intercepted communication channels allow attackers to alter data in transit between UAVs and the cloud service.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the data transmission channels.",
                    "Role": "Attacker",
                    "Condition": "Valid if secure communication protocols are not enforced."
                },
                {
                    "Assumption": "Data transmitted is not encrypted or encrypted using weak algorithms.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if encryption standards are subpar or not used at all."
                },
                {
                    "Assumption": "The system does not verify the integrity of received data before storage or use.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if integrity checks are absent."
                }
            ],
            "Potential Impact": "Altered data leads to incorrect analytics and decisions based on falsified information.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "data integrity",
                "communication interception",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A UAV operator denies initiating commands leading to unauthorized missions.",
            "Assumptions": [
                {
                    "Assumption": "User actions are not logged or logs are not tamper-proof.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if logging mechanisms are weak or logs are not securely stored."
                },
                {
                    "Assumption": "Authentication mechanisms do not provide non-repudiation.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if cryptographic techniques for non-repudiation are not used."
                },
                {
                    "Assumption": "Logs do not capture sufficient detail to trace actions back to a specific user.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if logs are insufficiently detailed."
                }
            ],
            "Potential Impact": "Inability to hold operators accountable for their actions, leading to potential misuse and lack of traceability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "non-repudiation",
                "UAV operator"
            ],
            "mitre_technique": {
                "name": "Private Keys",
                "description": "Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. (Citation: Wikipedia Public Key Crypto)\n\nAdversaries may gather private keys from compromised systems for use in authenticating to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. Adversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:\\Users\\(username)\\.ssh\\</code> on Windows.\n\nPrivate keys should require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates. (Citation: Kaspersky Careto) (Citation: Palo Alto Prince of Persia)",
                "id": "attack-pattern--56ff457d-5e39-492b-974c-dfd2b8603ffe",
                "technique_id": "T1145"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud service user denies uploading or modifying a critical data set.",
            "Assumptions": [
                {
                    "Assumption": "Data modifications are not logged or securely stored.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if audit trails are not maintained."
                },
                {
                    "Assumption": "Users access cloud services without unique identifiers.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if unique IDs are not enforced for user actions."
                },
                {
                    "Assumption": "Modifications are not cryptographically signed to provide traceability.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if data integrity and identity verification methods are weak or absent."
                }
            ],
            "Potential Impact": "Disputes over data integrity and authenticity, undermining confidence in the cloud service.",
            "MITRE ATT&CK Keywords": [
                "cloud service",
                "data modification",
                "repudiation",
                "audit logs"
            ],
            "mitre_technique": {
                "name": "Cloud Service Discovery",
                "description": "An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs.\n\nAdversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)\n\nFor example, Stormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)\n\nAdversaries may use the information gained to shape follow-on behaviors, such as targeting data or credentials from enumerated services or evading identified defenses through [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001) or [Disable or Modify Cloud Logs](https://attack.mitre.org/techniques/T1562/008).",
                "id": "attack-pattern--e24fcba8-2557-4442-a139-1ee2f2e784db",
                "technique_id": "T1526"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An adversary successfully executes a session hijack but denies involvement.",
            "Assumptions": [
                {
                    "Assumption": "Session management mechanisms are weak or compromised.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if session tokens are easily predictable or stolen."
                },
                {
                    "Assumption": "There is no logging of session activity or it is inadequately monitored.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if session activity is not recorded or monitored."
                },
                {
                    "Assumption": "Session hijacking can occur without triggering alerts.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if there are no anomaly detection mechanisms in place."
                }
            ],
            "Potential Impact": "Unauthorized access goes untraced, leading to potential data breaches and malicious activities.",
            "MITRE ATT&CK Keywords": [
                "session hijacking",
                "repudiation",
                "access control",
                "logging"
            ],
            "mitre_technique": {
                "name": "Browser Session Hijacking",
                "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
                "id": "attack-pattern--544b0346-29ad-41e1-a808-501bb4193f47",
                "technique_id": "T1185"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised UAV discloses collected sensitive data to unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "The UAV collects and transmits sensitive data.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if the UAV's mission involves sensitive information collection."
                },
                {
                    "Assumption": "Data encryption is either absent or weak.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if data is not encrypted or uses weak encryption algorithms."
                },
                {
                    "Assumption": "Unauthorized access to the UAV is possible.",
                    "Role": "Attacker",
                    "Condition": "Valid if UAV security is circumvented."
                }
            ],
            "Potential Impact": "Unauthorized parties gain access to sensitive data, leading to espionage or privacy violations.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "unauthorized access",
                "UAV",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data stored in the cloud is accessed and exfiltrated by an unauthorized user.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage security is compromised.",
                    "Role": "Attacker",
                    "Condition": "Valid if cloud services are breached through vulnerabilities."
                },
                {
                    "Assumption": "User accounts lack sufficient access control mechanisms.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if there are no role-based access controls implemented."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if data encryption is not enforced for stored data."
                }
            ],
            "Potential Impact": "Sensitive data leakage leading to potential industrial espionage or data misuse.",
            "MITRE ATT&CK Keywords": [
                "cloud storage",
                "data exfiltration",
                "unauthorized access",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of unencrypted communication between UAVs and the GCS reveals mission data.",
            "Assumptions": [
                {
                    "Assumption": "The communication between UAVs and the GCS is not encrypted.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if encryption protocols are not used."
                },
                {
                    "Assumption": "Sensitive mission data is transmitted over this communication channel.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if sensitive information is included in unprotected transmissions."
                },
                {
                    "Assumption": "Attackers have the capability to intercept these communications.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers can access the transmission mediums."
                }
            ],
            "Potential Impact": "Mission data disclosure compromises operational security and leads to strategic failures.",
            "MITRE ATT&CK Keywords": [
                "unprotected communication",
                "data interception",
                "GCS",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the cloud service disrupts data processing and storage.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service is accessible over the internet.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid for any internet-exposed service."
                },
                {
                    "Assumption": "Attackers can mobilize botnets or use other means to launch a DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers have access to botnets or sufficient resources."
                },
                {
                    "Assumption": "The cloud service lacks effective DDoS mitigation strategies.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if DDoS protection measures are absent or insufficient."
                }
            ],
            "Potential Impact": "Service outages hinder data processing and availability, impacting operational efficiency.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "cloud service",
                "service disruption",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a firmware vulnerability to crash UAV systems during missions.",
            "Assumptions": [
                {
                    "Assumption": "UAV firmware has known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if specific firmware vulnerabilities are published."
                },
                {
                    "Assumption": "Attackers can remotely access the UAV firmware update mechanism.",
                    "Role": "Attacker",
                    "Condition": "Valid if remote access to the update process is possible."
                },
                {
                    "Assumption": "UAVs do not have failover or automatic recovery mechanisms.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if the system lacks resilience to firmware crashes."
                }
            ],
            "Potential Impact": "Mission-critical UAVs become inoperable, affecting mission success and operational continuity.",
            "MITRE ATT&CK Keywords": [
                "firmware vulnerability",
                "crash",
                "UAV",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the communication channel with redundant data, causing communication delays between UAVs and GCS.",
            "Assumptions": [
                {
                    "Assumption": "The communication channel is not robust against high traffic loads.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if the channel cannot handle excessive traffic."
                },
                {
                    "Assumption": "Attackers have the capability to generate high volumes of redundant data.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers can use bots or automated tools for data flooding."
                },
                {
                    "Assumption": "There are no rate-limiting or filtering mechanisms in place.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if rate-limiting or traffic filtering is not implemented."
                }
            ],
            "Potential Impact": "Delayed or failed communications lead to operational inefficiencies and potential mission failure.",
            "MITRE ATT&CK Keywords": [
                "traffic flooding",
                "communication delay",
                "GCS",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a buffer overflow exploit to gain root access to the UAV's operating system.",
            "Assumptions": [
                {
                    "Assumption": "The UAV operating system has buffer overflow vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerability research has identified such flaws."
                },
                {
                    "Assumption": "The attacker has sufficient knowledge to craft a buffer overflow exploit.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker possesses advanced technical skills."
                },
                {
                    "Assumption": "There are no or insufficient mitigations for buffer overflow attacks.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if the system lacks appropriate security controls like DEP or ASLR."
                }
            ],
            "Potential Impact": "Root access allows the attacker to fully control the UAV, leading to unauthorized operations and data extraction.",
            "MITRE ATT&CK Keywords": [
                "buffer overflow",
                "root access",
                "UAV",
                "elevation of privilege"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits deserialization vulnerabilities in the cloud service to execute arbitrary code.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service uses serialization and deserialization of objects.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if this is a common practice within the service."
                },
                {
                    "Assumption": "Attackers can inject malicious payloads through serialized data.",
                    "Role": "Attacker",
                    "Condition": "Valid if input validation is insufficient."
                },
                {
                    "Assumption": "There are no or weak protections against deserialization attacks.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if the system lacks deserialization safeguards like type filtering or sandboxing."
                }
            ],
            "Potential Impact": "Execution of arbitrary code within the cloud service environment potentially compromises entire systems and data.",
            "MITRE ATT&CK Keywords": [
                "deserialization",
                "arbitrary code execution",
                "cloud service",
                "elevation of privilege"
            ],
            "mitre_technique": {
                "name": "Exploitation for Client Execution",
                "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
                "id": "attack-pattern--be2dcee9-a7a7-4e38-afd6-21b31ecc3d63",
                "technique_id": "T1203"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a compromised user account to escalate privileges within the cloud service.",
            "Assumptions": [
                {
                    "Assumption": "User account credentials are compromised.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers have successfully phished or stolen the credentials."
                },
                {
                    "Assumption": "The cloud service allows for privilege escalation through misconfigured roles or policies.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if role-based access controls are not properly configured."
                },
                {
                    "Assumption": "There are no or weak auditing mechanisms for detecting abnormal privilege escalations.",
                    "Role": "DaaS System Designer",
                    "Condition": "Valid if security logging and monitoring are insufficient."
                }
            ],
            "Potential Impact": "Elevated privileges enable attackers to access sensitive data and critical functions, causing extensive damage.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "cloud service",
                "user account",
                "elevation of privilege"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "29",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of the Ground Control Station (GCS) and sends bogus commands to the UAVs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the same network as the GCS",
                    "Role": "Attacker",
                    "Condition": "Network Access"
                },
                {
                    "Assumption": "The attacker knows communication protocols used",
                    "Role": "Attacker",
                    "Condition": "Knowledge of Protocols"
                },
                {
                    "Assumption": "The GCS does not use strong authentication methods",
                    "Role": "GCS",
                    "Condition": "Weak Authentication"
                }
            ],
            "Potential Impact": "Unauthorized control of UAVs leading to potential misuse.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network",
                "Command and Control",
                "Identity Theft"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake cloud service site that mimics the legitimate DaaS platform to harvest operator credentials.",
            "Assumptions": [
                {
                    "Assumption": "Operators access the cloud service via potentially insecure methods",
                    "Role": "Operators",
                    "Condition": "Insecure Access"
                },
                {
                    "Assumption": "The attacker can create a visually convincing fake site",
                    "Role": "Attacker",
                    "Condition": "Capability to Mimic"
                },
                {
                    "Assumption": "Operators do not use two-factor authentication",
                    "Role": "Cloud Service",
                    "Condition": "Lack of Two-Factor Authentication"
                }
            ],
            "Potential Impact": "Credential theft giving unauthorized access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Phishing",
                "Credential Harvesting",
                "Identity Theft",
                "Cloud"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a job recruitment software fa\u00e7ade to trick employees into installing backdoor malware, similar to FalseFont.",
            "Assumptions": [
                {
                    "Assumption": "Employees are unaware of the malicious nature of the software",
                    "Role": "Employees",
                    "Condition": "Lack of Cybersecurity Awareness"
                },
                {
                    "Assumption": "The backdoor malware can bypass basic antivirus protections",
                    "Role": "Malware",
                    "Condition": "Evasion Capabilities"
                },
                {
                    "Assumption": "Malicious job software is convincingly disguised",
                    "Role": "Attacker",
                    "Condition": "Convincing Disguise"
                }
            ],
            "Potential Impact": "Unauthorized access and potential control over the DaaS platform.",
            "MITRE ATT&CK Keywords": [
                "Malware",
                "Backdoor",
                "Social Engineering",
                "Credential Theft"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits vulnerabilities in the UAV firmware to modify its behavior.",
            "Assumptions": [
                {
                    "Assumption": "The firmware has known vulnerabilities that are not patched",
                    "Role": "UAV",
                    "Condition": "Unpatched Vulnerabilities"
                },
                {
                    "Assumption": "Attacker has the technical expertise to exploit the vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Technical Expertise"
                },
                {
                    "Assumption": "Firmware update processes are not adequately secured",
                    "Role": "Firmware Update System",
                    "Condition": "Insecure Update Mechanisms"
                }
            ],
            "Potential Impact": "Tampering with UAV functionality, resulting in mission failures.",
            "MITRE ATT&CK Keywords": [
                "Firmware",
                "Tampering",
                "Vulnerability Exploitation",
                "Device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies communication between the GCS and the UAVs, altering command data.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not fully encrypted",
                    "Role": "Communication System",
                    "Condition": "Lack of Encryption"
                },
                {
                    "Assumption": "The attacker can access the network traffic",
                    "Role": "Attacker",
                    "Condition": "Network Access"
                },
                {
                    "Assumption": "Monitoring systems do not detect unauthorized modifications",
                    "Role": "Monitoring System",
                    "Condition": "Ineffective Monitoring"
                }
            ],
            "Potential Impact": "Corrupted command data resulting in unintended UAV actions.",
            "MITRE ATT&CK Keywords": [
                "Man-in-the-Middle",
                "Network",
                "Communication",
                "Tampering"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits cloud service vulnerabilities (e.g., insecure deserialization) to modify stored mission data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service has insecure deserialization vulnerability",
                    "Role": "Cloud Service",
                    "Condition": "Insecure Deserialization"
                },
                {
                    "Assumption": "The attacker can exploit the vulnerability remotely",
                    "Role": "Attacker",
                    "Condition": "Remote Exploitation"
                },
                {
                    "Assumption": "Stored data lacks integrity checks",
                    "Role": "Data Storage",
                    "Condition": "Lack of Integrity Checks"
                }
            ],
            "Potential Impact": "Manipulated mission data impacting future operations.",
            "MITRE ATT&CK Keywords": [
                "Cloud",
                "Data Tampering",
                "Exploitation",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies issuing specific commands to the UAVs, claiming the logs were tampered with.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not tamper-proof",
                    "Role": "Logging System",
                    "Condition": "Vulnerable Logging"
                },
                {
                    "Assumption": "Logs are not securely stored or backed up",
                    "Role": "Data Storage",
                    "Condition": "Insecure Storage"
                },
                {
                    "Assumption": "No robust audit trails are in place",
                    "Role": "System Auditing",
                    "Condition": "Lack of Audit Trails"
                }
            ],
            "Potential Impact": "Disruption in command accountability and trust within the system.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Accountability",
                "Audit"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies timestamps in logs to cover their tracks after an unauthorized action.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the logging system",
                    "Role": "Attacker",
                    "Condition": "Access to Logs"
                },
                {
                    "Assumption": "Logs are editable post-creation",
                    "Role": "Logging System",
                    "Condition": "Editable Logs"
                },
                {
                    "Assumption": "Insufficient integrity validation of log files",
                    "Role": "System",
                    "Condition": "Lack of Integrity Validation"
                }
            ],
            "Potential Impact": "Difficulty in tracking unauthorized actions and identifying culprits.",
            "MITRE ATT&CK Keywords": [
                "Log Manipulation",
                "Timestamp",
                "Repudiation",
                "Cover Tracks"
            ],
            "mitre_technique": {
                "name": "Timestomp",
                "description": "Adversaries may take actions to hide the deployment of new, or modification of existing files to obfuscate their activities. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools. Timestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools. (Citation: WindowsIR Anti-Forensic Techniques)",
                "id": "attack-pattern--128c55d3-aeba-469f-bd3e-c8996ab4112a",
                "technique_id": "T1099"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker impersonates an operator to issue commands, and the logs do not capture proper authentication data.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log detailed authentication data",
                    "Role": "Logging System",
                    "Condition": "Insufficient Authentication Logs"
                },
                {
                    "Assumption": "The attacker can successfully spoof operator credentials",
                    "Role": "Attacker",
                    "Condition": "Successful Spoofing"
                },
                {
                    "Assumption": "Log monitoring is infrequent",
                    "Role": "System",
                    "Condition": "Infrequent Monitoring"
                }
            ],
            "Potential Impact": "Inability to trace unauthorized commands to the proper source.",
            "MITRE ATT&CK Keywords": [
                "Authentication",
                "Log Forgery",
                "Operator Impersonation",
                "Threat Actor"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted communication between UAVs and the GCS, capturing sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Communication is transmitted without encryption",
                    "Role": "Communication System",
                    "Condition": "No Encryption"
                },
                {
                    "Assumption": "The attacker has access to the relevant communication channels",
                    "Role": "Attacker",
                    "Condition": "Network Access"
                },
                {
                    "Assumption": "The attacker can decode the captured data",
                    "Role": "Attacker",
                    "Condition": "Technical Capability"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "Communication Interception",
                "Sensitive Data",
                "Unencrypted",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a cloud service vulnerability to access and exfiltrate stored mission data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service has known vulnerabilities",
                    "Role": "Cloud Service",
                    "Condition": "Vulnerable System"
                },
                {
                    "Assumption": "The attacker can gain remote access to the cloud storage",
                    "Role": "Attacker",
                    "Condition": "Remote Access"
                },
                {
                    "Assumption": "No proper access controls are in place in the cloud environment",
                    "Role": "Cloud Service",
                    "Condition": "Weak Access Controls"
                }
            ],
            "Potential Impact": "Sensitive mission data is compromised and potentially leaked.",
            "MITRE ATT&CK Keywords": [
                "Cloud Exploitation",
                "Data Exfiltration",
                "Sensitive Information",
                "Vulnerability"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, attackers may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows the attacker to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--1c2fd73a-e634-44ed-b1b5-9e7cf7404e9f",
                "technique_id": "T1522"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider accesses mission data they are not authorized to view, bypassing access controls.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have elevated privileges",
                    "Role": "Insider",
                    "Condition": "Elevated Privileges"
                },
                {
                    "Assumption": "Access control measures are not enforced properly",
                    "Role": "Access Control System",
                    "Condition": "Weak Enforcement"
                },
                {
                    "Assumption": "No monitoring or alerting on suspicious access patterns",
                    "Role": "Monitoring System",
                    "Condition": "Lack of Monitoring"
                }
            ],
            "Potential Impact": "Unauthorized insider access to sensitive information.",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Unauthorized Access",
                "Sensitive Data",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Data from Removable Media",
                "description": "Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information. \n\nSome adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on removable media.",
                "id": "attack-pattern--1b7ba276-eedc-4951-a762-0ceea2c030ec",
                "technique_id": "T1025"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the communication channels between the UAVs and the GCS with traffic, disrupting service.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not robust against high traffic volume",
                    "Role": "Communication Infrastructure",
                    "Condition": "Lack of Robustness"
                },
                {
                    "Assumption": "The attacker has means to generate high volumes of traffic",
                    "Role": "Attacker",
                    "Condition": "Capability to Generate Traffic"
                },
                {
                    "Assumption": "No effective DDoS mitigation measures are in place",
                    "Role": "Security Measures",
                    "Condition": "Lack of DDoS Mitigation"
                }
            ],
            "Potential Impact": "Disruption of UAV communications and potentially all operations.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Communication",
                "Service Disruption",
                "Attack Traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a Linux kernel exploit in the cloud servers, causing them to crash.",
            "Assumptions": [
                {
                    "Assumption": "Servers run an unpatched version of the Linux kernel",
                    "Role": "Server",
                    "Condition": "Unpatched Servers"
                },
                {
                    "Assumption": "The attacker can remotely access the servers",
                    "Role": "Attacker",
                    "Condition": "Remote Access"
                },
                {
                    "Assumption": "No kernel exploit mitigations are in place",
                    "Role": "Security Measures",
                    "Condition": "Lack of Mitigations"
                }
            ],
            "Potential Impact": "Cloud service disruption affects the entire DaaS platform.",
            "MITRE ATT&CK Keywords": [
                "Kernel Exploit",
                "System Crash",
                "Cloud Service",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A rogue employee launches a ransomware attack on the GCS, encrypting critical system files.",
            "Assumptions": [
                {
                    "Assumption": "The employee has administrative access",
                    "Role": "Employee",
                    "Condition": "Admin Access"
                },
                {
                    "Assumption": "No anti-ransomware tools are deployed",
                    "Role": "GCS",
                    "Condition": "Lack of Protection"
                },
                {
                    "Assumption": "Backups are not regularly taken or are inaccessible",
                    "Role": "Data Backup System",
                    "Condition": "Improper Backup Procedures"
                }
            ],
            "Potential Impact": "Critical GCS functionalities are rendered unusable, ceasing all drone operations.",
            "MITRE ATT&CK Keywords": [
                "Ransomware",
                "Insider Threat",
                "Encryption",
                "System Files"
            ],
            "mitre_technique": {
                "name": "Encrypted/Encoded File",
                "description": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use.\n\nThis type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.(Citation: File obfuscation) Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding/compression schemes such as Base64.\n\nThe entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.\n\nFor example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing](https://attack.mitre.org/techniques/T1566) payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: SFX - Encrypted/Encoded File) \n\nAdversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) execution.",
                "id": "attack-pattern--0d91b3c0-5e50-47c3-949a-2a796f04d144",
                "technique_id": "T1027.013"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker utilizes an unpatched Linux exploit to gain root access on the cloud server.",
            "Assumptions": [
                {
                    "Assumption": "Cloud server runs vulnerable and unpatched Linux software",
                    "Role": "Cloud Server",
                    "Condition": "Vulnerable Software"
                },
                {
                    "Assumption": "The attacker can execute code on the server",
                    "Role": "Attacker",
                    "Condition": "Code Execution Capability"
                },
                {
                    "Assumption": "No privilege escalation protections are enforced",
                    "Role": "Security Measures",
                    "Condition": "Lack of Protections"
                }
            ],
            "Potential Impact": "Complete control over cloud infrastructure and data.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Root Access",
                "Vulnerability Exploitation",
                "Cloud Server"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits firmware vulnerabilities to take over the UAV's control system.",
            "Assumptions": [
                {
                    "Assumption": "The UAVs run firmware with known vulnerabilities",
                    "Role": "UAV",
                    "Condition": "Vulnerable Firmware"
                },
                {
                    "Assumption": "The attacker can remotely update or exploit the firmware",
                    "Role": "Attacker",
                    "Condition": "Remote Exploitation"
                },
                {
                    "Assumption": "Firmware updates are not verified for authenticity",
                    "Role": "Firmware Update System",
                    "Condition": "Lack of Verification"
                }
            ],
            "Potential Impact": "Full control over UAV, enabling unauthorized operations.",
            "MITRE ATT&CK Keywords": [
                "Firmware Exploitation",
                "Device Control",
                "Remote Access",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a vulnerability in the monitoring software to gain higher access privileges on the GCS.",
            "Assumptions": [
                {
                    "Assumption": "The monitoring software has an unpatched security hole",
                    "Role": "Monitoring Software",
                    "Condition": "Unpatched Software"
                },
                {
                    "Assumption": "The attacker can interact with the monitoring system",
                    "Role": "Attacker",
                    "Condition": "Access to System"
                },
                {
                    "Assumption": "No additional privilege checks are enforced",
                    "Role": "Security Measures",
                    "Condition": "Lack of Additional Checks"
                }
            ],
            "Potential Impact": "Administrative access to GCS, potentially compromising entire system control.",
            "MITRE ATT&CK Keywords": [
                "Software Vulnerability",
                "Access Privileges",
                "GCS",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "14",
    "batch_number": "30",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a legitimate drone operator by intercepting and manipulating communication channels between drones and the Ground Control Station (GCS).",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not using strong encryption.",
                    "Role": "Attacker",
                    "Condition": "Communication protocols are not properly secured."
                },
                {
                    "Assumption": "Weak or no multi-factor authentication in place for drone operators.",
                    "Role": "Operator",
                    "Condition": "Authentication systems are weak or missing."
                },
                {
                    "Assumption": "Attacker has access to network traffic between drones and GCS.",
                    "Role": "Attacker",
                    "Condition": "Network is insufficiently protected from eavesdropping."
                }
            ],
            "Potential Impact": "Unauthorized access to drone operations leading to potential mission compromise and data breach.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "man-in-the-middle",
                "spoofing",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the GPS signals received by the UAVs to mislead the drones about their actual location.",
            "Assumptions": [
                {
                    "Assumption": "Drones rely on unencrypted or unauthenticated GPS signals.",
                    "Role": "Drone System",
                    "Condition": "GPS signals are not securely verified."
                },
                {
                    "Assumption": "GPS signal spoofing equipment is accessible to the attacker.",
                    "Role": "Attacker",
                    "Condition": "Attacker can deploy GPS spoofing devices."
                },
                {
                    "Assumption": "There are no validation checks for GPS signal integrity onboard the drone.",
                    "Role": "Drone Manufacturer",
                    "Condition": "Security features to validate GPS signals are missing."
                }
            ],
            "Potential Impact": "Misrouting or loss of drone, leading to mission failure and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "signal",
                "man-in-the-middle",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers impersonate cloud service providers to trick drones or GCS into sending data to malicious endpoints.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service API endpoints are vulnerable to DNS spoofing.",
                    "Role": "Network Administrator",
                    "Condition": "DNS settings are misconfigured or unsecured."
                },
                {
                    "Assumption": "Drones or GCS lack endpoint verification mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Endpoint verification features are not implemented."
                },
                {
                    "Assumption": "Attacker has the capability to alter DNS responses.",
                    "Role": "Attacker",
                    "Condition": "DNS infrastructure is not secured against manipulation."
                }
            ],
            "Potential Impact": "Data exfiltration and potential remote control of drones, leading to exposure of sensitive information and operational disruption.",
            "MITRE ATT&CK Keywords": [
                "cloud",
                "spoofing",
                "DNS",
                "network",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the drone firmware by exploiting vulnerabilities and uploading malicious firmware updates.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update mechanisms are not securely validated.",
                    "Role": "Firmware Developer",
                    "Condition": "Weak or absent digital signature checks."
                },
                {
                    "Assumption": "Firmware vulnerabilities are exploitable.",
                    "Role": "Attacker",
                    "Condition": "Publicly known or zero-day vulnerabilities."
                },
                {
                    "Assumption": "Access to the drones\u2019 firmware update process is possible.",
                    "Role": "Attacker",
                    "Condition": "Insufficient access control mechanisms."
                }
            ],
            "Potential Impact": "Compromise of drone functionality, leading to potential data corruption and unauthorized control.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "injection",
                "device",
                "update"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious insiders might tamper with the data communication lines between the GCS and the cloud services to alter mission-critical data.",
            "Assumptions": [
                {
                    "Assumption": "Internal staff have inappropriate access levels.",
                    "Role": "System Administrator",
                    "Condition": "Access control policies are weak or nonexistent."
                },
                {
                    "Assumption": "Data communication does not use end-to-end encryption.",
                    "Role": "System Architect",
                    "Condition": "Encryption protocols are not implemented."
                },
                {
                    "Assumption": "Insufficient monitoring of communication channels.",
                    "Role": "Security Team",
                    "Condition": "Lack of real-time network monitoring and audit trails."
                }
            ],
            "Potential Impact": "Data integrity issues leading to inaccurate mission data and corrupted decision-making processes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data manipulation",
                "insider threat",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could exploit known NVD CVEs to tamper with the drones\u2019 Linux-based operating systems, leading to potential unauthorized code execution.",
            "Assumptions": [
                {
                    "Assumption": "Drones use outdated or vulnerable Linux distributions.",
                    "Role": "System Administrator",
                    "Condition": "Failure to apply timely security patches."
                },
                {
                    "Assumption": "Attacker has access to the network hosting the drones.",
                    "Role": "Attacker",
                    "Condition": "Weak network security measures."
                },
                {
                    "Assumption": "Linux CVE vulnerabilities are exploitable.",
                    "Role": "Vulnerability Researcher",
                    "Condition": "Exploits for known vulnerabilities are available."
                }
            ],
            "Potential Impact": "Unauthorized code execution leading to full compromise of drone systems and potential mission failure.",
            "MITRE ATT&CK Keywords": [
                "Linux",
                "tampering",
                "exploitation",
                "vulnerability",
                "device"
            ],
            "mitre_technique": {
                "name": "Malicious Shell Modification",
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user\u2019s shell. User shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command line interface or remotely logs in (such as SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user\u2019s home directory (~/) to configure the environment. All login shells on a system use <code>/etc/profile</code> when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user\u2019s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files (Citation: intezer-kaiji-malware). These files require root permissions and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> (Rocke) which are sourced when a user opens a command line interface or connects remotely. Adversaries often use ~/.bash_profile since the system only executes the first file that exists in the listed order. Adversaries have also leveraged the <code>~/.bashrc</code> file (Tsunami, Rocke, Linux Rabbit, Magento) which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command line interface. Some malware targets the termination of a program to trigger execution (Cannon), adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session(Pearl_shellbot). \n\nFor macOS, the functionality of this technique is similar but leverages zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>. The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc<code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.",
                "id": "attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8",
                "technique_id": "T1156"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies involvement in unauthorized drone commands and data alterations by exploiting weak logging and auditing mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are weak or nonexistent.",
                    "Role": "System Architect",
                    "Condition": "Auditing and logging not properly implemented or maintained."
                },
                {
                    "Assumption": "Attackers have the ability to alter logs.",
                    "Role": "Attacker",
                    "Condition": "Access control on audit logs is weak."
                },
                {
                    "Assumption": "No tamper-evident mechanisms in place.",
                    "Role": "Security Engineer",
                    "Condition": "Logging system lacks integrity checks."
                }
            ],
            "Potential Impact": "Difficulties in forensics, leading to issues in detecting and proving malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "auditing",
                "logging",
                "forensic",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators might deny sending certain commands if the GCS logs can be tampered with or deleted.",
            "Assumptions": [
                {
                    "Assumption": "GCS does not have immutable logging.",
                    "Role": "System Architect",
                    "Condition": "Logging system design lacks tamper resistance."
                },
                {
                    "Assumption": "Operators have sufficient permissions to alter logs.",
                    "Role": "Operator",
                    "Condition": "Access controls are inadequately enforced."
                },
                {
                    "Assumption": "Tamper-detection mechanisms are not implemented.",
                    "Role": "Security Engineer",
                    "Condition": "Absence of tamper-evident features in logging system."
                }
            ],
            "Potential Impact": "Lack of accountability and difficulties in incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "operation commands",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could manipulate application logs to hide malicious activities involving unauthorized access to sensitive drone data stored on cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service logging lacks encryption and integrity verification.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Logging features are not securely implemented."
                },
                {
                    "Assumption": "Attackers can gain sufficient privileges on the cloud platform.",
                    "Role": "Attacker",
                    "Condition": "Security of cloud platform account management is weak."
                },
                {
                    "Assumption": "Monitoring mechanisms do not detect log alterations.",
                    "Role": "Security Team",
                    "Condition": "Log monitoring and alerts are not effectively set up."
                }
            ],
            "Potential Impact": "Concealment of data breaches and unauthorized activities, leading to unnoticed data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud",
                "log tampering",
                "data breach",
                "audit"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data collected by the UAV sensors and cameras is intercepted during transmission to the GCS.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without strong encryption.",
                    "Role": "System Architect",
                    "Condition": "Weak or absent encryption protocols."
                },
                {
                    "Assumption": "Network is susceptible to eavesdropping.",
                    "Role": "Network Administrator",
                    "Condition": "Network lacks adequate security measures."
                },
                {
                    "Assumption": "Sensitive data is transmitted in cleartext.",
                    "Role": "System Designer",
                    "Condition": "No data masking or encryption in place."
                }
            ],
            "Potential Impact": "Unauthorized access to and exposure of sensitive data, leading to privacy breaches or strategic information leakage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "eavesdropping",
                "network",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attackers exploit vulnerabilities in cloud storage services to access sensitive drone data stored in the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage configuration is not securely set up.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Misconfiguration or weak settings in cloud storage."
                },
                {
                    "Assumption": "Vulnerabilities in cloud services are not patched.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Delayed application of security patches."
                },
                {
                    "Assumption": "Sensitive data is stored without encryption.",
                    "Role": "System Architect",
                    "Condition": "Data storage lacks encryption measures."
                }
            ],
            "Potential Impact": "Exposure of sensitive information leading to intellectual property theft or strategic data loss.",
            "MITRE ATT&CK Keywords": [
                "cloud",
                "information disclosure",
                "data breach",
                "unauthorized access",
                "storage"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insider threats use their authorized access to exfiltrate sensitive drone data analyzed and stored within the corporate network.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have legitimate but excessive access rights.",
                    "Role": "Network Administrator",
                    "Condition": "Access control policies are inadequately defined."
                },
                {
                    "Assumption": "No effective data leakage prevention (DLP) mechanisms.",
                    "Role": "Security Team",
                    "Condition": "Absence of DLP tools to monitor data outflows."
                },
                {
                    "Assumption": "Network monitoring for suspicious insider activity is weak.",
                    "Role": "Security Analyst",
                    "Condition": "Insufficient insider threat detection capabilities."
                }
            ],
            "Potential Impact": "Unnoticed data exfiltration leading to loss of sensitive data and confidential information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "data exfiltration",
                "network",
                "corporate network"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Network-based attacks (e.g., DDoS) disrupt communication between drones and the GCS, leading to loss of control over drone operations.",
            "Assumptions": [
                {
                    "Assumption": "Network is not adequately fortified against DDoS attacks.",
                    "Role": "Network Administrator",
                    "Condition": "Network lacks sufficient DDoS protection measures."
                },
                {
                    "Assumption": "Communication protocols between drones and GCS are vulnerable.",
                    "Role": "System Architect",
                    "Condition": "Insecure communication protocols."
                },
                {
                    "Assumption": "Attackers have access to significant bandwidth resources.",
                    "Role": "Attacker",
                    "Condition": "Attacker can deploy large-scale DDoS tactics."
                }
            ],
            "Potential Impact": "Service disruption causing mission failure and potential operational hazards.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Denial of Service",
                "network",
                "communication",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Firmware vulnerabilities are exploited to crash drones\u2019 systems, rendering them inoperable during critical missions.",
            "Assumptions": [
                {
                    "Assumption": "Firmware lacks robust security updates.",
                    "Role": "Firmware Developer",
                    "Condition": "Failure to regularly update firmware with security patches."
                },
                {
                    "Assumption": "Firmware contains exploitable flaws.",
                    "Role": "Vulnerability Researcher",
                    "Condition": "Presence of known or zero-day vulnerabilities."
                },
                {
                    "Assumption": "Attacker can remotely access drone systems.",
                    "Role": "Attacker",
                    "Condition": "Remote access to drone systems is feasible."
                }
            ],
            "Potential Impact": "Operational disruption resulting in mission abort and potential loss of drones.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "firmware",
                "exploitation",
                "device",
                "hardware"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers exploit cloud service vulnerabilities to overload and disrupt data processing and analytics services integral to the DaaS platform.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service is susceptible to resource exhaustion.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Cloud infrastructure lacks adequate resource protections."
                },
                {
                    "Assumption": "Attackers can generate excessive loads on cloud services.",
                    "Role": "Attacker",
                    "Condition": "Ability to deploy high-volume resource exhaustion techniques."
                },
                {
                    "Assumption": "Intrusion detection mechanisms are ineffective.",
                    "Role": "Security Team",
                    "Condition": "Lack of effective intrusion and anomaly detection systems."
                }
            ],
            "Potential Impact": "Service interruption affecting data processing, storage, and analysis, leading to possible operational delays.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "cloud",
                "resource exhaustion",
                "service disruption",
                "analytics"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits vulnerabilities in the Linux OS used by the drones to gain root privileges and take full control.",
            "Assumptions": [
                {
                    "Assumption": "Linux vulnerabilities are not patched.",
                    "Role": "System Administrator",
                    "Condition": "Delayed or missed security updates."
                },
                {
                    "Assumption": "Attackers can access drone\u2019s operating system.",
                    "Role": "Attacker",
                    "Condition": "Accessible attack vectors are available."
                },
                {
                    "Assumption": "No strong access control mechanisms in place.",
                    "Role": "System Designer",
                    "Condition": "Insufficient access control and privilege separation."
                }
            ],
            "Potential Impact": "Complete control takeover of the drone systems, leading to unauthorized operations and potential data tampering.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "root access",
                "Linux",
                "vulnerability",
                "escalation"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Insiders with legitimate access can misuse their privileges to perform unauthorized changes on the GCS, enabling potential sabotage or espionage.",
            "Assumptions": [
                {
                    "Assumption": "Insider has administrative privileges.",
                    "Role": "Insider",
                    "Condition": "Access control policies allow extensive access."
                },
                {
                    "Assumption": "No stringent monitoring of privileged activities.",
                    "Role": "Security Team",
                    "Condition": "Absence of activity logging and monitoring."
                },
                {
                    "Assumption": "Privileges are not limited based on role.",
                    "Role": "Network Administrator",
                    "Condition": "Access permissions not granularly managed."
                }
            ],
            "Potential Impact": "Unauthorized system changes leading to compromised operations and potential information theft.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "insider threat",
                "GCS",
                "sabotage",
                "espionage"
            ],
            "mitre_technique": {
                "name": "Software Deployment Tools",
                "description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.  \n\nAccess to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nSaaS-based configuration management services may allow for broad [Cloud Administration Command](https://attack.mitre.org/techniques/T1651) on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Azure AD.(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020) Such services may also utilize [Web Protocols](https://attack.mitre.org/techniques/T1071/001) to communicate back to adversary owned infrastructure.(Citation: Mitiga Security Advisory: SSM Agent as Remote Access Trojan)\n\nNetwork infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
                "id": "attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414",
                "technique_id": "T1072"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting cloud service misconfigurations, attackers escalate privileges to gain broader access to sensitive data and control mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service configurations are flawed.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Misconfigurations or weak security settings present."
                },
                {
                    "Assumption": "Attackers can manipulate access control settings.",
                    "Role": "Attacker",
                    "Condition": "Possible to exploit weak access settings."
                },
                {
                    "Assumption": "Effective monitoring of cloud service actions is lacking.",
                    "Role": "Security Team",
                    "Condition": "Inadequate monitoring of cloud service activities."
                }
            ],
            "Potential Impact": "Broad unauthorized access leading to significant data breaches and potential control over cloud-managed systems.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "cloud",
                "misconfiguration",
                "access control",
                "breach"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        }
    ]
}
]